##language:zh
#pragma section-numbers off
||'''status'''|| 校对 || Lizzie|| 完成度100%||

[[TableOfContents]]

##startInc
= PCS106 文件对象 =
== 概述 ==
对文件的操作主要是对文件的读取和写入，当然还有其他的操作，可以通过help("file")查看。

== 使用 ==
=== 写文件 ===
首先看个写文件的例子，实现了每隔2秒钟向test中写入一个随机数的功能。
{{{#!python
# -*- coding: utf-8 -*-
#实现每隔2秒钟向test中写入一个随机数。
import random
import time

def write_f():
    file = open("test", "a")
    while 1:
        afloat = random.random()
        print afloat
        file.write('%s\n' % afloat)
        file.flush()
        time.sleep(2)
    file.close()

if __name__ == '__main__':
    write_f()
}}}
`write(str)`：返回为None，将一字符串str写入文件中。

`flush()`：返回None，把I/O缓冲区的内容写入磁盘文件中，这才是真正写入文件。

`close()`：返回None或一个整数，关闭文件。

=== 读文件 ===
和上述例子对应的是每秒钟读取test中的内容。
{{{#!python
# -*- coding: utf-8 -*-
#实现每隔1秒钟读取test中的内容。
import time

def read_f():
    file = open("test", "r")
    while 1:
        content = file.readline()
        if not content:
            time.sleep(1)
        else:
            print content
    file.close()

if __name__ == '__main__':
    read_f()
}}}
`readline()`：返回下一行的内容， 作为字符串，若当前文件指针已为行末，则返回None。

=== 文件打开方式 ===
在上述两个例子中，使用`a`方式打开文件，使得其内容不断更新。使用`r`方式则表只读方式，只能读取文件内容。
 * r：以只读方式打开已存在文件，若文件不存在则抛出异常。此方式是默认方式。
 * w：以可写方式打开存在或者不存在的文件。若文件不存在则先新建该文件，若文件存在则覆盖该文件。
 * a：用于追加，对*ix系统而言，所有的内容都将追加到文件末尾而不管探针的当前位置如何。
 * b：以二进制方式打开。打开一个二进制文件必须用该模式。增加b模式是用来兼容系统对当二进制和文本文件的处理不同。
 * r+,w+和a+：以更新方式打开文件（注意w+覆盖文件）

== 小结 ==
对文件的操作是经常要用到的，主要是对文件的读取，写入操作。还有很多的文件操作函式，在这简略，可以通过help(file)查看。
 * File Objects: http://docs.python.org/lib/bltin-file-objects.html
 * 精巧地址: http://bit.ly/3rh8kf
 * 与文件对象共事: http://www.woodpecker.org.cn/diveintopython/file_handling/file_objects.html
 * 精巧地址: http://bit.ly/1e41SW
##endInc
----
::Lizzie [2008/06/20 13:24:00]
[[PageComment2]]
