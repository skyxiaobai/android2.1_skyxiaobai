##language:zh
#pragma section-numbers off

||status|| 草稿 ||清风 & liz; 100%||

[[TableOfContents]]
##startInc
= PCS209 fnmatch =
== 概述 ==
fnmatch 实现了shell patterns表匹配字符串或文件名.
##这里的shell patterns是否翻译出来？fnmatch - Filename matching with shell patterns.

== 使用 ==
=== fnmatch(name, pattern) ===
函式功能:测试name是否匹配pattern，匹配返回true，否则返回false。
{{{
>>>import fnmatch
# 匹配以.py结尾的字符串
>>>fnmatch.fnmatch('*py','*.py')  
False  
>>>fnmatch.fnmatch('tlie.py','*.py')  
True
}}}注意:匹配样式是unix shell风格的.其中"*"表示匹配零个或多个字符."?"表示匹配单个字符;"[seq]"匹配单个seq中的字符;"[!seq]"匹配单个不是seq中的字符

=== filter(names, pat) ===
函式功能:实现列表特殊字符的过滤或筛选,返回符合匹配模式的字符列表
{{{
>>>import fnmatch
>>>names = ['dlsf', 'ewro.txt', 'te.py', 'youe.py']  
# 匹配以.py结尾的字符串
>>> fnmatch.filter(names, '*.py')  
['te.py', 'youe.py']
>>> fnmatch.filter(names, '[de]')  
[]  
# 匹配以d或e开头的字符串  
>>>fnmatch.filter(names, '[de]*')  
['dlsf', 'ewro.txt']
}}}

=== fnmatchcase(name, pat) ===
函式功能:和fnmatch()类似，只是fnmatchcase强制区分大小写匹配，不管文件系统是否区分。
{{{
>>> import fnmatch
# 匹配以R开头的字符串
>>> fnmatch.fnmatchcase('readme', 'R*')
False
>>> fnmatch.fnmatchcase('Readme', 'R*')
True
}}}

=== translate(pat) ===
函式功能:将pat转换成正则表达式
{{{
>>> import fnmatch
>>> fnmatch.translate('*.py')
'.*\\.py$'
}}}

##endInc
