<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet ekr_stylesheet?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="929" clone_windows="0"/>
<globals body_outline_ratio="0.273175542406">
	<global_window_position top="40" left="10" height="698" width="1014"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="Zoomq.20050615144554" a="E"><vh>KarrigellWebDev</vh>
<v t="ZoomQuiet.20051224164500"><vh>Kday4:KS</vh></v>
<v t="ZoomQuiet.20051201224226"><vh>问卷设计</vh>
<v t="ZoomQuiet.20051204223324" tnodeList="ZoomQuiet.20051204223324"><vh>@nosent easy051201.cfg</vh></v>
<v t="ZoomQuiet.20051224182004" tnodeList="ZoomQuiet.20051224182004"><vh>@nosent CPUG051211.cfg</vh></v>
<v t="ZoomQuiet.20051224182004.1" tnodeList="ZoomQuiet.20051224182004.1"><vh>@nosent Python051221.cfg</vh></v>
</v>
<v t="ZoomQuiet.20051222120608" a="E"><vh>复用代码</vh>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.14" a="TV"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224170150" tnodeList="ZoomQuiet.20051224170150"><vh>@nosent questionnaire.cfg</vh></v>
<v t="ZoomQuiet.20051224165357" a="E"><vh>KS</vh>
<v t="ZoomQuiet.20051224165419" a="E" tnodeList="ZoomQuiet.20051224165419,ZoomQuiet.20051224165419.1,ZoomQuiet.20051224165419.2,ZoomQuiet.20051224171010,ZoomQuiet.20051224171010.1,ZoomQuiet.20051224171010.2,ZoomQuiet.20051224171010.3,ZoomQuiet.20051224171010.4,ZoomQuiet.20051224171010.5,ZoomQuiet.20051224165419.9,ZoomQuiet.20051224165419.10,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.11,ZoomQuiet.20051224165419.12,ZoomQuiet.20051224181034,ZoomQuiet.20051224181034.1,ZoomQuiet.20051224165419.13,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.25,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.26,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.27,ZoomQuiet.20051224165419.28,ZoomQuiet.20051224165419.16,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.15"><vh>@nosent index.ks</vh>
<v t="ZoomQuiet.20051224165419.1" a="E"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.9"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.10"><vh>index</vh>
<v t="ZoomQuiet.20051224165419.11"><vh>&lt;&lt;页面事务&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.12" a="E"><vh>列显问卷</vh>
<v t="ZoomQuiet.20051224181034"><vh>&lt;&lt;发表的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224181034.1"><vh>&lt;&lt;回收的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.13"><vh>&lt;&lt;准备的&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.25"><vh>login</vh>
<v t="ZoomQuiet.20051224165419.26"><vh>表单</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.27"><vh>logout</vh></v>
<v t="ZoomQuiet.20051224165419.28"><vh>chkusr</vh></v>
<v t="ZoomQuiet.20051224165419.16"><vh>page</vh>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247"><vh>管理</vh>
<v t="ZoomQuiet.20051222105247.1" a="E"><vh>@thin __init__.py</vh></v>
<v t="ZoomQuiet.20051222115430" tnodeList="ZoomQuiet.20051222115430"><vh>@nosent tryKQF.py</vh></v>
<v t="ZoomQuiet.20051222105247.2" tnodeList="ZoomQuiet.20051222105247.2,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7"><vh>@nosent  mana.pih</vh>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.3" a="E" tnodeList="ZoomQuiet.20051222105247.3"><vh>@nosent questionnaire.tmpl</vh></v>
<v t="ZoomQuiet.20051222105247.4" tnodeList="ZoomQuiet.20051222105247.4,ZoomQuiet.20051222105247.5,ZoomQuiet.20051222105247.6,ZoomQuiet.20051222105247.7"><vh>@nosent  qdesign.py</vh>
<v t="ZoomQuiet.20051222105247.5"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.6"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.7"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.8" tnodeList="ZoomQuiet.20051222105247.8,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.15,ZoomQuiet.20051222105247.15"><vh>@nosent  qpage.pih</vh>
<v t="ZoomQuiet.20051222105247.15"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.16" tnodeList="ZoomQuiet.20051222105247.16,ZoomQuiet.20051222105247.17,ZoomQuiet.20051222105247.18,ZoomQuiet.20051222105247.19,ZoomQuiet.20051222105247.20,ZoomQuiet.20051222105247.21,ZoomQuiet.20051222105247.22"><vh>@nosent  qpage.py</vh>
<v t="ZoomQuiet.20051222105247.17"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.18"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.19"><vh>expage</vh>
<v t="ZoomQuiet.20051222105247.20"><vh>desc</vh></v>
<v t="ZoomQuiet.20051222105247.21"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.22" a="E"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.23" a="E" tnodeList="ZoomQuiet.20051222105247.23,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.24,ZoomQuiet.20051222105247.24"><vh>@nosent  qprint.pih</vh>
<v t="ZoomQuiet.20051222105247.24"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.25" tnodeList="ZoomQuiet.20051222105247.25,ZoomQuiet.20051222105247.26,ZoomQuiet.20051222105247.27,ZoomQuiet.20051222105247.28,ZoomQuiet.20051222105247.29,ZoomQuiet.20051222105247.30"><vh>@nosent  qprint.py</vh>
<v t="ZoomQuiet.20051222105247.26"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.27"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.28" a="E"><vh>qpubish()</vh>
<v t="ZoomQuiet.20051222105247.29"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.30"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051222115335"><vh>KQf</vh>
<v t="ZoomQuiet.20051222115335.1" a="E" tnodeList="ZoomQuiet.20051222115335.1,ZoomQuiet.20051222115335.2,ZoomQuiet.20051222115335.3,ZoomQuiet.20051222115335.4,ZoomQuiet.20051222115335.5,ZoomQuiet.20051222115335.6,ZoomQuiet.20051222115335.7,ZoomQuiet.20051222115335.8,ZoomQuiet.20051222115335.9,ZoomQuiet.20051222115335.10,ZoomQuiet.20051222115335.11,ZoomQuiet.20051222115335.12,ZoomQuiet.20051222115335.13,ZoomQuiet.20051222115335.14,ZoomQuiet.20051222115335.15,ZoomQuiet.20051222115335.16,ZoomQuiet.20051222115335.17,ZoomQuiet.20051222115335.18,ZoomQuiet.20051222115335.19,ZoomQuiet.20051222115335.20,ZoomQuiet.20051222115335.21,ZoomQuiet.20051222115335.22,ZoomQuiet.20051222115335.23,ZoomQuiet.20051222115335.24,ZoomQuiet.20051222115335.25,ZoomQuiet.20051222115335.26,ZoomQuiet.20051222115335.27,ZoomQuiet.20051222115335.28,ZoomQuiet.20051222115335.29,ZoomQuiet.20051222115335.30,ZoomQuiet.20051222115335.31,ZoomQuiet.20051222115335.32,ZoomQuiet.20051222115335.33,ZoomQuiet.20051222115335.34,ZoomQuiet.20051222115335.35,ZoomQuiet.20051222115335.36,ZoomQuiet.20051222115335.37,ZoomQuiet.20051222115335.38,ZoomQuiet.20051222115335.40,ZoomQuiet.20051222115335.41,ZoomQuiet.20051222115335.42,ZoomQuiet.20051222115335.43"><vh>@nosent Karrigell_QuickForm.py</vh>
<v t="ZoomQuiet.20051222115335.2" a="E"><vh>&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.3" a="E"><vh>class Karrigell_QuickForm</vh>
<v t="ZoomQuiet.20051222115335.4"><vh>__init__</vh>
<v t="ZoomQuiet.20051222115335.5"><vh>&lt;&lt;JVF&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.6"><vh>addElement</vh>
<v t="ZoomQuiet.20051222115335.7"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.8"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.9"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.10"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.11"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.12"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.13"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.14"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.15"><vh>addHtmNode</vh>
<v t="ZoomQuiet.20051222115335.16"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.17"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.18"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.19"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.20"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.21"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.22"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.23"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.24"><vh>addTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.25"><vh>addCntTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.26"><vh>addGroup</vh></v>
<v t="ZoomQuiet.20051222115335.27" a="E"><vh>addComboBox</vh></v>
<v t="ZoomQuiet.20051222115335.28"><vh>addRadioGroup</vh></v>
<v t="ZoomQuiet.20051222115335.29" a="E"><vh>addRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.30" a="E"><vh>addRadioLi</vh></v>
<v t="ZoomQuiet.20051222115335.31" a="E"><vh>addVarRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.32" a="E"><vh>addRadioGrp</vh></v>
<v t="ZoomQuiet.20051222115335.33"><vh>addCheckboxGrp</vh></v>
<v t="ZoomQuiet.20051222115335.34"><vh>showFormList</vh></v>
<v t="ZoomQuiet.20051222115335.35"><vh>display</vh></v>
<v t="ZoomQuiet.20051222115335.36"><vh>export</vh></v>
<v t="ZoomQuiet.20051222115335.37"><vh>addStyleSheets</vh></v>
<v t="ZoomQuiet.20051222115335.38"><vh>addRule</vh>
<v t="ZoomQuiet.20051222115335.39"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.40"><vh>&lt;&lt;input&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.41"><vh>addJSValidation</vh></v>
<v t="ZoomQuiet.20051222115335.42"><vh>addJSRule</vh></v>
<v t="ZoomQuiet.20051222115335.43"><vh>saveJSRule</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="ZoomQuiet.20051201224226"># 使用标准
# 这个是Leo 的宏约定，让Leo 将以下的节点及时的保存到指定目录中
@path q

</t>
<t tx="ZoomQuiet.20051204223324">[desc]
pname		= 啄木鸟问卷 之 “基本知晓”
desc		= 自学问卷v0.7
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 1

[ask/1]
question= 啄木鸟社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= a # 正确答案

[ask/2]
question= 啄木鸟社区关注的是什么语言的开发推广？
a		= PHP
b		= Perl
c       = Python
d       = ASP
e       = Zope
f		= 不知道……
key		= c # 正确答案

[ask/3]
question= 啄木鸟和CPyUG的关系是？
a		= 联盟
b		= 下属
c		= 所有者
d		= 不知道……
key		= a # 正确答案

[ask/4]
question= 啄木鸟社区的项目组织原则是什么？
a		= 路见不平一声吼！
b		= 听从组织安排
c		= 不知道……
key		= a # 正确答案

[ask/5]
question= 啄木鸟社区提供了什么资源供大家使用？
a		= Wiki
b		= SVN
c       = 邮件列表
d       = 以上全有
key		= d # 正确答案</t>
<t tx="ZoomQuiet.20051222105247">#一步接一步自然的来
"""
1. 组织首页 mana.pih
2. 嵌入表单 使用模板 questionnaire.tmpl
3. 创建处理脚本 qdesign.py
... 然后就瀑布样的该作什么就作什么了(^_^)
"""
@path ./</t>
<t tx="ZoomQuiet.20051222105247.2">&lt;html&gt;
&lt;head&gt;
&lt;&lt;k_base&gt;&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;
&lt;h1&gt;在线编辑问卷设计文案，自动解析为模拟问卷&lt;/h1&gt;

&lt;%# 最简单的方式将实际处理脚本包含到页面中适当的位置
Include("qdesign.py")
%&gt;

&lt;%"""
#可以随意包含测试输出哪！
# 嗬嗬也可以随时进行方便的多行注释
print dir()
"""
%&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;



</t>
<t tx="ZoomQuiet.20051222105247.3">&lt;FORM ENCTYPE="multipart/form-data" 
    ACTION="qpage.pih" 
    METHOD=POST&gt;

编辑问卷设计文本: &lt;br&gt;
&lt;textarea NAME="cfgfile" rows="27" COLS="80"&gt;
$cfgtxt
&lt;/textarea&gt;
&lt;br/&gt;

&lt;INPUT TYPE="submit" VALUE=" &gt;提交设计查看问卷效果&lt; " class="btn"&gt; 

&lt;/form&gt;
</t>
<t tx="ZoomQuiet.20051222105247.4">@ $Id: obpKwd4.leo 325 2005-12-30 04:23:49Z  $
qdesign.py 快捷问卷设计
@c

&lt;&lt; page declarations &gt;&gt;

@others


&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.5">#!/usr/bin/env python
# coding:utf-8

import time,datetime
import sys,os,string,re
from Cheetah.Template import Template as ctTpl


#sys.path.append("/usr/local/www/data/karriweb/src/plugin")
# /usr/local/www/data/warder/questionnaire
#from karriweb import *

#from agentweb import *
#from agentsys import *
from dict4ini import DictIni

</t>
<t tx="ZoomQuiet.20051222105247.6">#初始化参数集中维护！
qpath = "q/"
pubq = qpath+"easy051201.cfg"
</t>
<t tx="ZoomQuiet.20051222105247.7">page = open("questionnaire.tmpl","r").read()
vPool = {}
vPool['cfgtxt'] = open(pubq,"r").read()
txp = ctTpl(page, searchList=[vPool])
print txp

#print dir()
qcfg = DictIni(pubq)
#print len(qcfg)
#print qcfg.desc.learn</t>
<t tx="ZoomQuiet.20051222105247.8">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;&lt;k_base&gt;&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;h1&gt;自动解析成的模拟问卷&lt;/h1&gt;

&lt;!--
# 咔咔咔！！Leo 支持中文节点定义的哪！
--&gt;
&lt;&lt;导航&gt;&gt;

&lt;%
Include("qpage.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;

</t>
<t tx="ZoomQuiet.20051222105247.15">
&lt;h5&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面]修改试题&lt;/a&gt; 
 |&gt; 
&lt;a href="qprint.pih"&gt;
 查看最终效果&lt;/a&gt;
 |&gt; 
&lt;/h5&gt;</t>
<t tx="ZoomQuiet.20051222105247.16">@ $Id: obpKwd4.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c

&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.17">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

from dict4ini import DictIni</t>
<t tx="ZoomQuiet.20051222105247.18">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.19">def expage(dict):
    """将dict 内容输出为问卷
    """
    exp = ""
    exp += "&lt;div id='qpage'&gt;"
    @others
    exp += "&lt;/div&gt;" # id=qpage
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.20">exp += """&lt;h3&gt;%s —— 
    &lt;sup&gt;%s&lt;/sup&gt;
    &lt;sub&gt;%s&lt;/sub&gt;&lt;/h3&gt;"""%(dict.desc.pname
                            ,dict.desc.desc
                            ,dict.desc.learn)


</t>
<t tx="ZoomQuiet.20051222105247.21">#print dict.ask["1"]
exp +="&lt;ul&gt;"
# 将字串的字典键值依照数字方式排序
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    exp +="&lt;li&gt;%s"%ask["question"]
    exp +="&lt;SUP&gt;正确答案::%s&lt;/SUP&gt;"%ask["key"]
    #unicode(str(dict.ask[i]["question"]), "utf8").encode("utf8")
    exp +="&lt;ul&gt;"
    qk = [j for j in ask.keys()]
    qk.sort()
    #name="animal[]"
    for q in qk:
        if 1==len(q):
            exp +="&lt;li&gt;%s"%ask[q]
        else:
            pass
    exp +="&lt;/ul&gt;"
    exp +="&lt;/li&gt;"
exp +="&lt;/ul&gt;"

</t>
<t tx="ZoomQuiet.20051222105247.22">open(pubq,"w").write(QUERY["cfgfile"])
qcfg = DictIni(cfgf)
print expage(qcfg)
print "&lt;hr/&gt;"

# 测试...
#print dir()
#print QUERY["cfgfile"]
#print qcfg.desc
</t>
<t tx="ZoomQuiet.20051222105247.23">&lt;html&gt;
&lt;head&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;!--发现在IE中如果在中文出现后再声明就会有问题，BS哪！--&gt;
&lt;title&gt;

&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;

&lt;&lt;k_base&gt;&gt;
&lt;script language="javascript" src="/jvf/validation-framework.js"&gt;
&lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;&lt;导航&gt;&gt;

&lt;%
Include("qprint.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;
</t>
<t tx="ZoomQuiet.20051222105247.24">
&lt;h4&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面] 修改试题
&lt;/a&gt;
 |&gt; 
&lt;a href="index.ks/logout"&gt;
退出&lt;/a&gt;
&lt;/h4&gt;</t>
<t tx="ZoomQuiet.20051222105247.25">@ $Id: obpKwd4.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c
&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.26">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

#sys.path.append("../../karriweb/src/core")
#from agentweb import *
#from agentsys import *

from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm</t>
<t tx="ZoomQuiet.20051222105247.27">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())
tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
#shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.28">def qpubish(dict):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST','#',dict.desc.desc)
    exp += "&lt;h1&gt;%s&lt;sup&gt;学习资料::%s&lt;/sup&gt;&lt;/h1&gt;"%(dict.desc.pname
                                       ,dict.desc.learn)    
    
    #exp += "&lt;H6&gt;返回%s&lt;/H6&gt;"%dict.desc.learn
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    @others    
    p.addElement('node','&lt;/ul&gt;','')
    
    # 无良的迁就……
    p.addJSValidation()
    p.saveJSRule("../js/validation-config.xml")
    
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])
    exp += p.export()
    
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.29">"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass
    
    p.addRadioList("cr_ask%s"%i
               ,ask["question"]
               ,qli)
    p.addJSRule("cr_ask%s"%i,"问题%s "%i)

</t>
<t tx="ZoomQuiet.20051222105247.30">#open(qpath+pubq,"w").write(QUERY["cfgfile"])
#print dir()
#print QUERY
qcfg = DictIni(cfgf)
print "&lt;div id='qpage'&gt;"
#print p.export()
print "&lt;div id='errorDiv'&gt;&lt;/div&gt;"

print qpubish(qcfg)
print "&lt;/div&gt;"

"""
p = Karrigell_QuickForm('fm_kq','POST','#',qcfg.desc.pname)
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})

p.addGroup(["submit","btn_submit","提交"]
           ,["reset","btn_reset","重写"])
#p.display()
"""
</t>
<t tx="ZoomQuiet.20051222115335"># 按照约定，这样的扩展要部属到Karrigell 的根目录，所以使用相对路径回溯指向！
@path ../../../</t>
<t tx="ZoomQuiet.20051222115335.1">
&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;

@others

"""
   Overview - Karrigell_QuickForm
   
  p = Karrigell_QuickForm('teste','POST','teste.py')
  p.addElement('text','nome',{'size':80,'maxlength':20})
  p.addElement('text','email',{'size':80,'maxlength':20})
  p.addRule('nome','required','campo nome obrigario!')
  p.addComboBox('combo',{'a':'A','b':'B'})
  p.addCheckBox('fuda',{'a':'Letra A','b':'Letra B'})
  p.addElement('image','python.gif')
  p.addElement('file','foto')
  p.addElement('submit','botao_enviar',{'value':'Enviar A'})
  p.addComboBox('sexo',['Masculino','Masculino'],['Feminino','Feminino'])
  p.addTextArea('mensagem','20','80')
  p.addGroup(["submit","botao_enviar","Enviar"],["reset","botao_limpar","Limpar"])
  p.addStyleSheets({'bgcolor':'lightblue','font':'verdana','border-color':'black'})
  p.display()
 
"""
</t>
<t tx="ZoomQuiet.20051222115335.2">#@ignore
#@language python
"""
     Package: Karrigell_QuickForm-1.0.1-alpha
Requirements: Karrigell HTTP Server - http://karrigell.sourceforge.net
 Description: - A simple class that generates html forms with some basic javascript validations. 
              - It is similar to HTML_QuickForm from PEAR (http://pear.php.net).   
      Author: Marcelo Santos Araujo &lt;marcelo@orionlab.net&gt; 
        Date: 23 November 2005
     Version: $Revision Karrigell_QuickForm-1.0.1-alfa
     Credits: Special thanks to Pierre Quentel and Karrigell's developers.
 Contributor: Zoom.Quiet &lt;Zoom.Quiet@gmail.com&gt;
                - Chinese handbook
                - addCheckboxGrp()
                - addRadioList()
                - addCntTextArea()
                - add JSValidation support:
                    addJSValidation()
                    addJSRule()
                    saveJSRule()
"""





</t>
<t tx="ZoomQuiet.20051222115335.3">class Karrigell_QuickForm:    
    """Simple HTML Forms Generation  - Karrigell_QuickForm"""
	@others</t>
<t tx="ZoomQuiet.20051222115335.4">def __init__(self,name,method,action,legend):    	
    """Form name, request method, file target,legend - Karrigell_QuickForm('contact_form','POST','contact.py','form legend')"""
    @others
    
    self.form_list = []
    self.css_list = []
    self.js_list =[]
    self.name = name
    self.legend_name = legend
    self.method = method
    self.action = action
    &lt;&lt;JVF&gt;&gt;
    self.form_list.append("""&lt;div&gt;
&lt;form method='%s' 

action='%s' 
id='%s' enctype='multipart/form-data'&gt;
&lt;fieldset&gt;&lt;legend&gt;
&lt;b&gt;%s&lt;/b&gt;
&lt;/legend&gt;&lt;table&gt;"""%(self.method
                     ,self.action
                     ,self.name
                     ,self.legend_name)
                     )</t>
<t tx="ZoomQuiet.20051222115335.5">self.jvfxml = ""

self.jvfxmltmpl="""
&lt;validation-config lang="auto"&gt;
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;	
&lt;/validation-config&gt;
"""
self.jvformtmpl="""
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
"""
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []

</t>
<t tx="ZoomQuiet.20051222115335.6">
def addElement(self,element,name,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'full_name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.7">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' size='"+size+"' maxlength='"+maxlength+"'&gt;&lt;td&gt;&lt;/tr&gt;") 

   

</t>
<t tx="ZoomQuiet.20051222115335.8">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.9">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.10">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.11">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.12">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.13">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.14">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.15">
def addHtmNode(self,element,name,desc,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'object name'
                     ,'print name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.16">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    htm = """&lt;tr&gt;
    &lt;td align='right' valign='top'&gt;
    &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
    &lt;td valign='top' align='left'&gt;
    &lt;input type='%s' 
        name='%s' 
        size='%s' 
        maxlength='%s'&gt;&lt;td&gt;
        &lt;/tr&gt;
        """
    self.form_list.append(htm%(desc
                               ,element
                               ,name
                               ,size
                               ,maxlength)
                            )
    #name.title().replace('_',' ')


</t>
<t tx="ZoomQuiet.20051222115335.17">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.18">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.19">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.20">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.21">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.22">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.23">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.24">
def addTextArea(self,name,rows,cols):
    """ add a textarea element - addTextArea('message','10','90')""" 
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;textarea name='"+name+"' cols='"+cols+"' rows='"+rows+"'&gt;&lt;/textarea&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.25">
def addCntTextArea(self,name,desc,content,rows,cols):
    """ add a textarea element with content
        - addTextArea('message','desc',"contents...",'10','90')
    """ 
    self.form_list.append("""&lt;tr&gt;
            &lt;td align='right' valign='top'&gt;
            &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
            &lt;td valign='top' align='left'&gt;
            &lt;textarea name='%s' 
            cols='%s'
            rows='%s'&gt;%s&lt;/textarea&gt;
            &lt;td&gt;&lt;/tr&gt;"""%(desc
                          ,name
                          ,cols
                          ,rows
                          ,content)
                        )


</t>
<t tx="ZoomQuiet.20051222115335.26">def addGroup(self,*t):
    """ add a button group 
    """
    htm = """&lt;input 
        type='%s' 
        name='%s' 
        value='%s'
        class='%s'&gt;
    """
    group = ""
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;")
    for a,b,c,d in t:
        group += htm%(a,b,c,d)
    self.form_list.append(group+"&lt;/td&gt;&lt;/tr&gt;")	
</t>
<t tx="ZoomQuiet.20051222115335.27">def addComboBox(self,name,t):
    """ add a combobox element 
    - addComboBox('fruits'
                    ,{'apple':'Apple'
                    ,'pear':'Pear'
                    ,'orange':'Orange'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td align='left' valign='top'&gt;&lt;select name='"+name+"[]'&gt;")
    combo = ""
    t= t.items()
    for a,b in t:
        combo = combo + "&lt;option value='"+a+"'&gt;"+b+"&lt;/option&gt;"
    self.form_list.append(combo)
    self.form_list.append("&lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.28">def addRadioGroup(self,name,value):
	"""add a radio element export in TABLE
    - addRadioGroup('genre'
                    ,{'male':'Male'
                      ,'female':'Female'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
    t = value.items()
    for a,b in t:
        radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")



    </t>
<t tx="ZoomQuiet.20051222115335.29">
def addRadioList(self,name,desc,value,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.30">
def addRadioLi(self,name,desc,vdict,klist,id=""):
	"""add a radio element export as UL LI group
        - name 列表名
        - desc 项描述
        - vdict 值字典
        - klist 键列表
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;DIV id='qlist'&gt;&lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    #t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for k in klist:
        radio = radio + tmpl%(name,k,vdict[k])
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/DIV&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.31">
def addVarRadioList(self,name,desc,value,convert,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,convert[a],b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.32">
def addRadioGrp(self,name,desc,value):
	"""add a radio element in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='radio' 
        name='%s' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.33">
def addChkboxGrp(self,name,desc,value):
	"""add a radio element Export in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='checkbox' 
        name='%s[]' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.34">
def showFormList(self):
    """ returns the whole form list """
    return self.form_list

</t>
<t tx="ZoomQuiet.20051222115335.35">def display(self):
    """ displays the html form"""
    self.form_list.append("&lt;/table&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;")
    self.js_list.append("&lt;script type='text/javascript'&gt;")
    print self.js_list.pop()
    print "function validate_%s(frm){"% self.name
    print """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        print k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    print final_js_function.replace("&lt;break&gt;","\\n")
    print self.js_list.pop()
    for c in self.css_list:
        print c+"\n"
    for i in self.form_list:
        print i+"\n"

</t>
<t tx="ZoomQuiet.20051222115335.36">def export(self):
    """ export the html form code
        so people can do something for them self
    """
    exp = ""
    self.form_list.append("""&lt;/table&gt;
&lt;/fieldset&gt;&lt;/form&gt;&lt;textarea 
id="jsvalidation-framework" rows="27" &gt;%s
&lt;/textarea&gt;&lt;/div&gt;"""%self.jvfxml)

    self.js_list.append("&lt;script type='text/javascript'&gt;")
    exp += self.js_list.pop()
    exp += "function validate_%s(frm){"% self.name
    exp += """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        exp += k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    exp += final_js_function.replace("&lt;break&gt;","\\n")
    exp += self.js_list.pop()
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp

</t>
<t tx="ZoomQuiet.20051222115335.37">def addStyleSheets(self,t):
    """add a basic stylesheet - simple CSS parameters"""
    css = "&lt;style type='text/css'&gt;textarea { background-color:"+t['bgcolor']+";font-family:"+t['font']+"; font-size:"+t['size']+"px; border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} input { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} select { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} td { font-size:"+t['size']+"px; font-family:"+t['font']+"}&lt;/style&gt;"
    self.css_list.append(css)

</t>
<t tx="ZoomQuiet.20051222115335.38">def addRule(self,elem_name,rule_type,message):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data"
    repl = """enctype='multipart/form-data' 
        onsubmit='try { 
            var myValidator = validate_%s; 
            } 
        catch(e) { return true; } 
        return myValidator(this);"""    
    if rule_type == "required":
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name)
        self.form_list[0] = begin_form
        &lt;&lt;input&gt;&gt;
    else:
        pass
    

</t>
<t tx="ZoomQuiet.20051222115335.39">js_string = """
value=getObjectByID('%s').value;

if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name,elem_name,elem_name,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.40">js_string = """
obj = frm.elements['%s'];
//alert(obj.type);
value=frm.elements['%s'].value;
if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name
       ,elem_name
       ,elem_name
       ,elem_name
       ,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.41">def addJSValidation(self):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data'"
    repl = """
        onsubmit='return doValidate("%s");'
        """ 
    begin_form=self.form_list[0].replace(orig
                                 ,repl%self.name) 
    self.form_list[0] = begin_form
     
    


</t>
<t tx="ZoomQuiet.20051222115335.42">def addJSRule(self,name,message):
    """add a xml rule for javascript checking
    """
    exp = self.JSvMXLnode%(name,message)
    self.JSvRules.append(exp)
    
     
    


</t>
<t tx="ZoomQuiet.20051222115335.43">def saveJSRule(self,xml):
    """exp and save a xml rule for javascript checking
    """
    exp = ""
    for node in self.JSvRules:
        exp+= node
    #exp = self.JSvXMLtmpl%(form,exp)
    #self.jvfxml = self.jvfxmltmpl%(self.name,exp)
    #exp = self.jvfxmltmpl%(self.name,exp)
    #print self.jvfxml
    open(xml,'w').write(self.JSvXMLtmpl%(self.name,exp))



    
     
    




</t>
<t tx="ZoomQuiet.20051222115430">from Karrigell_QuickForm import Karrigell_QuickForm

p = Karrigell_QuickForm('teste','POST','foo.py','Authentication')
p.addElement('text','login',{'size':20
                       ,'maxlength':40})
p.addElement('text','password',{'size':20
                       ,'maxlength':40})
p.addRule('login','required',"Login is required!")
p.addGroup(["submit","botao_enviar","submit","Send"]
           ,["reset","botao_limpar","reset","Clear"])
p.display()</t>
<t tx="ZoomQuiet.20051222120608"># Leo 的节点操作非常的Easay! 滥用之！
## 将常常要修改的，其它页面都要使用的都收集起来！</t>
<t tx="ZoomQuiet.20051222120608.2">&lt;style&gt;
@others
&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051222120608.3">/* $Id: obpKwd4.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/
DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
/*decimal; lower-alpha*/
#qpage ul li{list-style-type :decimal;}
#slide ul li{list-style-type :square;}
DIV#qlist{}

#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}
DIV#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
DIV#mana A{
    padding: 2px 5px 0px 2px;}
DIV#mana A:hover{background-color: #E0FFB8;}
SPAN#title{font-size: 15px;}
SPAN#sequence{font-size: 12px;
    color: #930;
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    float:right;  
    padding: 2px;}
TEXTAREA#jsvalidation-framework{display:none;}

DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051222120608.4">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051222120608.5">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051222120608.6">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051222120608.7">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="ZoomQuiet.20051224164500">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:45:50Z)]]]
[[TableOfContents]]

= K4日:KS =
||attachment:snap-KwDay40-3Leo.png ||'''不爽直！使用新的KS 页面组织'''[[BR]]现在想来，你实现了三个小功能就用了7，8个文件……有些想念 CherryPy 的对象式网站发布了！||

== lovely session ==
'''学习一下子文档吧！'''
 * http://localhost/demo/ksTest.ks/index
 * {{{#!python
so = Session()
if not hasattr(so, 'x'):
    so.x = 0
def index():
    print "x = %s" %so.x
    print '&lt;br&gt;&lt;a href="increment"&gt;Increment&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="decrement"&gt;Decrement&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="reset"&gt;Reset&lt;/a&gt;'
    
def increment():
    so.x = _private(so.x)
    raise HTTP_REDIRECTION,"index"
def decrement():
    so.x -= 1
    raise HTTP_REDIRECTION,"index"
def reset():
    so.x = 0
    raise HTTP_REDIRECTION,"index"
def _private(x):
    """The function name begins with _ : internal function, 
    can't be call by a url"""
    return x+1
    }}} 不是吧！！ 一个页面就作完了四种动作！完全是CherryPy 味的！！
  * Session 完全是对象了，标准的KarriGell 内置对象!
  * 又不是CherryPy 那样严格的对象属性，是文件级别的全局性变量，容易引用！
    * 但是，还是要在优雅的Python 脚本中掺杂HTML 代码，不爽直！

== HTMLTags ==
'''函式化的HTML生成'''
 * http://localhost/doc/en/htmltags.htm
 * 唉呀呀！！还真的是心想事儿成！2.2 增加的新功能哪！
 {{{#!python
stylesheet = LINK(rel="Stylesheet",href="doc.css")
header = TITLE('Record collection')+stylesheet
title = H1('My record collection')
rows = Sum ([TR(TD(rec.title,Class="title")
                +TD(rec.artist,Class="Artist")) 
    for rec in records])
table = TABLE(TR(TH('Title')+TH('Artist')) + rows)
print HTML(HEAD(header) + BODY(title + table))
}}} 可以将一个标准的HTML页面由几行 Py脚本自然生成！
 * 那未，只要结合 KS 和 HTMLTags 功能就可以快速实现想要的复杂展示功能了！还可以方便的复用！
 * 当然的使用["Leo"] 八股化你所有的.KS
 
attachment:snap-KwDay40.png

  1. `&lt;&lt; page declarations &gt;&gt;` 同样是引用声明什么的
  1. `&lt;&lt; htmlcode &gt;&gt;` 就是利用["Leo"]来快速复用的各种 HTML 代码
  1. `&lt;&lt;ini&gt;&gt;` 初始化部分，就是各响应页面都要使用的变量准备
  1. `@others` 包含以下各种 `def action():` 样定义的实际响应页面和`def _function():` 可以反复调用的不作为页面响应的普通函式声明
  
== 登录 ==
'''从默许的index 自动导向 login 那'''
 * 在{{{#!python
def index():
    &lt;&lt; pagehead &gt;&gt;
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        pass
}}} 照猫画虎, 使用`raise HTTP_REDIRECTION,"login"` 来根据是否有登录过来导向登响应
 * 当然的，要在 .KS 的 ini 初始化部分先声明会话容器:
     {{{#!python
# 使用 Session来记忆成员信息
sess = Session()
if not hasattr(sess, 'usr'):
    sess.usr = {"name":"NULL"}
    }}}在没有进行登录前，准备一个值为`NULL` 的`usr` 用户会话对象
 * 好了，实际的登录表单还是 [http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html KQF]来干:
{{{#!python
p = Karrigell_QuickForm('fm_login'
                        ,'POST'
                        ,'chkusr'
                        ,"登录自学问卷")
p.addHtmNode('text','uname'
             ,"staff帐号"
             ,{'size':40,'maxlength':8})
p.addGroup(["submit","btn_submit","提交","btn"]
           ,["reset","btn_reset","重写","btn"])
p.addRule('uname','required'
          ,"成员名是必须的!Login name is required!")
p.display()
}}} 非常简洁，标准
 * 进行有效性判别的处理也是个标准的KS 函式{{{#!python
def chkusr(**args):
    """检查用户登录情况
    """    
    print QUERY
    sess.usr["name"] = QUERY["uname"]
    if sess.usr["name"] in pmguys:
        # pmguys 是个元组，预定义的有管理整理的成员帐号
        sess.usr["pm"] = 1
    print sess.usr
    #raise HTTP_REDIRECTION,"index"
}}}先别让页面自动跳走，看一看，是否随愿的将登录信息记录了？！

attachment:snap-KwDay4sess.png 

 * 问卷的使用原则是，任何人都可以登录，问答,但是:
  1. 只有有效的成员问答才会统计
  1. 只有个别的成员才有管理/编辑问卷的权限
  
 
== 多问卷选择 ==
''' 有了登录后的用户信息,就可以根据不同的角色进行处理了'''
=== fnmatch ===
 * 指定目录中某模式的所有文件的尋找…………
 * 有内置的处理模块哪！'''fnmatch'''
 * 配合统一设置进行搜索{{{#!python
qcfglist = []
for f in os.listdir(conf.qpage.qpath):
    if fnmatch.fnmatch(f, '*.cfg'):
        if ("__init__" in f):
            pass
        else:
            qcfglist.append(f)
print qcfglist
}}} 就可以找出目录中所有以`.cfg`结尾的文件！
  * conf 对象是新发布模式下的统一设置信息对象
   * 因为，担心可能需要多个.KS 文件来组织网站，不想象原先那样滥用["Leo"]来复用信息了
   * 所以，建立`@nosent questionnaire.cfg` 统一配置文件
   * 这样，`conf = DictIni("questionnaire.cfg")` 一下子，就可以在所有.KS 页面中获取统一的站点设置了
   
=== 列表所有问卷 ===
'''根据问卷的状态进行归类列表'''
{{{#!python
# 识别问卷发布情况::
qdone = {}
qdoing = {}
qdesign = {}
for p in qcfglist:
    cfgp = DictIni(conf.qpage.qpath+p)
    if 0==cfgp.desc.done:
       qdesign[p]=cfgp
    elif 1==cfgp.desc.done:
       qdoing[p]=cfgp
    elif 2==cfgp.desc.done:
       qdone[p]=cfgp
    else:
        qdesign[p]=cfgp
}}} 使用不同的字典容器先过滤一下子搜索出来的文件；
 * 然后使用类似的输出就好:
{{{#!python
print H4("问卷进行中::")
print UL("".join([str(LI(
             B(A(qdoing[i].desc.pname
                 ,href="page?qpname=%s&amp;do=doing"%i.split(".")[-2])
                 )+
                 SUP(qdoing[i].desc.learn)+
                 SUB(A("问答统计",href="stat?qp=%s"%i))
                         )
                        ) for i in qdoing.keys()
                    ])
                    )
}}}     

attachment:snap-KwDay4list.png

== 小节 ==
 * 实际上，本日，你使用 .ks 体验了一把函式化的页面发布，成果就一个脚本'''index.ks'''
  * 但是以前完成的`.pih` 依然好用，而你将趁兴将它们都重构为更加爽快的'''函式化页面发布'''
 * 而且，你忍不住对CSS进行了深入的定制，在输出代码的最简和页面表现丰富之间进行了有效的探索
 
 
 
 
=== 明日任务 ===
'''心情舒畅！快速的完成了更加简练的功能页面！'''
 * 但是，如何将编辑，回答，统计融合起来？
  1. 点击进入不同问卷，可以回答/或是编辑
  1. 点击编辑就直接编辑
  1. 提交就成为新版本问卷
  1. 问卷要有版本管理
  1. 提交后,可以立即回到问答或是问卷集首页
  1. 任何页面都有安全退出的链接
  1. .... 呜乎哀哉,好象越作越多了,任务…………
 
== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay4/ KwDay4实例]

== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发
</t>
<t tx="ZoomQuiet.20051224165357">发现 Karrigell Server 方式的页面组织非常的简洁，运用之！</t>
<t tx="ZoomQuiet.20051224165419">##基础宣言
&lt;&lt; page declarations &gt;&gt;
## HTML 代码准备
&lt;&lt; htmlcode &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others


</t>
<t tx="ZoomQuiet.20051224165419.1">## questionnaire.ks
# 文件名匹配模块
import os,fnmatch
#页面间传递对象
import time,base64,pickle
# XML 处理模块
from elementtree import ElementTree
# Karrigell 提供支持模块
from HTMLTags import *
from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm

</t>
<t tx="ZoomQuiet.20051224165419.2">def _htmhead(title):
    """基础复用页面元素控制
    """
    htm = """&lt;html&gt;&lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"&gt;
        &lt;title&gt;"""
    htm += title
    htm += """&lt;/title&gt;
    &lt;&lt;k_base&gt;&gt;
    &lt;!--
    &lt;script language="javascript" src="/k/js/validation-framework.js"&gt;&lt;/script&gt;
    --&gt;
    
    &lt;/head&gt;
    &lt;body&gt;    
    &lt;div id='qpage'&gt;
    """
    return htm

htmfoot="""
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;h5&gt;design by:
    &lt;a href="http://wiki.woodpecker.org.cn/moin/ZoomQuiet"&gt;
    Zoom.Quiet&lt;/a&gt;
 powered by :
     
 &lt;a href="http://python.org"&gt;
 Python&lt;/a&gt;
 ::
 &lt;a href="http://karrigell.sourceforge.net"&gt;
 KARRIGELL 2.2&lt;/a&gt;
 +
 &lt;a href="http://effbot.org/zone/element.htm"&gt;
 ElementTree&lt;/a&gt;
&lt;/h5&gt;

&lt;/div&gt;&lt;!--id='qpage'--&gt;

&lt;/body&gt;
&lt;/html&gt;
"""


</t>
<t tx="ZoomQuiet.20051224165419.9"># 使用 Session来记忆成员信息
sess = Session()

if not hasattr(sess, 'usr'):
    sess.usr = {"name":"NULL"}

conf = DictIni("questionnaire.cfg")
qpath = conf.qpage.qpath    #"q/"
pubq = conf.qpage.pubq
cfgf = qpath+pubq

## 问卷信息的字典化信息对象
qcfg = DictIni(cfgf)

</t>
<t tx="ZoomQuiet.20051224165419.10">def index():
    """首先实现的页面
    """
    # 八股化的页面函式组织... clone 统一的页头输出章节！
    &lt;&lt; pagehead &gt;&gt;
    #print sess.usr
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        &lt;&lt;页面事务&gt;&gt;
        print SPAN(A('退出', href="logout"),id="mana")
        print SPAN(A('首页', href="index"),id="mana")
        print H1("啄木鸟问卷 之 自学问卷集")
        print "&lt;DIV id='cntarea'&gt;"
        @others
        print "&lt;/DIV&gt;"
    
    """快速设计CSS时可以方便的列印出主要页面元素来看效果
    print H1("H1")
    print H2("H2")
    print H3("H3")
    print H4("H4")
    print H5("H5")
    print H6("H6")
     """
    # 八股化的页面函式组织... clone 统一的页脚输出章节！
    &lt;&lt; pagefoot &gt;&gt;









</t>
<t tx="ZoomQuiet.20051224165419.11"># 清理问卷指定
try:
    if ""!=sess.usr["qp"]:
        sess.usr["qp"] = ""
    else:
        pass
except:
    pass
## 可以随时打印当前 session 值来印证自个儿的想法
#print sess.usr
</t>
<t tx="ZoomQuiet.20051224165419.12">qcfglist = []
#print conf.qpage.qpath
for f in os.listdir(conf.qpage.qpath):
    if fnmatch.fnmatch(f, '*.cfg'):
        if ("__init__" in f):
            pass
        else:
            qcfglist.append(f)
#print qcfglist
# 识别问卷发布情况::
qdone = {}
qdoing = {}
qdesign = {}
for p in qcfglist:
    cfgp = DictIni(conf.qpage.qpath+p)
    if 0==cfgp.desc.done:
       qdesign[p]=cfgp
    elif 1==cfgp.desc.done:
       qdoing[p]=cfgp
    elif 2==cfgp.desc.done:
       qdone[p]=cfgp
    else:
        qdesign[p]=cfgp

#分别列表显示问卷

&lt;&lt;发表的&gt;&gt;
&lt;&lt;回收的&gt;&gt;
&lt;&lt;准备的&gt;&gt;
</t>
<t tx="ZoomQuiet.20051224165419.13">
print H5("准备中的的问卷::")
print UL("".join([str(LI(
            B(A(qdesign[i].desc.pname
                ,href="page?qpname=%s&amp;do=design"%i.split(".")[-2])
                )+
                SUP("自学资料::"+qdesign[i].desc.learn)
                         )
                        ) for i in qdesign
                    ])
                    )
</t>
<t tx="ZoomQuiet.20051224165419.14">
print _htmhead("CPyUG·啄木鸟社区·自学问卷管理 obpKwDay4 - Powered by Karrigell")





</t>
<t tx="ZoomQuiet.20051224165419.15">
print htmfoot



</t>
<t tx="ZoomQuiet.20051224165419.16">def page(qpname,do):
    """准备要完成的问卷实际解析页面
        - 应该说可以完全参照以前的 .pih 来完成
    """
    &lt;&lt; pagehead &gt;&gt;
    
    &lt;&lt; pagefoot &gt;&gt;
</t>
<t tx="ZoomQuiet.20051224165419.25">
def login():
    """实际最先完成的页面
    """
    print sess.usr
    &lt;&lt; pagehead &gt;&gt;    
    # 实际活动
    print H1("啄木鸟问卷 之 自学问卷集")
    
    @others 

    &lt;&lt; pagefoot &gt;&gt;
    #print QUERY
    #raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.26">p = Karrigell_QuickForm('fm_login'
                        ,'POST'
                        ,'chkusr'
                        ,"登录自学问卷")
p.addHtmNode('text','uname'
             ,"CPyUG名号"
             ,{'size':40,'maxlength':37})
p.addGroup(["submit","btn_submit","提交","btn"]
           ,["reset","btn_reset","重写","btn"])

p.addRule('uname','required'
          ,"成员名是必须的!Login name is required!")
#p.addRule('password','required',"Password is required!")
p.display()
</t>
<t tx="ZoomQuiet.20051224165419.27">def logout():
    """完成 login 时顺手就创立的页面
    """
    sess.close()
    
    #sess.usr = {}
    #sess.usr["name"] ="NULL"
    #print QUERY
    raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.28">def chkusr(**args):
    """从login 自然引发的页面
        检查用户登录情况
    """    
    print QUERY
    print "&lt;hr/&gt;"
    print sess.usr
    sess.usr["name"] = QUERY["uname"]
    print sess.usr
    # 不自动跳转页面，打印session 观察……
    raise HTTP_REDIRECTION,"index"
</t>
<t tx="ZoomQuiet.20051224170150"># 将全局性约定，组织为外部配置文件
[qpage]
qpath		= q/
apath		= a/
pubq    = "easy051201.cfg"

##pyorg		= /d/deptorg.py

</t>
<t tx="ZoomQuiet.20051224171010">&lt;style&gt;
@others

&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051224171010.1">/* $Id: obpKwd4.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/

DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
#qpage ul li{list-style-type :decimal;}
DIV#qlist{}
#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}

SPAN#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
SPAN#mana A{
    padding: 2px 5px 0px 2px;}
SPAN#mana A:hover{BACKGROUND-COLOR: #E0FFB8;}
DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051224171010.2">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051224171010.3">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051224171010.4">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051224171010.5">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="ZoomQuiet.20051224181034">print H4("发表中的问卷::")

print UL("".join([str(LI(
 B(A(qdoing[i].desc.pname
     ,href="page?qpname=%s&amp;do=doing"%i.split(".")[-2])
     ## Zoomq::051220 slide show
     #,href="issue?qpname=%s&amp;do=doing"%i.split(".")[-2])
     )+             
     SUB(A("回答统计",href="stat?qp=%s"%i))
             )
            ) for i in qdoing.keys()
        ])
        ,id="qplist")
</t>
<t tx="ZoomQuiet.20051224181034.1">
print H3("已发布的问卷::")
print UL("".join([str(LI(
            B(A(qdone[i].desc.pname
                ,href="page?qpname=%s&amp;do=done"%i.split(".")[-2])
                )+
                 SUB(A("回答统计",href="stat?qp=%s"%i))
                         )
                        ) for i in qdone
                    ])
                    )</t>
<t tx="ZoomQuiet.20051224182004">[desc]
pname		= 啄木鸟问卷 之 “CPyUG常识”
desc		= 自学问卷v0.6
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 2

[ask/1]
question= CPyUG是什么意思？
a		= 中国Perl用户组
b		= 中国PHP用户组
c		= 中国Python用户组
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= CPyUG社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= b # 正确答案

[ask/3]
question= CPyUG 的核心宗旨是什么？
a		= 组织Python项目
b		= 推广Python 语言应用
c       = 发展成员进行收费创利
f		= 不知道……
key		= b # 正确答案
</t>
<t tx="ZoomQuiet.20051224182004.1">[desc]
pname		= 啄木鸟问卷 之 “Python FAQ”
desc		= 自学问卷v0.7.3
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 0

[ask/1]
question= Python 是什么东西？
a		= 是蟒蛇
b		= 是种动态脚本语言
c       = 以上都对
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= Python 是面向什么的？
a		= 本质上是面向对象的
b		= 也可以面向函式的
c       = 爱面向什么都可以
d       = 以上都对
f		= 不知道……
key		= d # 正确答案

[ask/3]
question= Python最独特的语法个性是什么？
a		= 使用缩进来限定逻辑结构
b		= 创造了丰富的内置数据类型
c		= 不使用指针
d		= 不知道……
key		= a # 正确答案
</t>
<t tx="Zoomq.20050615144554"># 快速利用Karrigell 开发功能站点
# Karrigell.ini 中有如下约定:
# 如果Kariigell 运行在 D:\Karrigell\Karrigell-2.2\ 
# 则其下应该有 karriweb\obp\KwDay1\ 这样的目录，以便安置实例  
[Alias]
..
obp=%(base)s/karriweb/obp
# 为统一的JVF页面输入检验建立访问别名
jvf=%(base)s/karriweb/obp/js
...


</t>
</tnodes>
</leo_file>
