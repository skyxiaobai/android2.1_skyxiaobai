<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet ekr_stylesheet?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="854" clone_windows="0"/>
<globals body_outline_ratio="0.2392578125">
	<global_window_position top="10" left="10" height="698" width="1024"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="Zoomq.20050615144554" a="ETV"><vh>KarrigellWebDev</vh>
<v t="ZoomQuiet.20051222114930"><vh>Kday3:发现</vh></v>
<v t="ZoomQuiet.20051201224226"><vh>问卷设计</vh>
<v t="ZoomQuiet.20051204223324" tnodeList="ZoomQuiet.20051204223324"><vh>@nosent easy051201.cfg</vh></v>
</v>
<v t="ZoomQuiet.20051222120608"><vh>复用代码</vh>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247"><vh>管理</vh>
<v t="ZoomQuiet.20051222105247.1" a="E"><vh>@thin __init__.py</vh></v>
<v t="ZoomQuiet.20051222115430" tnodeList="ZoomQuiet.20051222115430"><vh>@nosent tryKQF.py</vh></v>
<v t="ZoomQuiet.20051222105247.2" tnodeList="ZoomQuiet.20051222105247.2,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7"><vh>@nosent  mana.pih</vh>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.3" a="E" tnodeList="ZoomQuiet.20051222105247.3"><vh>@nosent questionnaire.tmpl</vh></v>
<v t="ZoomQuiet.20051222105247.4" tnodeList="ZoomQuiet.20051222105247.4,ZoomQuiet.20051222105247.5,ZoomQuiet.20051222105247.6,ZoomQuiet.20051222105247.7"><vh>@nosent  qdesign.py</vh>
<v t="ZoomQuiet.20051222105247.5"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.6"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.7"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.8" tnodeList="ZoomQuiet.20051222105247.8,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.15,ZoomQuiet.20051222105247.15"><vh>@nosent  qpage.pih</vh>
<v t="ZoomQuiet.20051222105247.15"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.16" tnodeList="ZoomQuiet.20051222105247.16,ZoomQuiet.20051222105247.17,ZoomQuiet.20051222105247.18,ZoomQuiet.20051222105247.19,ZoomQuiet.20051222105247.20,ZoomQuiet.20051222105247.21,ZoomQuiet.20051222105247.22"><vh>@nosent  qpage.py</vh>
<v t="ZoomQuiet.20051222105247.17"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.18"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.19"><vh>expage</vh>
<v t="ZoomQuiet.20051222105247.20"><vh>desc</vh></v>
<v t="ZoomQuiet.20051222105247.21"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.22" a="E"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.23" a="E" tnodeList="ZoomQuiet.20051222105247.23,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.24,ZoomQuiet.20051222105247.24"><vh>@nosent  qprint.pih</vh>
<v t="ZoomQuiet.20051222105247.24"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.25" a="E" tnodeList="ZoomQuiet.20051222105247.25,ZoomQuiet.20051222105247.26,ZoomQuiet.20051222105247.27,ZoomQuiet.20051222105247.28,ZoomQuiet.20051222105247.29,ZoomQuiet.20051222105247.30"><vh>@nosent  qprint.py</vh>
<v t="ZoomQuiet.20051222105247.26"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.27"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.28" a="E"><vh>qpubish()</vh>
<v t="ZoomQuiet.20051222105247.29"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.30"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051222115335"><vh>KQf</vh>
<v t="ZoomQuiet.20051222115335.1" a="E" tnodeList="ZoomQuiet.20051222115335.1,ZoomQuiet.20051222115335.2,ZoomQuiet.20051222115335.3,ZoomQuiet.20051222115335.4,ZoomQuiet.20051222115335.5,ZoomQuiet.20051222115335.6,ZoomQuiet.20051222115335.7,ZoomQuiet.20051222115335.8,ZoomQuiet.20051222115335.9,ZoomQuiet.20051222115335.10,ZoomQuiet.20051222115335.11,ZoomQuiet.20051222115335.12,ZoomQuiet.20051222115335.13,ZoomQuiet.20051222115335.14,ZoomQuiet.20051222115335.15,ZoomQuiet.20051222115335.16,ZoomQuiet.20051222115335.17,ZoomQuiet.20051222115335.18,ZoomQuiet.20051222115335.19,ZoomQuiet.20051222115335.20,ZoomQuiet.20051222115335.21,ZoomQuiet.20051222115335.22,ZoomQuiet.20051222115335.23,ZoomQuiet.20051222115335.24,ZoomQuiet.20051222115335.25,ZoomQuiet.20051222115335.26,ZoomQuiet.20051222115335.27,ZoomQuiet.20051222115335.28,ZoomQuiet.20051222115335.29,ZoomQuiet.20051222115335.30,ZoomQuiet.20051222115335.31,ZoomQuiet.20051222115335.32,ZoomQuiet.20051222115335.33,ZoomQuiet.20051222115335.34,ZoomQuiet.20051222115335.35,ZoomQuiet.20051222115335.36,ZoomQuiet.20051222115335.37,ZoomQuiet.20051222115335.38,ZoomQuiet.20051222115335.40,ZoomQuiet.20051222115335.41,ZoomQuiet.20051222115335.42,ZoomQuiet.20051222115335.43"><vh>@nosent Karrigell_QuickForm.py</vh>
<v t="ZoomQuiet.20051222115335.2" a="E"><vh>&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.3" a="E"><vh>class Karrigell_QuickForm</vh>
<v t="ZoomQuiet.20051222115335.4" a="E"><vh>__init__</vh>
<v t="ZoomQuiet.20051222115335.5"><vh>&lt;&lt;JVF&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.6"><vh>addElement</vh>
<v t="ZoomQuiet.20051222115335.7"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.8"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.9"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.10"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.11"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.12"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.13"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.14"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.15"><vh>addHtmNode</vh>
<v t="ZoomQuiet.20051222115335.16"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.17"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.18"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.19"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.20"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.21"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.22"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.23"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.24"><vh>addTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.25"><vh>addCntTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.26"><vh>addGroup</vh></v>
<v t="ZoomQuiet.20051222115335.27" a="E"><vh>addComboBox</vh></v>
<v t="ZoomQuiet.20051222115335.28"><vh>addRadioGroup</vh></v>
<v t="ZoomQuiet.20051222115335.29" a="E"><vh>addRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.30" a="E"><vh>addRadioLi</vh></v>
<v t="ZoomQuiet.20051222115335.31" a="E"><vh>addVarRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.32" a="E"><vh>addRadioGrp</vh></v>
<v t="ZoomQuiet.20051222115335.33"><vh>addCheckboxGrp</vh></v>
<v t="ZoomQuiet.20051222115335.34"><vh>showFormList</vh></v>
<v t="ZoomQuiet.20051222115335.35"><vh>display</vh></v>
<v t="ZoomQuiet.20051222115335.36"><vh>export</vh></v>
<v t="ZoomQuiet.20051222115335.37"><vh>addStyleSheets</vh></v>
<v t="ZoomQuiet.20051222115335.38"><vh>addRule</vh>
<v t="ZoomQuiet.20051222115335.39"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.40"><vh>&lt;&lt;input&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.41"><vh>addJSValidation</vh></v>
<v t="ZoomQuiet.20051222115335.42"><vh>addJSRule</vh></v>
<v t="ZoomQuiet.20051222115335.43"><vh>saveJSRule</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="ZoomQuiet.20051201224226"># 使用标准
# 这个是Leo 的宏约定，让Leo 将以下的节点及时的保存到指定目录中
@path q

</t>
<t tx="ZoomQuiet.20051204223324">[desc]
pname		= 啄木鸟问卷 之 “基本知晓”
desc		= 自学问卷v0.7
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 0

[ask/1]
question= 啄木鸟社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= a # 正确答案

[ask/2]
question= 啄木鸟社区关注的是什么语言的开发推广？
a		= PHP
b		= Perl
c       = Python
d       = ASP
e       = Zope
f		= 不知道……
key		= c # 正确答案

[ask/3]
question= 啄木鸟和CPyUG的关系是？
a		= 联盟
b		= 下属
c		= 所有者
d		= 不知道……
key		= a # 正确答案

[ask/4]
question= 啄木鸟社区的项目组织原则是什么？
a		= 路见不平一声吼！
b		= 听从组织安排
c		= 不知道……
key		= a # 正确答案

[ask/5]
question= 啄木鸟社区提供了什么资源供大家使用？
a		= Wiki
b		= SVN
c       = 邮件列表
d       = 以上全有
key		= d # 正确答案</t>
<t tx="ZoomQuiet.20051222105247">#一步接一步自然的来
"""
1. 组织首页 mana.pih
2. 嵌入表单 使用模板 questionnaire.tmpl
3. 创建处理脚本 qdesign.py
... 然后就瀑布样的该作什么就作什么了(^_^)
"""
@path ./</t>
<t tx="ZoomQuiet.20051222105247.2">&lt;html&gt;
&lt;head&gt;
&lt;&lt;k_base&gt;&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;
&lt;h1&gt;在线编辑问卷设计文案，自动解析为模拟问卷&lt;/h1&gt;

&lt;%# 最简单的方式将实际处理脚本包含到页面中适当的位置
Include("qdesign.py")
%&gt;

&lt;%"""
#可以随意包含测试输出哪！
# 嗬嗬也可以随时进行方便的多行注释
print dir()
"""
%&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;



</t>
<t tx="ZoomQuiet.20051222105247.3">&lt;FORM ENCTYPE="multipart/form-data" 
    ACTION="qpage.pih" 
    METHOD=POST&gt;

编辑问卷设计文本: &lt;br&gt;
&lt;textarea NAME="cfgfile" rows="27" COLS="80"&gt;
$cfgtxt
&lt;/textarea&gt;
&lt;br/&gt;

&lt;INPUT TYPE="submit" VALUE=" &gt;提交设计查看问卷效果&lt; " class="btn"&gt; 

&lt;/form&gt;
</t>
<t tx="ZoomQuiet.20051222105247.4">@ $Id: obpKwd3.leo 325 2005-12-30 04:23:49Z  $
qdesign.py 快捷问卷设计
@c

&lt;&lt; page declarations &gt;&gt;

@others


&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.5">#!/usr/bin/env python
# coding:utf-8

import time,datetime
import sys,os,string,re
from Cheetah.Template import Template as ctTpl


#sys.path.append("/usr/local/www/data/karriweb/src/plugin")
# /usr/local/www/data/warder/questionnaire
#from karriweb import *

#from agentweb import *
#from agentsys import *
from dict4ini import DictIni

</t>
<t tx="ZoomQuiet.20051222105247.6">#初始化参数集中维护！
qpath = "q/"
pubq = qpath+"easy051201.cfg"
</t>
<t tx="ZoomQuiet.20051222105247.7">page = open("questionnaire.tmpl","r").read()
vPool = {}
vPool['cfgtxt'] = open(pubq,"r").read()
txp = ctTpl(page, searchList=[vPool])
print txp

#print dir()
qcfg = DictIni(pubq)
#print len(qcfg)
#print qcfg.desc.learn</t>
<t tx="ZoomQuiet.20051222105247.8">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;&lt;k_base&gt;&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;h1&gt;自动解析成的模拟问卷&lt;/h1&gt;

&lt;!--
# 咔咔咔！！Leo 支持中文节点定义的哪！
--&gt;
&lt;&lt;导航&gt;&gt;

&lt;%
Include("qpage.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;

</t>
<t tx="ZoomQuiet.20051222105247.15">
&lt;h5&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面]修改试题&lt;/a&gt; 
 |&gt; 
&lt;a href="qprint.pih"&gt;
 查看最终效果&lt;/a&gt;
 |&gt; 
&lt;/h5&gt;</t>
<t tx="ZoomQuiet.20051222105247.16">@ $Id: obpKwd3.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c

&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.17">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

from dict4ini import DictIni</t>
<t tx="ZoomQuiet.20051222105247.18">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.19">def expage(dict):
    """将dict 内容输出为问卷
    """
    exp = ""
    exp += "&lt;div id='qpage'&gt;"
    @others
    exp += "&lt;/div&gt;" # id=qpage
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.20">exp += """&lt;h3&gt;%s —— 
    &lt;sup&gt;%s&lt;/sup&gt;
    &lt;sub&gt;%s&lt;/sub&gt;&lt;/h3&gt;"""%(dict.desc.pname
                            ,dict.desc.desc
                            ,dict.desc.learn)


</t>
<t tx="ZoomQuiet.20051222105247.21">#print dict.ask["1"]
exp +="&lt;ul&gt;"
# 将字串的字典键值依照数字方式排序
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    exp +="&lt;li&gt;%s"%ask["question"]
    exp +="&lt;SUP&gt;正确答案::%s&lt;/SUP&gt;"%ask["key"]
    #unicode(str(dict.ask[i]["question"]), "utf8").encode("utf8")
    exp +="&lt;ul&gt;"
    qk = [j for j in ask.keys()]
    qk.sort()
    #name="animal[]"
    for q in qk:
        if 1==len(q):
            exp +="&lt;li&gt;%s"%ask[q]
        else:
            pass
    exp +="&lt;/ul&gt;"
    exp +="&lt;/li&gt;"
exp +="&lt;/ul&gt;"

</t>
<t tx="ZoomQuiet.20051222105247.22">open(pubq,"w").write(QUERY["cfgfile"])
qcfg = DictIni(cfgf)
print expage(qcfg)
print "&lt;hr/&gt;"

# 测试...
#print dir()
#print QUERY["cfgfile"]
#print qcfg.desc
</t>
<t tx="ZoomQuiet.20051222105247.23">&lt;html&gt;
&lt;head&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;!--发现在IE中如果在中文出现后再声明就会有问题，BS哪！--&gt;
&lt;title&gt;

&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;

&lt;&lt;k_base&gt;&gt;
&lt;script language="javascript" src="/jvf/validation-framework.js"&gt;
&lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;&lt;导航&gt;&gt;

&lt;%
Include("qprint.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;
</t>
<t tx="ZoomQuiet.20051222105247.24">
&lt;h4&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面] 修改试题
&lt;/a&gt;
 |&gt; 
&lt;a href="index.ks/logout"&gt;
退出&lt;/a&gt;
&lt;/h4&gt;</t>
<t tx="ZoomQuiet.20051222105247.25">@ $Id: obpKwd3.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c
&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.26">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

#sys.path.append("../../karriweb/src/core")
#from agentweb import *
#from agentsys import *

from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm</t>
<t tx="ZoomQuiet.20051222105247.27">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())
tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
#shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.28">def qpubish(dict):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST','#',dict.desc.desc)
    exp += "&lt;h1&gt;%s&lt;sup&gt;学习资料::%s&lt;/sup&gt;&lt;/h1&gt;"%(dict.desc.pname
                                       ,dict.desc.learn)    
    
    #exp += "&lt;H6&gt;返回%s&lt;/H6&gt;"%dict.desc.learn
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    @others    
    p.addElement('node','&lt;/ul&gt;','')
    
    # 无良的迁就……
    p.addJSValidation()
    p.saveJSRule("../js/validation-config.xml")
    
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])
    exp += p.export()
    
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.29">"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass
    
    p.addRadioList("cr_ask%s"%i
               ,ask["question"]
               ,qli)
    p.addJSRule("cr_ask%s"%i,"问题%s "%i)

</t>
<t tx="ZoomQuiet.20051222105247.30">#open(qpath+pubq,"w").write(QUERY["cfgfile"])
#print dir()
#print QUERY
qcfg = DictIni(cfgf)
print "&lt;div id='qpage'&gt;"
#print p.export()
print "&lt;div id='errorDiv'&gt;&lt;/div&gt;"

print qpubish(qcfg)
print "&lt;/div&gt;"

"""
p = Karrigell_QuickForm('fm_kq','POST','#',qcfg.desc.pname)
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})

p.addGroup(["submit","btn_submit","提交"]
           ,["reset","btn_reset","重写"])
#p.display()
"""
</t>
<t tx="ZoomQuiet.20051222114930">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:50:15Z)]]]
[[TableOfContents]]

= K3日:发现！ =
'''Cheetah 只能组织有模板的页面输出，但是……'''
 * 对于动态变化的表单，有什么更好的方式来组织？
== Karrigell_QuickForm  ==
'''[http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html Karrigell_QuickForm]''' 真的是想要什么就来什么！
 * 刚刚从订阅的[http://sourceforge.net/mailarchive/forum.php?forum=karrigell-main karrigell-main 列表]中看到有人完成了一个 Pear 中 quickform的Karrigell 实现
 * 即有之，则用之！
 * 示例：{{{#!python
from Karrigell_QuickForm import Karrigell_QuickForm

p = Karrigell_QuickForm('teste','POST','foo.py','Authentication')
p.addElement('text','login')
p.addElement('text','password')
p.addRule('login','required',"Login is required!")
p.addGroup(["submit","botao_enviar","submit","Send"]
           ,["reset","botao_limpar","reset","Clear"])
"""根据习惯hack! 原先的自动生成 value 的为指定按钮文字。
p.addGroup(["submit","botao_enviar","Send"]
           ,["reset","botao_limpar","Clear"])
"""
p.display()
}}} 6行完成一个标准的登录表单！！！哈哈哈！赞！
attachment:snap-KwDay30.png

=== 改造 ===
'''毕竟是 alpha 版本，居然还是全面的table 结构！'''
 * 代码也很ugly 哪！使用["Leo"]整理后
 attachment:snap-KwDay3Leo.png
 
 * 立即改造！{{{#!python
def addRadioGroup(self,name,value):
	"""add a radio element - addRadioGroup('genre',{'male':'Male','female':'Female'})"""
        self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
        t = value.items()
	for a,b in t:
	    radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
        self.form_list.append(radio+"&lt;/td&gt;")
	self.form_list.append("&lt;/tr&gt;")
}}} 増补为:{{{#!python
def addRadioList(self,name,desc,value,id=""):
    	"""add a radio element export as UL LI group
    """
    htm = """
        &lt;li id='%s'&gt;&lt;b&gt;%s:&lt;/b&gt;
            &lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
    radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
}}}

=== 利用 ===
'''直接将昨天的展示函式修改一下子就应该好用的！'''
 * `def expage(dict):` 对应的修改为:
{{{#!python
def qpubish(dict):
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST','#',dict.desc.desc)
    
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据 基本和昨天的一样，仅仅是输出时使用 Karrigell_QuickForm 对象而已
    qli = {}
    k = [int(i) for i in dict.ask.keys()]
    k.sort()
    for i in k:
        ask = dict.ask[str(i)]
        qk = [j for j in ask.keys()]
        qk.sort()
        for q in qk:
            if 1==len(q):
                qli[q] = ask[q]
            else:
                pass        
        p.addRadioList("cr_ask%s"%i
                   ,ask["question"]
                   ,qli)
    p.addElement('node','&lt;/ul&gt;','')
    p.addGroup(["submit","btn_submit","提交"]
               ,["reset","btn_reset","重写"])
}}}
 * 注意到原先的 Karrigell_QuickForm 只有display()，要求直接输出，但是你需要进一步的HTML 处理
 * 所以有了{{{#!python
def export(self):
    """ export the html form code so people can do something for them self
    """
    exp = ""
    ...
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp
    }}} 基本上就是将原先的 `print` 替换为 `exp+=` 记录为字串对象然后返回
 * 还有`def addElement(self,element,name,options=None):` 中追加更自由的任何HTML 节点输出:{{{        
        elif element == 'node':
            self.form_list.append(name)
}}}

== JS 问题 ==
'''一切顺心，表单正确生成了，但是，Karrigell_QuickForm 提供的JS检验不支持Radio列表的！'''
 * 呜乎哀哉！！这是个问题哪！如果不是所有问题回答完就提交的话
  * 交给服务端检验，浪费带宽！你还要记录上次的问题情况，返回/提示/重答
  * 不检验，则没有办法进行统计
=== 继续发现！ ===
'''现在的问题是有什么现成的可以模式化的定义表单测验的JS组件？'''
 *  TiosnG ![ti'aosn'gu]
  * There is one site named Google! -- 哈哈哈！！
  * '''[http://www.amowa.net/jsvalidation/ JavaScript Validation Framework]''' 国人作品！

## mechiland@gmail.com jzchen80@hotmail.com
attachment:snap-KwDay30JVF.png

  * 致力于 Python 的Ajax框架开发的 [http://www.amowa.net AMOWA]团队作品，值得期待！使用之！

=== 迁就,先！ ===
 * 与KarriGell 配合[[FootNote(测试JS 成功引用否的小技巧:`alert("Include KO!");` JS 中加入强制提示看刷页面见分晓！)]]，当前需要:
     1. `jvf=%(base)s/karriweb/questionnaire/js` 这样的专门虚拟目录发布，以便，其它各种应用也可以享受
     1. `var ValidationRoot = "/jvf/";` JVF 实际运行的 validation-framework.js 本身也要声明所在目录
     1. {{{
ValidateMethodFactory.validateRequired = function(field, params) {
	...
	window.location.replace("#errorDiv");
}}} 使用replace 来减少不必要的页面刷新
     1. 使用`p.saveJSRule("../js/validation-config.xml")` 时要对应的修正写入的正确目标文件 
 * KQF 对JVF 的迁就:


==== 关键代码 ====
'''JVF的使用很有个性，使用外部的XML 文件进行设置，标准的J2EE行为哪！'''
 * 所以，对应的增补Karrigell_QuickForm
  1. addJSRule() 追加专门的JVF 规则{{{#!python
    def addJSRule(self,name,message):
        """add a xml rule for javascript checking
        """
        exp = self.JSvMXLnode%(name,message)
        self.JSvRules.append(exp)
}}}
  1. addJSValidation() 追加调用JVF的页面行为{{{#!python    
    def addJSValidation(self):
        """add a javascript rule in order to validate a form field  
        - addRule('elem_name','required','Name is required!')
        """
        orig = "enctype='multipart/form-data'"
        repl = """
            onsubmit='return doValidate("%s");'
            """ 
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name) 
        self.form_list[0] = begin_form
}}}
  1. saveJSRule() 记录规则集合为JVF需要的XML{{{#!python
    def saveJSRule(self,xml):
        """exp and save a xml rule for javascript checking
        """
        exp = ""
        for node in self.JSvRules:
            exp+= node
        #exp = self.JSvXMLtmpl%(form,exp)
        open(xml,'w').write(self.JSvXMLtmpl%(self.name
                                             ,exp)
                                             )
}}}
  1. 对应的KQF中有预设对象{{{
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []
}}}

=== 果然不出所料 ===
'''仅仅追加少量代码就完成所想的客户端JS验证功能'''
{{{
def qpubish(dict):
    ...
    ## 具体问题解析
    k.sort()
    for i in k:
        ...
        p.addJSRule("cr_ask%s"%i,"问题%s "%i)
    ## 整体行为处理
    p.addJSValidation()
    p.saveJSRule("js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;','')
}}}
 * 果然不出所料 没有任何悬念的完成任务！

##attachment:snap-KwDay31.png 

== 滥用Leo ==
'''到现在页面都是白丁！不能忍了！加载CSS！'''
 * 不清楚KarriGell 的页面引用效率，直接将CSS，写入页面好了，反正有["Leo"]来维护

=== CSS设计技巧 ===
'''复用以前自个儿的积累是非常好的事儿！'''
 * 颜色的设计是个问题，不过有好工具来偷！
 '''[http://www.redalt.com/Tools/ilyc.php Red Alt - I Like Your Colors]'''
attachment:snap-KwDay3color.png

=== CSS ===
  * 每一需要CSS美化的页面都加`&lt;&lt;k_base&gt;&gt;` 引用，
  * 引用都是从`复用代码` 中clone 过来的同一节点
  * 包含的就是`k_base.css` 你以往积累的一个通用的CSS整体设计,少量修改后，套用中意的颜色系统
attachment:snap-KwDay3css.png
 
== 小节 ==
'''今天发现并引入了 [http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html KQF]和 [http://www.amowa.net/jsvalidation/ JVF]好象有点复杂的样子……'''
attachment:snap-KwDay3done.png
 * 当然在故事中,这不是最终接受的方案，精彩还要继续……
 * 现在所有的基本功能都有了，接下来的就是要实用化:
     1. 有用户验证，要登录
     1. 多问卷选择/回答/编辑
     

== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
  1. [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay3/ KwDay3实例]
  1. 注意有在外部安置的 [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/js/ JS-JVF 目录]
== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发


</t>
<t tx="ZoomQuiet.20051222115335"># 按照约定，这样的扩展要部属到Karrigell 的根目录，所以使用相对路径回溯指向！
@path ../../../</t>
<t tx="ZoomQuiet.20051222115335.1">
&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;

@others

"""
   Overview - Karrigell_QuickForm
   
  p = Karrigell_QuickForm('teste','POST','teste.py')
  p.addElement('text','nome',{'size':80,'maxlength':20})
  p.addElement('text','email',{'size':80,'maxlength':20})
  p.addRule('nome','required','campo nome obrigario!')
  p.addComboBox('combo',{'a':'A','b':'B'})
  p.addCheckBox('fuda',{'a':'Letra A','b':'Letra B'})
  p.addElement('image','python.gif')
  p.addElement('file','foto')
  p.addElement('submit','botao_enviar',{'value':'Enviar A'})
  p.addComboBox('sexo',['Masculino','Masculino'],['Feminino','Feminino'])
  p.addTextArea('mensagem','20','80')
  p.addGroup(["submit","botao_enviar","Enviar"],["reset","botao_limpar","Limpar"])
  p.addStyleSheets({'bgcolor':'lightblue','font':'verdana','border-color':'black'})
  p.display()
 
"""
</t>
<t tx="ZoomQuiet.20051222115335.2">#@ignore
#@language python
"""
     Package: Karrigell_QuickForm-1.0.1-alpha
Requirements: Karrigell HTTP Server - http://karrigell.sourceforge.net
 Description: - A simple class that generates html forms with some basic javascript validations. 
              - It is similar to HTML_QuickForm from PEAR (http://pear.php.net).   
      Author: Marcelo Santos Araujo &lt;marcelo@orionlab.net&gt; 
        Date: 23 November 2005
     Version: $Revision Karrigell_QuickForm-1.0.1-alfa
     Credits: Special thanks to Pierre Quentel and Karrigell's developers.
 Contributor: Zoom.Quiet &lt;Zoom.Quiet@gmail.com&gt;
                - Chinese handbook
                - addCheckboxGrp()
                - addRadioList()
                - addCntTextArea()
                - add JSValidation support:
                    addJSValidation()
                    addJSRule()
                    saveJSRule()
"""





</t>
<t tx="ZoomQuiet.20051222115335.3">class Karrigell_QuickForm:    
    """Simple HTML Forms Generation  - Karrigell_QuickForm"""
	@others</t>
<t tx="ZoomQuiet.20051222115335.4">def __init__(self,name,method,action,legend):    	
    """Form name, request method, file target,legend - Karrigell_QuickForm('contact_form','POST','contact.py','form legend')"""
    @others
    
    self.form_list = []
    self.css_list = []
    self.js_list =[]
    self.name = name
    self.legend_name = legend
    self.method = method
    self.action = action
    &lt;&lt;JVF&gt;&gt;
    self.form_list.append("""&lt;div&gt;
&lt;form method='%s' 

action='%s' 
id='%s' enctype='multipart/form-data'&gt;
&lt;fieldset&gt;&lt;legend&gt;
&lt;b&gt;%s&lt;/b&gt;
&lt;/legend&gt;&lt;table&gt;"""%(self.method
                     ,self.action
                     ,self.name
                     ,self.legend_name)
                     )</t>
<t tx="ZoomQuiet.20051222115335.5">self.jvfxml = ""

self.jvfxmltmpl="""
&lt;validation-config lang="auto"&gt;
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;	
&lt;/validation-config&gt;
"""
self.jvformtmpl="""
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
"""
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []

</t>
<t tx="ZoomQuiet.20051222115335.6">
def addElement(self,element,name,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'full_name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.7">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' size='"+size+"' maxlength='"+maxlength+"'&gt;&lt;td&gt;&lt;/tr&gt;") 

   

</t>
<t tx="ZoomQuiet.20051222115335.8">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.9">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.10">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.11">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.12">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.13">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.14">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.15">
def addHtmNode(self,element,name,desc,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'object name'
                     ,'print name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.16">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    htm = """&lt;tr&gt;
    &lt;td align='right' valign='top'&gt;
    &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
    &lt;td valign='top' align='left'&gt;
    &lt;input type='%s' 
        name='%s' 
        size='%s' 
        maxlength='%s'&gt;&lt;td&gt;
        &lt;/tr&gt;
        """
    self.form_list.append(htm%(desc
                               ,element
                               ,name
                               ,size
                               ,maxlength)
                            )
    #name.title().replace('_',' ')


</t>
<t tx="ZoomQuiet.20051222115335.17">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.18">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.19">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.20">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.21">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.22">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.23">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.24">
def addTextArea(self,name,rows,cols):
    """ add a textarea element - addTextArea('message','10','90')""" 
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;textarea name='"+name+"' cols='"+cols+"' rows='"+rows+"'&gt;&lt;/textarea&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.25">
def addCntTextArea(self,name,desc,content,rows,cols):
    """ add a textarea element with content
        - addTextArea('message','desc',"contents...",'10','90')
    """ 
    self.form_list.append("""&lt;tr&gt;
            &lt;td align='right' valign='top'&gt;
            &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
            &lt;td valign='top' align='left'&gt;
            &lt;textarea name='%s' 
            cols='%s'
            rows='%s'&gt;%s&lt;/textarea&gt;
            &lt;td&gt;&lt;/tr&gt;"""%(desc
                          ,name
                          ,cols
                          ,rows
                          ,content)
                        )


</t>
<t tx="ZoomQuiet.20051222115335.26">def addGroup(self,*t):
    """ add a button group 
    """
    htm = """&lt;input 
        type='%s' 
        name='%s' 
        value='%s'
        class='%s'&gt;
    """
    group = ""
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;")
    for a,b,c,d in t:
        group += htm%(a,b,c,d)
    self.form_list.append(group+"&lt;/td&gt;&lt;/tr&gt;")	
</t>
<t tx="ZoomQuiet.20051222115335.27">def addComboBox(self,name,t):
    """ add a combobox element 
    - addComboBox('fruits'
                    ,{'apple':'Apple'
                    ,'pear':'Pear'
                    ,'orange':'Orange'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td align='left' valign='top'&gt;&lt;select name='"+name+"[]'&gt;")
    combo = ""
    t= t.items()
    for a,b in t:
        combo = combo + "&lt;option value='"+a+"'&gt;"+b+"&lt;/option&gt;"
    self.form_list.append(combo)
    self.form_list.append("&lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.28">def addRadioGroup(self,name,value):
	"""add a radio element export in TABLE
    - addRadioGroup('genre'
                    ,{'male':'Male'
                      ,'female':'Female'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
    t = value.items()
    for a,b in t:
        radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")



    </t>
<t tx="ZoomQuiet.20051222115335.29">
def addRadioList(self,name,desc,value,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.30">
def addRadioLi(self,name,desc,vdict,klist,id=""):
	"""add a radio element export as UL LI group
        - name 列表名
        - desc 项描述
        - vdict 值字典
        - klist 键列表
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;DIV id='qlist'&gt;&lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    #t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for k in klist:
        radio = radio + tmpl%(name,k,vdict[k])
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/DIV&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.31">
def addVarRadioList(self,name,desc,value,convert,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,convert[a],b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.32">
def addRadioGrp(self,name,desc,value):
	"""add a radio element in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='radio' 
        name='%s' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.33">
def addChkboxGrp(self,name,desc,value):
	"""add a radio element Export in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='checkbox' 
        name='%s[]' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.34">
def showFormList(self):
    """ returns the whole form list """
    return self.form_list

</t>
<t tx="ZoomQuiet.20051222115335.35">def display(self):
    """ displays the html form"""
    self.form_list.append("&lt;/table&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;")
    self.js_list.append("&lt;script type='text/javascript'&gt;")
    print self.js_list.pop()
    print "function validate_%s(frm){"% self.name
    print """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        print k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    print final_js_function.replace("&lt;break&gt;","\\n")
    print self.js_list.pop()
    for c in self.css_list:
        print c+"\n"
    for i in self.form_list:
        print i+"\n"

</t>
<t tx="ZoomQuiet.20051222115335.36">def export(self):
    """ export the html form code
        so people can do something for them self
    """
    exp = ""
    self.form_list.append("""&lt;/table&gt;
&lt;/fieldset&gt;&lt;/form&gt;&lt;textarea 
id="jsvalidation-framework" rows="27" &gt;%s
&lt;/textarea&gt;&lt;/div&gt;"""%self.jvfxml)

    self.js_list.append("&lt;script type='text/javascript'&gt;")
    exp += self.js_list.pop()
    exp += "function validate_%s(frm){"% self.name
    exp += """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        exp += k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    exp += final_js_function.replace("&lt;break&gt;","\\n")
    exp += self.js_list.pop()
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp

</t>
<t tx="ZoomQuiet.20051222115335.37">def addStyleSheets(self,t):
    """add a basic stylesheet - simple CSS parameters"""
    css = "&lt;style type='text/css'&gt;textarea { background-color:"+t['bgcolor']+";font-family:"+t['font']+"; font-size:"+t['size']+"px; border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} input { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} select { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} td { font-size:"+t['size']+"px; font-family:"+t['font']+"}&lt;/style&gt;"
    self.css_list.append(css)

</t>
<t tx="ZoomQuiet.20051222115335.38">def addRule(self,elem_name,rule_type,message):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data"
    repl = """enctype='multipart/form-data' 
        onsubmit='try { 
            var myValidator = validate_%s; 
            } 
        catch(e) { return true; } 
        return myValidator(this);"""    
    if rule_type == "required":
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name)
        self.form_list[0] = begin_form
        &lt;&lt;input&gt;&gt;
    else:
        pass
    

</t>
<t tx="ZoomQuiet.20051222115335.39">js_string = """
value=getObjectByID('%s').value;

if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name,elem_name,elem_name,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.40">js_string = """
obj = frm.elements['%s'];
//alert(obj.type);
value=frm.elements['%s'].value;
if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name
       ,elem_name
       ,elem_name
       ,elem_name
       ,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.41">def addJSValidation(self):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data'"
    repl = """
        onsubmit='return doValidate("%s");'
        """ 
    begin_form=self.form_list[0].replace(orig
                                 ,repl%self.name) 
    self.form_list[0] = begin_form
     
    


</t>
<t tx="ZoomQuiet.20051222115335.42">def addJSRule(self,name,message):
    """add a xml rule for javascript checking
    """
    exp = self.JSvMXLnode%(name,message)
    self.JSvRules.append(exp)
    
     
    


</t>
<t tx="ZoomQuiet.20051222115335.43">def saveJSRule(self,xml):
    """exp and save a xml rule for javascript checking
    """
    exp = ""
    for node in self.JSvRules:
        exp+= node
    #exp = self.JSvXMLtmpl%(form,exp)
    #self.jvfxml = self.jvfxmltmpl%(self.name,exp)
    #exp = self.jvfxmltmpl%(self.name,exp)
    #print self.jvfxml
    open(xml,'w').write(self.JSvXMLtmpl%(self.name,exp))



    
     
    




</t>
<t tx="ZoomQuiet.20051222115430">from Karrigell_QuickForm import Karrigell_QuickForm

p = Karrigell_QuickForm('teste','POST','foo.py','Authentication')
p.addElement('text','login',{'size':20
                       ,'maxlength':40})
p.addElement('text','password',{'size':20
                       ,'maxlength':40})
p.addRule('login','required',"Login is required!")
p.addGroup(["submit","botao_enviar","submit","Send"]
           ,["reset","botao_limpar","reset","Clear"])
p.display()</t>
<t tx="ZoomQuiet.20051222120608"># Leo 的节点操作非常的Easay! 滥用之！
## 将常常要修改的，其它页面都要使用的都收集起来！</t>
<t tx="ZoomQuiet.20051222120608.2">&lt;style&gt;
@others
&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051222120608.3">/* $Id: obpKwd3.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/
DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
/*decimal; lower-alpha*/
#qpage ul li{list-style-type :decimal;}
#slide ul li{list-style-type :square;}
DIV#qlist{}

#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}
DIV#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
DIV#mana A{
    padding: 2px 5px 0px 2px;}
DIV#mana A:hover{background-color: #E0FFB8;}
SPAN#title{font-size: 15px;}
SPAN#sequence{font-size: 12px;
    color: #930;
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    float:right;  
    padding: 2px;}
TEXTAREA#jsvalidation-framework{display:none;}

DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051222120608.4">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051222120608.5">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051222120608.6">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051222120608.7">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="Zoomq.20050615144554"># 快速利用Karrigell 开发功能站点
# Karrigell.ini 中有如下约定:
# 如果Kariigell 运行在 D:\Karrigell\Karrigell-2.2\ 
# 则其下应该有 karriweb\obp\KwDay1\ 这样的目录，以便安置实例  
[Alias]
..
obp=%(base)s/karriweb/obp
# 为统一的JVF页面输入检验建立访问别名
jvf=%(base)s/karriweb/obp/js
...



</t>
</tnodes>
</leo_file>
