<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet ekr_stylesheet?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="1056" clone_windows="0"/>
<globals body_outline_ratio="0.228515625">
	<global_window_position top="40" left="10" height="698" width="1024"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="Zoomq.20050615144554" a="E"><vh>KarrigellWebDev</vh>
<v t="ZoomQuiet.20051225185854" a="E"><vh>故事书</vh>
<v t="ZoomQuiet.20051225190043"><vh>Kday1:尝试</vh></v>
<v t="ZoomQuiet.20051225190043.1"><vh>Kday2:完成</vh></v>
<v t="ZoomQuiet.20051225190011"><vh>Kday3:发现</vh></v>
<v t="ZoomQuiet.20051225190011.1"><vh>Kday4:KS</vh></v>
<v t="ZoomQuiet.20051225190011.2"><vh>Kday5:重构</vh></v>
<v t="ZoomQuiet.20051225192243"><vh>Kday6:统计</vh></v>
<v t="ZoomQuiet.20051225185912" a="TV"><vh>Kdays:继续</vh></v>
</v>
<v t="ZoomQuiet.20051201224226"><vh>问卷设计</vh>
<v t="ZoomQuiet.20051204223324" tnodeList="ZoomQuiet.20051204223324"><vh>@nosent easy051201.cfg</vh></v>
<v t="ZoomQuiet.20051224182004" tnodeList="ZoomQuiet.20051224182004"><vh>@nosent CPUG051211.cfg</vh></v>
<v t="ZoomQuiet.20051224182004.1" tnodeList="ZoomQuiet.20051224182004.1"><vh>@nosent Python051221.cfg</vh></v>
</v>
<v t="ZoomQuiet.20051222120608"><vh>复用代码</vh>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224170150" tnodeList="ZoomQuiet.20051224170150"><vh>@nosent questionnaire.cfg</vh></v>
<v t="ZoomQuiet.20051224165357"><vh>KS</vh>
<v t="ZoomQuiet.20051224165419" tnodeList="ZoomQuiet.20051224165419,ZoomQuiet.20051224165419.1,ZoomQuiet.20051224165419.2,ZoomQuiet.20051224171010,ZoomQuiet.20051224171010.1,ZoomQuiet.20051224171010.2,ZoomQuiet.20051224171010.3,ZoomQuiet.20051224171010.4,ZoomQuiet.20051224171010.5,ZoomQuiet.20051224165419.9,ZoomQuiet.20051224165419.10,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.11,ZoomQuiet.20051224165419.12,ZoomQuiet.20051224181034,ZoomQuiet.20051224181034.1,ZoomQuiet.20051224165419.13,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.25,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.26,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.27,ZoomQuiet.20051224165419.28,ZoomQuiet.20051224165419.16,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.17,ZoomQuiet.20051224165419.15,ZoomQuiet.20051225180959,ZoomQuiet.20051224165419.14,ZoomQuiet.20051225180959.2,ZoomQuiet.20051225180959.3,ZoomQuiet.20051225180959.4,ZoomQuiet.20051225180959.5,ZoomQuiet.20051225180959.6,ZoomQuiet.20051224165419.15,ZoomQuiet.20051225192243.1,ZoomQuiet.20051224165419.14,ZoomQuiet.20051225192243.2,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.61,ZoomQuiet.20051224165419.62,ZoomQuiet.20051224165419.64,ZoomQuiet.20051224165419.63,ZoomQuiet.20051225181414"><vh>@nosent index.ks</vh>
<v t="ZoomQuiet.20051224165419.1" a="E"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.9"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.10"><vh>index</vh>
<v t="ZoomQuiet.20051224165419.11"><vh>&lt;&lt;页面事务&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.12"><vh>列显问卷</vh>
<v t="ZoomQuiet.20051224181034"><vh>&lt;&lt;发表的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224181034.1"><vh>&lt;&lt;回收的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.13"><vh>&lt;&lt;准备的&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.25"><vh>login</vh>
<v t="ZoomQuiet.20051224165419.26"><vh>表单</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.27" a="E"><vh>logout</vh></v>
<v t="ZoomQuiet.20051224165419.28"><vh>chkusr</vh></v>
<v t="ZoomQuiet.20051224165419.16" a="E"><vh>page</vh>
<v t="ZoomQuiet.20051224165419.17" a="E"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225180959"><vh>stat</vh>
<v t="ZoomQuiet.20051225180959.2"><vh>初始化</vh></v>
<v t="ZoomQuiet.20051225180959.3" a="E"><vh>统计回答</vh>
<v t="ZoomQuiet.20051225180959.4"><vh>&lt;&lt;成员回答&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225180959.5"><vh>&lt;&lt;总计&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225180959.6"><vh>&lt;&lt;未知成员&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225192243.1"><vh>bye</vh>
<v t="ZoomQuiet.20051225192243.2"><vh>记录在案</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.61"><vh>_qpubish()</vh>
<v t="ZoomQuiet.20051224165419.62"><vh>&lt;&lt;表单类型&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.63"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.64" a="E"><vh>&lt;&lt;loopask&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225181414" a="E"><vh>_grade()</vh></v>
</v>
<v t="ZoomQuiet.20051224185506" tnodeList="ZoomQuiet.20051224185506,ZoomQuiet.20051224185506.1,ZoomQuiet.20051224165419.2,ZoomQuiet.20051224171010,ZoomQuiet.20051224171010.1,ZoomQuiet.20051224171010.2,ZoomQuiet.20051224171010.3,ZoomQuiet.20051224171010.4,ZoomQuiet.20051224171010.5,ZoomQuiet.20051224185506.9,ZoomQuiet.20051224185506.10,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.11,ZoomQuiet.20051224185506.12,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.20,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.23,ZoomQuiet.20051224185506.22,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.18,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.19,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.24,ZoomQuiet.20051224185506.25,ZoomQuiet.20051224185506.26,ZoomQuiet.20051224185506.27"><vh>@nosent mana.ks</vh>
<v t="ZoomQuiet.20051224185506.1"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224185506.9"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.10"><vh>edit</vh>
<v t="ZoomQuiet.20051224185506.11"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.12"><vh>&lt;&lt;设计表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.20" a="E"><vh>page</vh>
<v t="ZoomQuiet.20051224185506.22" a="E"><vh>&lt;&lt;问卷展示&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.23"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.18"><vh>historic</vh>
<v t="ZoomQuiet.20051224185506.19"><vh>列表</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.24"><vh>_qshow()</vh>
<v t="ZoomQuiet.20051224185506.25" a="E"><vh>askloop</vh>
<v t="ZoomQuiet.20051224185506.26"><vh>&lt;&lt;单选列表&gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051224185506.27" a="E"><vh>_ctrl()</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051225171032"><vh>组织成员</vh>
<v t="ZoomQuiet.20051225173430" tnodeList="ZoomQuiet.20051225173430,ZoomQuiet.20051225173430.1,ZoomQuiet.20051225173430.2,ZoomQuiet.20051225173430.3,ZoomQuiet.20051225173430.4,ZoomQuiet.20051225173430.5,ZoomQuiet.20051225173430.6"><vh>@nosent  deptorg.py</vh>
<v t="ZoomQuiet.20051225173430.1"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225173430.2" a="E"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225173430.3"><vh>listDeptStaff</vh>
<v t="ZoomQuiet.20051225173430.4"><vh>&lt;&lt;AllStaff&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225173430.5" a="E"><vh>getStaffUser</vh></v>
<v t="ZoomQuiet.20051225173430.6"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.37"><vh>XSL</vh>
<v t="ZoomQuiet.20051225171032.38" a="E" tnodeList="ZoomQuiet.20051225171032.38,ZoomQuiet.20051225171032.39,ZoomQuiet.20051225171032.40,ZoomQuiet.20051225171032.41,ZoomQuiet.20051225171032.42,ZoomQuiet.20051225171032.43,ZoomQuiet.20051225171032.44,ZoomQuiet.20051225171032.51,ZoomQuiet.20051225171032.52,ZoomQuiet.20051225171032.53,ZoomQuiet.20051225171032.54,ZoomQuiet.20051225171032.55,ZoomQuiet.20051225171032.56,ZoomQuiet.20051225171032.45,ZoomQuiet.20051225171032.50,ZoomQuiet.20051225171032.46,ZoomQuiet.20051225171032.47,ZoomQuiet.20051225171032.48,ZoomQuiet.20051225171032.48,ZoomQuiet.20051225171032.49"><vh>@nosent deptorganise.xsl</vh>
<v t="ZoomQuiet.20051225171032.39"><vh>&lt;&lt;xsl head&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.40"><vh>&lt;&lt;xslmm desc&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.41"><vh>&lt;&lt;xslmm head&gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.42"><vh>&lt;&lt;freemind&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.43"><vh>&lt;&lt;xslmm H1&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.44" a="E"><vh>&lt;&lt;xslmm template&gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.45" a="E"><vh>&lt;&lt; loop nodes &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.46"><vh>&lt;&lt; loop organise &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.47" a="E"><vh>&lt;&lt; loop dept &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.48"><vh>&lt;&lt; item cnt &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.49"><vh>&lt;&lt; loop staff &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.50" a="E"><vh>&lt;&lt; loop DeptOrgVersion &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.51"><vh>&lt;&lt; node cloud &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.52"><vh>&lt;&lt; node child &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.53" a="E"><vh>&lt;&lt; node icon &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.54"><vh>&lt;&lt; node url &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.55"><vh>&lt;&lt; node doclink &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.56"><vh>&lt;&lt; node arrowlink &gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051225171511" a="E" tnodeList="ZoomQuiet.20051225171511"><vh>@nosent freemind.css</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051222115335"><vh>KQf</vh>
<v t="ZoomQuiet.20051222115335.1" a="E" tnodeList="ZoomQuiet.20051222115335.1,ZoomQuiet.20051222115335.2,ZoomQuiet.20051222115335.3,ZoomQuiet.20051222115335.4,ZoomQuiet.20051222115335.5,ZoomQuiet.20051222115335.6,ZoomQuiet.20051222115335.7,ZoomQuiet.20051222115335.8,ZoomQuiet.20051222115335.9,ZoomQuiet.20051222115335.10,ZoomQuiet.20051222115335.11,ZoomQuiet.20051222115335.12,ZoomQuiet.20051222115335.13,ZoomQuiet.20051222115335.14,ZoomQuiet.20051222115335.15,ZoomQuiet.20051222115335.16,ZoomQuiet.20051222115335.17,ZoomQuiet.20051222115335.18,ZoomQuiet.20051222115335.19,ZoomQuiet.20051222115335.20,ZoomQuiet.20051222115335.21,ZoomQuiet.20051222115335.22,ZoomQuiet.20051222115335.23,ZoomQuiet.20051222115335.24,ZoomQuiet.20051222115335.25,ZoomQuiet.20051222115335.26,ZoomQuiet.20051222115335.27,ZoomQuiet.20051222115335.28,ZoomQuiet.20051222115335.29,ZoomQuiet.20051222115335.30,ZoomQuiet.20051222115335.31,ZoomQuiet.20051222115335.32,ZoomQuiet.20051222115335.33,ZoomQuiet.20051222115335.34,ZoomQuiet.20051222115335.35,ZoomQuiet.20051222115335.36,ZoomQuiet.20051222115335.37,ZoomQuiet.20051222115335.38,ZoomQuiet.20051222115335.40,ZoomQuiet.20051222115335.41,ZoomQuiet.20051222115335.42,ZoomQuiet.20051222115335.43"><vh>@nosent Karrigell_QuickForm.py</vh>
<v t="ZoomQuiet.20051222115335.2" a="E"><vh>&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.3" a="E"><vh>class Karrigell_QuickForm</vh>
<v t="ZoomQuiet.20051222115335.4" a="E"><vh>__init__</vh>
<v t="ZoomQuiet.20051222115335.5"><vh>&lt;&lt;JVF&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.6"><vh>addElement</vh>
<v t="ZoomQuiet.20051222115335.7"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.8"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.9"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.10"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.11"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.12"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.13"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.14"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.15"><vh>addHtmNode</vh>
<v t="ZoomQuiet.20051222115335.16"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.17"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.18"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.19"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.20"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.21"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.22"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.23"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.24"><vh>addTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.25"><vh>addCntTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.26"><vh>addGroup</vh></v>
<v t="ZoomQuiet.20051222115335.27" a="E"><vh>addComboBox</vh></v>
<v t="ZoomQuiet.20051222115335.28"><vh>addRadioGroup</vh></v>
<v t="ZoomQuiet.20051222115335.29" a="E"><vh>addRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.30" a="E"><vh>addRadioLi</vh></v>
<v t="ZoomQuiet.20051222115335.31" a="E"><vh>addVarRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.32" a="E"><vh>addRadioGrp</vh></v>
<v t="ZoomQuiet.20051222115335.33"><vh>addCheckboxGrp</vh></v>
<v t="ZoomQuiet.20051222115335.34"><vh>showFormList</vh></v>
<v t="ZoomQuiet.20051222115335.35"><vh>display</vh></v>
<v t="ZoomQuiet.20051222115335.36"><vh>export</vh></v>
<v t="ZoomQuiet.20051222115335.37"><vh>addStyleSheets</vh></v>
<v t="ZoomQuiet.20051222115335.38"><vh>addRule</vh>
<v t="ZoomQuiet.20051222115335.39"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.40"><vh>&lt;&lt;input&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.41"><vh>addJSValidation</vh></v>
<v t="ZoomQuiet.20051222115335.42"><vh>addJSRule</vh></v>
<v t="ZoomQuiet.20051222115335.43"><vh>saveJSRule</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="ZoomQuiet.20051201224226"># 使用标准
# 这个是Leo 的宏约定，让Leo 将以下的节点及时的保存到指定目录中
@path q

</t>
<t tx="ZoomQuiet.20051204223324">[desc]
pname		= 啄木鸟问卷 之 “基本知晓”
desc		= 自学问卷v0.7
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 1

[ask/1]
question= 啄木鸟社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= a # 正确答案

[ask/2]
question= 啄木鸟社区关注的是什么语言的开发推广？
a		= PHP
b		= Perl
c       = Python
d       = ASP
e       = Zope
f		= 不知道……
key		= c # 正确答案

[ask/3]
question= 啄木鸟和CPyUG的关系是？
a		= 联盟
b		= 下属
c		= 所有者
d		= 不知道……
key		= a # 正确答案

[ask/4]
question= 啄木鸟社区的项目组织原则是什么？
a		= 路见不平一声吼！
b		= 听从组织安排
c		= 不知道……
key		= a # 正确答案

[ask/5]
question= 啄木鸟社区提供了什么资源供大家使用？
a		= Wiki
b		= SVN
c       = 邮件列表
d       = 以上全有
key		= d # 正确答案</t>
<t tx="ZoomQuiet.20051222115335"># 按照约定，这样的扩展要部属到Karrigell 的根目录，所以使用相对路径回溯指向！
@path ../../../</t>
<t tx="ZoomQuiet.20051222115335.1">
&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;

@others

"""
   Overview - Karrigell_QuickForm
   
  p = Karrigell_QuickForm('teste','POST','teste.py')
  p.addElement('text','nome',{'size':80,'maxlength':20})
  p.addElement('text','email',{'size':80,'maxlength':20})
  p.addRule('nome','required','campo nome obrigario!')
  p.addComboBox('combo',{'a':'A','b':'B'})
  p.addCheckBox('fuda',{'a':'Letra A','b':'Letra B'})
  p.addElement('image','python.gif')
  p.addElement('file','foto')
  p.addElement('submit','botao_enviar',{'value':'Enviar A'})
  p.addComboBox('sexo',['Masculino','Masculino'],['Feminino','Feminino'])
  p.addTextArea('mensagem','20','80')
  p.addGroup(["submit","botao_enviar","Enviar"],["reset","botao_limpar","Limpar"])
  p.addStyleSheets({'bgcolor':'lightblue','font':'verdana','border-color':'black'})
  p.display()
 
"""
</t>
<t tx="ZoomQuiet.20051222115335.2">#@ignore
#@language python
"""
     Package: Karrigell_QuickForm-1.0.1-alpha
Requirements: Karrigell HTTP Server - http://karrigell.sourceforge.net
 Description: - A simple class that generates html forms with some basic javascript validations. 
              - It is similar to HTML_QuickForm from PEAR (http://pear.php.net).   
      Author: Marcelo Santos Araujo &lt;marcelo@orionlab.net&gt; 
        Date: 23 November 2005
     Version: $Revision Karrigell_QuickForm-1.0.1-alfa
     Credits: Special thanks to Pierre Quentel and Karrigell's developers.
 Contributor: Zoom.Quiet &lt;Zoom.Quiet@gmail.com&gt;
                - Chinese handbook
                - addCheckboxGrp()
                - addRadioList()
                - addCntTextArea()
                - add JSValidation support:
                    addJSValidation()
                    addJSRule()
                    saveJSRule()
"""





</t>
<t tx="ZoomQuiet.20051222115335.3">class Karrigell_QuickForm:    
    """Simple HTML Forms Generation  - Karrigell_QuickForm"""
	@others</t>
<t tx="ZoomQuiet.20051222115335.4">def __init__(self,name,method,action,legend):    	
    """Form name, request method, file target,legend - Karrigell_QuickForm('contact_form','POST','contact.py','form legend')"""
    @others
    
    self.form_list = []
    self.css_list = []
    self.js_list =[]
    self.name = name
    self.legend_name = legend
    self.method = method
    self.action = action
    &lt;&lt;JVF&gt;&gt;
    self.form_list.append("""&lt;div&gt;
&lt;form method='%s' 

action='%s' 
id='%s' enctype='multipart/form-data'&gt;
&lt;fieldset&gt;&lt;legend&gt;
&lt;b&gt;%s&lt;/b&gt;
&lt;/legend&gt;&lt;table&gt;"""%(self.method
                     ,self.action
                     ,self.name
                     ,self.legend_name)
                     )</t>
<t tx="ZoomQuiet.20051222115335.5">self.jvfxml = ""

self.jvfxmltmpl="""
&lt;validation-config lang="auto"&gt;
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;	
&lt;/validation-config&gt;
"""
self.jvformtmpl="""
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
"""
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []

</t>
<t tx="ZoomQuiet.20051222115335.6">
def addElement(self,element,name,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'full_name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.7">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' size='"+size+"' maxlength='"+maxlength+"'&gt;&lt;td&gt;&lt;/tr&gt;") 

   

</t>
<t tx="ZoomQuiet.20051222115335.8">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.9">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.10">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.11">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.12">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.13">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.14">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.15">
def addHtmNode(self,element,name,desc,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'object name'
                     ,'print name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.16">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    htm = """&lt;tr&gt;
    &lt;td align='right' valign='top'&gt;
    &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
    &lt;td valign='top' align='left'&gt;
    &lt;input type='%s' 
        name='%s' 
        size='%s' 
        maxlength='%s'&gt;&lt;td&gt;
        &lt;/tr&gt;
        """
    self.form_list.append(htm%(desc
                               ,element
                               ,name
                               ,size
                               ,maxlength)
                            )
    #name.title().replace('_',' ')


</t>
<t tx="ZoomQuiet.20051222115335.17">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.18">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.19">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.20">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.21">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.22">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.23">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.24">
def addTextArea(self,name,rows,cols):
    """ add a textarea element - addTextArea('message','10','90')""" 
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;textarea name='"+name+"' cols='"+cols+"' rows='"+rows+"'&gt;&lt;/textarea&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.25">
def addCntTextArea(self,name,desc,content,rows,cols):
    """ add a textarea element with content
        - addTextArea('message','desc',"contents...",'10','90')
    """ 
    self.form_list.append("""&lt;tr&gt;
            &lt;td align='right' valign='top'&gt;
            &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
            &lt;td valign='top' align='left'&gt;
            &lt;textarea name='%s' 
            cols='%s'
            rows='%s'&gt;%s&lt;/textarea&gt;
            &lt;td&gt;&lt;/tr&gt;"""%(desc
                          ,name
                          ,cols
                          ,rows
                          ,content)
                        )


</t>
<t tx="ZoomQuiet.20051222115335.26">def addGroup(self,*t):
    """ add a button group 
    """
    htm = """&lt;input 
        type='%s' 
        name='%s' 
        value='%s'
        class='%s'&gt;
    """
    group = ""
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;")
    for a,b,c,d in t:
        group += htm%(a,b,c,d)
    self.form_list.append(group+"&lt;/td&gt;&lt;/tr&gt;")	
</t>
<t tx="ZoomQuiet.20051222115335.27">def addComboBox(self,name,t):
    """ add a combobox element 
    - addComboBox('fruits'
                    ,{'apple':'Apple'
                    ,'pear':'Pear'
                    ,'orange':'Orange'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td align='left' valign='top'&gt;&lt;select name='"+name+"[]'&gt;")
    combo = ""
    t= t.items()
    for a,b in t:
        combo = combo + "&lt;option value='"+a+"'&gt;"+b+"&lt;/option&gt;"
    self.form_list.append(combo)
    self.form_list.append("&lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.28">def addRadioGroup(self,name,value):
	"""add a radio element export in TABLE
    - addRadioGroup('genre'
                    ,{'male':'Male'
                      ,'female':'Female'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
    t = value.items()
    for a,b in t:
        radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")



    </t>
<t tx="ZoomQuiet.20051222115335.29">
def addRadioList(self,name,desc,value,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.30">
def addRadioLi(self,name,desc,vdict,klist,id=""):
	"""add a radio element export as UL LI group
        - name 列表名
        - desc 项描述
        - vdict 值字典
        - klist 键列表
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;DIV id='qlist'&gt;&lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    #t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for k in klist:
        radio = radio + tmpl%(name,k,vdict[k])
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/DIV&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.31">
def addVarRadioList(self,name,desc,value,convert,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,convert[a],b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.32">
def addRadioGrp(self,name,desc,value):
	"""add a radio element in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='radio' 
        name='%s' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.33">
def addChkboxGrp(self,name,desc,value):
	"""add a radio element Export in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='checkbox' 
        name='%s[]' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.34">
def showFormList(self):
    """ returns the whole form list """
    return self.form_list

</t>
<t tx="ZoomQuiet.20051222115335.35">def display(self):
    """ displays the html form"""
    self.form_list.append("&lt;/table&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;")
    self.js_list.append("&lt;script type='text/javascript'&gt;")
    print self.js_list.pop()
    print "function validate_%s(frm){"% self.name
    print """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        print k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    print final_js_function.replace("&lt;break&gt;","\\n")
    print self.js_list.pop()
    for c in self.css_list:
        print c+"\n"
    for i in self.form_list:
        print i+"\n"

</t>
<t tx="ZoomQuiet.20051222115335.36">def export(self):
    """ export the html form code
        so people can do something for them self
        &lt;textarea 
id="jsvalidation-framework" rows="27" &gt;%s
&lt;/textarea&gt;%self.jvfxml
    """
    
    exp = ""
    self.form_list.append("""&lt;/table&gt;
&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;""")

    self.js_list.append("&lt;script type='text/javascript'&gt;")
    exp += self.js_list.pop()
    exp += "function validate_%s(frm){"% self.name
    exp += """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        exp += k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    exp += final_js_function.replace("&lt;break&gt;","\\n")
    exp += self.js_list.pop()
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp


</t>
<t tx="ZoomQuiet.20051222115335.37">def addStyleSheets(self,t):
    """add a basic stylesheet - simple CSS parameters"""
    css = "&lt;style type='text/css'&gt;textarea { background-color:"+t['bgcolor']+";font-family:"+t['font']+"; font-size:"+t['size']+"px; border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} input { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} select { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} td { font-size:"+t['size']+"px; font-family:"+t['font']+"}&lt;/style&gt;"
    self.css_list.append(css)

</t>
<t tx="ZoomQuiet.20051222115335.38">def addRule(self,elem_name,rule_type,message):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data"
    repl = """enctype='multipart/form-data' 
        onsubmit='try { 
            var myValidator = validate_%s; 
            } 
        catch(e) { return true; } 
        return myValidator(this);"""    
    if rule_type == "required":
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name)
        self.form_list[0] = begin_form
        &lt;&lt;input&gt;&gt;
    else:
        pass
    

</t>
<t tx="ZoomQuiet.20051222115335.39">js_string = """
value=getObjectByID('%s').value;

if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name,elem_name,elem_name,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.40">js_string = """
obj = frm.elements['%s'];
//alert(obj.type);
value=frm.elements['%s'].value;
if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name
       ,elem_name
       ,elem_name
       ,elem_name
       ,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.41">def addJSValidation(self):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data'"
    repl = """
        onsubmit='return doValidate("%s");'
        """ 
    begin_form=self.form_list[0].replace(orig
                                 ,repl%self.name) 
    self.form_list[0] = begin_form
     
    


</t>
<t tx="ZoomQuiet.20051222115335.42">def addJSRule(self,name,message):
    """add a xml rule for javascript checking
    """
    exp = self.JSvMXLnode%(name,message)
    self.JSvRules.append(exp)
    
     
    


</t>
<t tx="ZoomQuiet.20051222115335.43">def saveJSRule(self,xml):
    """exp and save a xml rule for javascript checking
    """
    exp = ""
    for node in self.JSvRules:
        exp+= node
    #exp = self.JSvXMLtmpl%(form,exp)
    #self.jvfxml = self.jvfxmltmpl%(self.name,exp)
    #exp = self.jvfxmltmpl%(self.name,exp)
    #print self.jvfxml
    open(xml,'w').write(self.JSvXMLtmpl%(self.name,exp))



    
     
    




</t>
<t tx="ZoomQuiet.20051222120608"># Leo 的节点操作非常的Easay! 滥用之！
## 将常常要修改的，其它页面都要使用的都收集起来！</t>
<t tx="ZoomQuiet.20051224165357">发现 Karrigell Server 方式的页面组织非常的简洁，运用之！</t>
<t tx="ZoomQuiet.20051224165419">##基础宣言
&lt;&lt; page declarations &gt;&gt;
## HTML 代码准备
&lt;&lt; htmlcode &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others


</t>
<t tx="ZoomQuiet.20051224165419.1">## questionnaire.ks
# 文件名匹配模块
import os,fnmatch
#页面间传递对象
import time,base64,pickle
# XML 处理模块
from elementtree import ElementTree
# Karrigell 提供支持模块
from HTMLTags import *
from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm

</t>
<t tx="ZoomQuiet.20051224165419.2">def _htmhead(title):
    """基础复用页面元素控制
    """
    htm = """&lt;html&gt;&lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"&gt;
        &lt;title&gt;"""
    htm += title
    htm += """&lt;/title&gt;
    &lt;&lt;k_base&gt;&gt;
    &lt;!--
    &lt;script language="javascript" src="/k/js/validation-framework.js"&gt;&lt;/script&gt;
    --&gt;
    
    &lt;/head&gt;
    &lt;body&gt;    
    &lt;div id='qpage'&gt;
    """
    return htm

htmfoot="""
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;h5&gt;design by:
    &lt;a href="http://wiki.woodpecker.org.cn/moin/ZoomQuiet"&gt;
    Zoom.Quiet&lt;/a&gt;
 powered by :
     
 &lt;a href="http://python.org"&gt;
 Python&lt;/a&gt;
 ::
 &lt;a href="http://karrigell.sourceforge.net"&gt;
 KARRIGELL 2.2&lt;/a&gt;
 +
 &lt;a href="http://effbot.org/zone/element.htm"&gt;
 ElementTree&lt;/a&gt;
&lt;/h5&gt;

&lt;/div&gt;&lt;!--id='qpage'--&gt;

&lt;/body&gt;
&lt;/html&gt;
"""


</t>
<t tx="ZoomQuiet.20051224165419.9"># 使用 Session来记忆成员信息
sess = Session()

if not hasattr(sess, 'usr'):
    sess.usr = {"name":"NULL"}

conf = DictIni("questionnaire.cfg")
qpath = conf.qpage.qpath    #"q/"
pubq = conf.qpage.pubq
cfgf = qpath+pubq

## 问卷信息的字典化信息对象
qcfg = DictIni(cfgf)

</t>
<t tx="ZoomQuiet.20051224165419.10">def index():
    """首先实现的页面
    """
    # 八股化的页面函式组织... clone 统一的页头输出章节！
    &lt;&lt; pagehead &gt;&gt;
    
    # 测试/印证外部专用处理页面对象的引入
    #
    #print sess.usr
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        &lt;&lt;页面事务&gt;&gt;
        print SPAN(A('退出', href="logout"),id="mana")
        print SPAN(A('首页', href="index"),id="mana")
        print H1("啄木鸟 之 自学问卷集")
        print "&lt;DIV id='cntarea'&gt;"
        @others
        print "&lt;/DIV&gt;"
    
    """快速设计CSS时可以方便的列印出主要页面元素来看效果
    print H1("H1")
    print H2("H2")
    print H3("H3")
    print H4("H4")
    print H5("H5")
    print H6("H6")
    """
    
    # 八股化的页面函式组织... clone 统一的页脚输出章节！
    &lt;&lt; pagefoot &gt;&gt;











</t>
<t tx="ZoomQuiet.20051224165419.11"># 清理问卷指定
try:
    if ""!=sess.usr["qp"]:
        sess.usr["qp"] = ""
    else:
        pass
except:
    pass
## 可以随时打印当前 session 值来印证自个儿的想法
#print sess.usr
</t>
<t tx="ZoomQuiet.20051224165419.12">qcfglist = []
#print conf.qpage.qpath
for f in os.listdir(conf.qpage.qpath):
    if fnmatch.fnmatch(f, '*.cfg'):
        if ("__init__" in f):
            pass
        else:
            qcfglist.append(f)
#print qcfglist
# 识别问卷发布情况::
qdone = {}
qdoing = {}
qdesign = {}
for p in qcfglist:
    cfgp = DictIni(conf.qpage.qpath+p)
    if 0==cfgp.desc.done:
       qdesign[p]=cfgp
    elif 1==cfgp.desc.done:
       qdoing[p]=cfgp
    elif 2==cfgp.desc.done:
       qdone[p]=cfgp
    else:
        qdesign[p]=cfgp

#分别列表显示问卷

&lt;&lt;发表的&gt;&gt;
&lt;&lt;回收的&gt;&gt;
&lt;&lt;准备的&gt;&gt;
</t>
<t tx="ZoomQuiet.20051224165419.13">
print H5("准备中的的问卷::")
print UL("".join([str(LI(
            B(A(qdesign[i].desc.pname
                ,href="page?qpname=%s&amp;do=design"%i.split(".")[-2])
                )+
                SUP("自学资料::"+qdesign[i].desc.learn)
                         )
                        ) for i in qdesign
                    ])
                    )
</t>
<t tx="ZoomQuiet.20051224165419.14">
print _htmhead("CPyUG·啄木鸟社区·自学问卷管理 obpKwDays- Powered by Karrigell")





</t>
<t tx="ZoomQuiet.20051224165419.15">
print htmfoot



</t>
<t tx="ZoomQuiet.20051224165419.16">def page(qpname,do):
    """从原 mana.pih 重构过来 统一的问卷管理 .ks
    """
    &lt;&lt; pagehead &gt;&gt;
    # 序列化对象以便页面间传递
    pisess = pickle.dumps(sess.usr)
    #print pisess
    #print "&lt;br/&gt;尝试URL 安全序列化--&gt;  "
    sessurl = base64.urlsafe_b64encode(pisess)
    #print sessurl
    #print "尝试load 回来--&gt; &lt;br/&gt; "
    #print pickle.loads(base64.urlsafe_b64decode(sessurl))
    #print QUERY
    #base64.urlsafe_b64encode(pickle.dumps(obj))
    #pickle.loads(base64.urlsafe_b64decode(obj))
    
    qcfg = DictIni(conf.qpage.qpath+qpname+".cfg")
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        sess.usr["qp"] = qpname
        # 051224 加入问卷状态
        sess.usr["do"] = do
        
        &lt;&lt;导航&gt;&gt;
        
        # 整理原问卷解析为标准函式
        print _qpubish(qcfg,"bye",do,qpname)        
        """将dict 内容输出为回答问卷
            - dict 问卷设计字典
            - aim 提交目标
            - type 统计模式
            - qpname 问卷名
        """
    
    &lt;&lt; pagefoot &gt;&gt;</t>
<t tx="ZoomQuiet.20051224165419.17">print SPAN(A('退出', href="logout"),id="mana")
print SPAN(A('首页', href="index"),id="mana")
print SPAN(A("编辑管理问卷"
             ,href="../mana.ks/edit?qp=%s&amp;obj=%s"%(sess.usr["qp"]
                ,base64.urlsafe_b64encode(pickle.dumps(sess.usr))
                        )
                )
            ,id="mana")
            
</t>
<t tx="ZoomQuiet.20051224165419.25">
def login():
    """实际最先完成的页面
    """
    #print sess.usr
    &lt;&lt; pagehead &gt;&gt;    
    # 实际活动
    print H1("啄木鸟 之 自学问卷集")
    
    @others 

    &lt;&lt; pagefoot &gt;&gt;
    #print QUERY
    #raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.26">p = Karrigell_QuickForm('fm_login'
                        ,'POST'
                        ,'chkusr'
                        ,"登录自学问卷")
p.addHtmNode('text','uname'
             ,"CPyUG名号"
             ,{'size':40,'maxlength':37})
p.addGroup(["submit","btn_submit","提交","btn"]
           ,["reset","btn_reset","重写","btn"])

p.addRule('uname','required'
          ,"成员名是必须的!Login name is required!")
#p.addRule('password','required',"Password is required!")
p.display()
</t>
<t tx="ZoomQuiet.20051224165419.27">def logout():
    """完成 login 时顺手就创立的页面
    """
    sess.close()
    
    #sess.usr = {}
    #sess.usr["name"] ="NULL"
    #print QUERY
    raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.28">def chkusr(**args):
    """从login 自然引发的页面
        检查用户登录情况
    """    
    print QUERY
    print "&lt;hr/&gt;"
    print sess.usr
    sess.usr["name"] = QUERY["uname"]
    print sess.usr
    # 不自动跳转页面，打印session 观察……
    raise HTTP_REDIRECTION,"index"
</t>
<t tx="ZoomQuiet.20051224165419.61">def _qpubish(dict,aim,type,qpname):
    """将dict 内容输出为回答问卷
        - dict 问卷设计字典
        - aim 提交目标
        - type 统计模式
        - qpname 问卷名
    """
    exp = ""
    qptitle = """&lt;h6&gt;
        &lt;SPAN&gt;&lt;B&gt;%s&lt;/B&gt;&lt;/SPAN&gt;
        (自学资料::%s)&lt;/h6&gt;        
        """%(dict.desc.pname
             ,dict.desc.learn)
    &lt;&lt;表单类型&gt;&gt;
    p = Karrigell_QuickForm(qpname,'POST',aim,dict.desc.desc)
    exp += "&lt;h1&gt;%s&lt;/h1&gt;"%(dict.desc.pname)
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    #SPAN(B("问卷进行中::"),id="title")
    p.addElement('node',"&lt;DIV id='qlist'&gt;&lt;ul&gt;","")
    # 深入数据
    # 题目循环输出
    &lt;&lt;loopask&gt;&gt;
    
    # 由于JVF 的浏览器兼容问题，先放弃！
    #p.addJSValidation()
    #p.saveJSRule("../js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;&lt;/DIV&gt;','')
    
    &lt;&lt;submit&gt;&gt;
    
    exp += p.export()
    #exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    exp += qptitle
    #exp += "&lt;p&gt;返回%s&lt;/p&gt;"%dict.desc.learn
    return exp



</t>
<t tx="ZoomQuiet.20051224165419.62">if "doing" == type:
    pass
elif "done" == type:
    aim="#"
elif "design" == type:
    pass

</t>
<t tx="ZoomQuiet.20051224165419.63">if "doing" == type:
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])    
elif "done" == type:
    pass
elif "design" == type:
    pass

</t>
<t tx="ZoomQuiet.20051224165419.64">"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass    
    #051219 fixed rurn of dict
    liq = [q for q in qli.keys()]
    liq.sort()    
    if i%2 == 0:
        p.addRadioLi("cr_ask%s"%i
               ,ask["question"]
               ,qli
               ,liq
               ,"even")
    else:
        p.addRadioLi("cr_ask%s"%i
               ,ask["question"]
               ,qli
               ,liq)
            
    ## JVF 调试太复杂不用之！
    #p.addJSRule("cr_ask%s"%i,"问题%s "%i)


</t>
<t tx="ZoomQuiet.20051224170150"># 将全局性约定，组织为外部配置文件
[qpage]
qpath		= q/
apath		= a/
pubq    = "easy051201.cfg"



</t>
<t tx="ZoomQuiet.20051224171010">&lt;style&gt;
@others

&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051224171010.1">/* $Id: obpKwds.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/

DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
#qpage ul li{list-style-type :decimal;}
DIV#qlist{}
#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}

SPAN#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
SPAN#mana A{
    padding: 2px 5px 0px 2px;}
SPAN#mana A:hover{BACKGROUND-COLOR: #E0FFB8;}
DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051224171010.2">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051224171010.3">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051224171010.4">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051224171010.5">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="ZoomQuiet.20051224181034">print H4("发表中的问卷::")

print UL("".join([str(LI(
 B(A(qdoing[i].desc.pname
     ,href="page?qpname=%s&amp;do=doing"%i.split(".")[-2])
     ## Zoomq::051220 slide show
     #,href="issue?qpname=%s&amp;do=doing"%i.split(".")[-2])
     )+             
     SUB(A("回答统计",href="stat?qp=%s"%i))
             )
            ) for i in qdoing.keys()
        ])
        ,id="qplist")
</t>
<t tx="ZoomQuiet.20051224181034.1">
print H3("已发布的问卷::")
print UL("".join([str(LI(
            B(A(qdone[i].desc.pname
                ,href="page?qpname=%s&amp;do=done"%i.split(".")[-2])
                )+
                 SUB(A("回答统计",href="stat?qp=%s"%i))
                         )
                        ) for i in qdone
                    ])
                    )</t>
<t tx="ZoomQuiet.20051224182004">[desc]
pname		= 啄木鸟问卷 之 “CPyUG常识”
desc		= 自学问卷v0.6
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 2

[ask/1]
question= CPyUG是什么意思？
a		= 中国Perl用户组
b		= 中国PHP用户组
c		= 中国Python用户组
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= CPyUG社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= b # 正确答案

[ask/3]
question= CPyUG 的核心宗旨是什么？
a		= 组织Python项目
b		= 推广Python 语言应用
c       = 发展成员进行收费创利
f		= 不知道……
key		= b # 正确答案
</t>
<t tx="ZoomQuiet.20051224182004.1">[desc]
pname		= 啄木鸟问卷 之 “Python FAQ”
desc		= 自学问卷v0.7.3
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 0

[ask/1]
question= Python 是什么东西？
a		= 是蟒蛇
b		= 是种动态脚本语言
c       = 以上都对
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= Python 是面向什么的？
a		= 本质上是面向对象的
b		= 也可以面向函式的
c       = 爱面向什么都可以
d       = 以上都对
f		= 不知道……
key		= d # 正确答案

[ask/3]
question= Python最独特的语法个性是什么？
a		= 使用缩进来限定逻辑结构
b		= 创造了丰富的内置数据类型
c		= 不使用指针
d		= 不知道……
key		= a # 正确答案
</t>
<t tx="ZoomQuiet.20051224185506">##基础宣言
&lt;&lt; page declarations &gt;&gt;
## HTML 代码准备
&lt;&lt; htmlcode &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others


</t>
<t tx="ZoomQuiet.20051224185506.1">## mana.ks
# 文件名匹配模块
import os,fnmatch,glob
#页面间传递对象
import time,base64,pickle
# 文件高级对象，进行复制
import shutil
# Karrigell 提供支持模块
from HTMLTags import *
from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm

</t>
<t tx="ZoomQuiet.20051224185506.9">conf = DictIni("questionnaire.cfg")
qpagetpl = "qpagetpl.cfg"
# 使用 Session来记忆成员信息
sess = Session()

</t>
<t tx="ZoomQuiet.20051224185506.10">def edit(**var):
    """mana.pih 重构而来
    """
    #print var
    if not hasattr(sess, 'usr'):
        sess.usr = pickle.loads(
                    base64.urlsafe_b64decode(var["obj"]))
        sess.usr["qp"] = var["qp"] 
    if "qp" in QUERY.keys():
        if QUERY["qp"]==sess.usr["qp"]:
            pass
        else:
            #说明是新问卷的编辑
            sess.usr["qp"] = QUERY["qp"]
    
    &lt;&lt; pagehead &gt;&gt;
    &lt;&lt;导航&gt;&gt;
    #print sess.usr
    #处理设计表单
    if "his" in QUERY.keys():
        #进入历史版本编辑
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"."+QUERY["his"])
    else:        
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"")
        #qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
        
    &lt;&lt;设计表单&gt;&gt;   
    
    &lt;&lt; pagefoot &gt;&gt;</t>
<t tx="ZoomQuiet.20051224185506.11">
print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('历史', href="historic")
           ,id="mana")
           
print H1("在线编辑问卷设计文案，自动解析为模拟问卷")
</t>
<t tx="ZoomQuiet.20051224185506.12">#print open(qpage,"r").read()

dict = DictIni(qpage)
p = Karrigell_QuickForm('fm_qdesign'
                        ,'POST'
                        ,"page"
                        ,"问卷设计")
p.addCntTextArea('qpage'
              ,''
              ,"%s"%open(qpage,"r").read()
              ,'30','100')
p.addGroup(["submit","btn_submit","提交","btn"])
p.display()</t>
<t tx="ZoomQuiet.20051224185506.13">
print _htmhead("邮件技术部·项目管理·自学问卷管理 - Powered by Karrigell")





</t>
<t tx="ZoomQuiet.20051224185506.14">
print htmfoot



</t>
<t tx="ZoomQuiet.20051224185506.18">def historic(**var):
    #print var
    
    &lt;&lt; pagehead &gt;&gt;
    
    #print sess.usr
    #处理设计表单
    #qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
    @others   
    
    &lt;&lt; pagefoot &gt;&gt;

</t>
<t tx="ZoomQuiet.20051224185506.19">#allq = os.listdir(conf.qpage.qpath)
#qnow = fnmatch.fnmatch(allq, '*.cfg')

#qnow = [fnmatch.filter(f, '*.cfg') for f in os.listdir(conf.qpage.qpath)]
qnow = fnmatch.filter(os.listdir(conf.qpage.qpath)
                       , '%s.cfg.*'%sess.usr["qp"])

print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('返回编辑', href="edit")
           ,id="mana")
print H3("问卷过往版本:")
print "&lt;UL&gt;"
qnow.reverse()
for l in qnow:
    s = l.split(".")
    print LI(A("""%s 
             &lt;sup&gt;%s/%s/%s %s:%s:%s 版本&lt;/sup&gt;
             &lt;sub&gt;大小:%sb&lt;/sub&gt;"""%(s[0]
             ,s[-1][:2]
             ,s[-1][2:4]
             ,s[-1][4:6]
             ,s[-1][6:8]
             ,s[-1][8:10]
             ,s[-1][10:]
             ,os.stat(conf.qpage.qpath+l)[-4]
             ),href="edit?his=%s"%s[-1]
                )
             )
    #print dir()
print "&lt;/UL&gt;"
    </t>
<t tx="ZoomQuiet.20051224185506.20">def page(**args):
    """qpage.pih 重构而来
    """
    &lt;&lt; pagehead &gt;&gt;
    #print QUERY["qpage"]
    #qcfg = DictIni(conf.qpage.qpath+QUERY["qp"]+".cfg")
    &lt;&lt;导航&gt;&gt;
    
    &lt;&lt;问卷展示&gt;&gt;
    
    
    &lt;&lt; pagefoot &gt;&gt;


</t>
<t tx="ZoomQuiet.20051224185506.22">qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
# 先复制一下子
shutil.copy2(qpage,qpage+".%s"%time.strftime("%y%m%d%H%M%S"
                                             , time.localtime())
             )
# 再写入文件
open(qpage,"w").write(QUERY["qpage"])    
#qcfg = DictIni(QUERY["qpage"])
# 只能从文件对象理解！！bug!!!
qcfg = DictIni(qpage)
## 好象有(value=str对象)的使用方式…………

print _qshow(qcfg,"#")
</t>
<t tx="ZoomQuiet.20051224185506.23">#print sess.usr
# validation-framework 的对应支持
#print A("",id="errorDiv")
#print DIV("",id="errorMessage")

print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('历史', href="historic")
           ,id="mana")
print SPAN(A('返回设计', href="edit")
           ,id="mana")
              

</t>
<t tx="ZoomQuiet.20051224185506.24">def _qshow(dict,aim):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST',aim,dict.desc.desc)
    #p.addElement('submit','btn_submit',{'value':'退出'})   
    
    exp += "&lt;h1&gt;%s&lt;/h1&gt;"%(dict.desc.pname)
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    
    @others
    
    #p.addJSValidation()
    #p.saveJSRule("../js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;','')
    
    #p.addGroup(["submit","btn_submit","提交","btn"]
    #           ,["reset","btn_reset","重写","btn"])
    exp += p.export()
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    #exp += "&lt;p&gt;返回%s&lt;/p&gt;"%dict.desc.learn
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051224185506.25"># 要根据平均值原则,生成不同的radio列表
"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}

k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    #print qk
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass
    question = ask["question"]+"&lt;sup&gt;答案::%s&lt;/sup&gt;"%ask["key"]
    #print qli.items()
    #051219 fixed rurn of dict
    liq = [q for q in qli.keys()]
    liq.sort()
    #print liq
    
    &lt;&lt;单选列表&gt;&gt;
    
    p.addJSRule("cr_ask%s"%i,"问题%s "%i)




</t>
<t tx="ZoomQuiet.20051224185506.26">      
if i%2 == 0:        
    p.addRadioLi("cr_ask%s"%i
           ,question
           ,qli
           ,liq
           ,"even")
else:        
    p.addRadioLi("cr_ask%s"%i
           ,question
           ,qli
           ,liq)

#print qli.items()
"""
if 0==len(ctrl.keys()):        
    if i%2 == 0:        
        p.addRadioList("cr_ask%s"%i
               ,question
               ,qli
               ,"even")
    else:        
        p.addRadioList("cr_ask%s"%i
               ,question
               ,qli)
else:    
    if i%2 == 0:        
        #p.addRadioList("cr_ask%s"%i
        p.addVarRadioList("cr_ask%s"%i                        
               ,question
               ,qli
               ,ctrl
               ,"even")
    else:        
        #p.addRadioList("cr_ask%s"%i
        p.addVarRadioList("cr_ask%s"%i
               ,question
               ,qli
               ,ctrl)
"""

</t>
<t tx="ZoomQuiet.20051224185506.27">def _ctrl(dict):
    """将平均分计算模式转换为统一控制对象
    [grade]
    # key|point
    ctrl = point
    point=a-&gt;5;b-&gt;4;c-&gt;3;d-&gt;2;e-&gt;1
    """
    ctrl={}
    if "point" == dict.ctrl:
        for k in dict.point.split(";"):
           s=k.split("-&gt;")
           ctrl[s[0]]=s[1]
    else:
        pass
    #print len(ctrl.keys())
    return ctrl







</t>
<t tx="ZoomQuiet.20051225171032"># 尝试使用专门脚本来解析理解mm 文件
@path xslmm

</t>
<t tx="ZoomQuiet.20051225171032.37"></t>
<t tx="ZoomQuiet.20051225171032.38">&lt;&lt;xsl head&gt;&gt;

&lt;&lt;xslmm desc&gt;&gt;
  &lt;xsl:template match="/"&gt;
    &lt;html&gt;
      &lt;&lt;xslmm head&gt;&gt;
      &lt;body&gt;
        &lt;!-- choose the first nodes text again as the headline --&gt;
        &lt;&lt;xslmm H1&gt;&gt;
        &lt;xsl:apply-templates /&gt;
      &lt;/body&gt;
    &lt;/html&gt;
  &lt;/xsl:template&gt;
  &lt;&lt;xslmm template&gt;&gt;
&lt;/xsl:stylesheet&gt;
</t>
<t tx="ZoomQuiet.20051225171032.39">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"&gt;</t>
<t tx="ZoomQuiet.20051225171032.40">
  &lt;!--
       File:        freemind.xsl
       Version:     0.1
       Description: A XSLT stylesheet to transform mindmap files created with FreeMind (http://freemind.sf.net)
                    into HTML files. The transformation will keep the structure of the files, clouds (with it's colors),
                    icons, internal and external links and the ability to collapse whole subtrees of the document (with
                    JavaScript enabled).
                    The results of the transformation were tested and found to be working in the following browsers:
                    -Internet Explorer 6
                    -Mozilla Firefox 0.9 (should be working with nearly any browser using the Geko engine)
                    -Konqueror
                    -Opera 7
                    Other browsers were not tested, but you should have a good chance of gettting things to work
                    with them.
       Usage:       Use any XSLT-Processor (development was done using xsltproc under Linux) to apply this stylesheet
                    to the FreeMind-file. Copy the result and all the PNG-Files inside the script directory
                    (including the icons-subdir) into a directory of it's own (e.g. on a webserver).
                    Open the HTML-file with a webbrowser.
       Author:      Markus Brueckner &lt;freemind-xsl@slash-me.net&gt;
       License:     BSD license without advertising clause. (see http://www.opensource.org/licenses/bsd-license.php
                     for further details)
  --&gt;

  &lt;xsl:output method="html" doctype-public="-//W3C//DTD HTML 4.01 Strict//EN" 
    doctype-system="http://www.w3.org/TR/html4/strict.dtd"/&gt;
</t>
<t tx="ZoomQuiet.20051225171032.41">&lt;head&gt;
&lt;!-- look if there is any node inside the map (there should never be none, but who knows?) 
     and take its text as the title --&gt;
&lt;xsl:choose&gt;
  &lt;xsl:when test="/map/node"&gt;
    &lt;title&gt;&lt;xsl:value-of select="/map/node/@TEXT" /&gt;&lt;/title&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
    &lt;title&gt;FreeMind2HTML Mindmap&lt;/title&gt;
  &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;

&lt;!-- Stylesheet, generator and some JavaScript for the collapsing of the trees 
&lt;link rel="stylesheet" type="text/css" href="freemind.css" /&gt;
--&gt;
&lt;style&gt;
&lt;&lt;freemind&gt;&gt;
&lt;/style&gt;


&lt;meta name="generator" content="FreeMind-XSL Stylesheet (see: http://freemind-xsl.dev.slash-me.net/ for details)" /&gt;

&lt;script type="text/javascript"&gt;
  &lt;![CDATA[
  &lt;!--
       function toggle(id)
       {
           div_el = document.getElementById(id);
           img_el = document.getElementById('img'+id);
           if (div_el.style.display != 'none')
           {
              div_el.style.display='none';
              img_el.src = 'show.png';
           }
           else
           {
              div_el.style.display='block';
              img_el.src = 'hide.png';
           };
       };
   --&gt;
  ]]&gt;
&lt;/script&gt;
&lt;/head&gt;
</t>
<t tx="ZoomQuiet.20051225171032.42">
BODY{
    font-size: 92%; color: #333333; 
    text-indent: 1em;  
    margin: 0px;  padding: 0px;
    font-family: Tahoma,SimSun;
    background-color: whitesmoke;
}
/*
    border-collapse: collapse ;*/
H1{ margin: 0px;  padding: 0px;
}
TABLE { 
    width: 100%;
    font-size: 96%; 
    color: #444444;}
    
TH { 
    background-color: #777777;
    color: #efefef;}

TABLE#dept{
    background-color: #efefef;
    }
TABLE#staff TD{
    font-size: 94%;
    background-color: #ffffff;
    }

div.node { 
  padding-bottom:     1ex;
  padding-left:       2em;
}

div.cloud { 
  padding-bottom:     1ex;
  padding-left:       2em;
  background-color:   #C0C0FF;
  border-width:       2px;
  border-style:       solid;
  border-color:       #A0A0FF;
}

div.content { 
  border-width:       1px;
  border-style:   dashed;
  border-color:       #C0C0C0;
}

img.hideshow { 
  padding-right: 1ex;
}

img.ilink { 
  border-width: 0px;
  padding-left: 1ex;
}
</t>
<t tx="ZoomQuiet.20051225171032.43">&lt;h1&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="/map/node"&gt;
      &lt;xsl:value-of select="/map/node/@TEXT" /&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      FreeMind2HTML Mindmap
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/h1&gt;
</t>
<t tx="ZoomQuiet.20051225171032.44">&lt;!-- the template to output for each node --&gt;
&lt;xsl:template match="node"&gt;
&lt;div&gt;
  &lt;!-- generate a unique ID that can be used to reference this node e.g. from the JavaScript --&gt;
  &lt;xsl:variable name="contentID"&gt;
      &lt;xsl:value-of select="generate-id()"/&gt;
  &lt;/xsl:variable&gt;

  &lt;!-- check whether this node is a cloud... --&gt;
  &lt;&lt; node cloud &gt;&gt;  
  &lt;!-- check whether this node has any child nodes... --&gt;
  &lt;&lt; node child &gt;&gt;
  &lt;!-- when there are icons for this node then output the according &lt;img&gt;-tags --&gt;
  &lt;&lt; node icon &gt;&gt;
  &lt;!-- check whether this node has a link-ID (for external URLs) --&gt;
  &lt;&lt; node url &gt;&gt;
  &lt;!-- check if this node has an ID (for the document internal links) --&gt;
  &lt;&lt; node doclink &gt;&gt;
  &lt;!-- if there are arrowlinks inside this node (i.e. this node is connected to another node
       in FreeMind using an arrow), then create a document internal link --&gt;
  &lt;&lt; node arrowlink &gt;&gt;
  &lt;!-- the content div. This div contains all subnodes of this node. It carries the unique ID
       created in the beginning (which is used to hide this div when necessary). The content node
       is only created if there are any subnodes --&gt;
  &lt;&lt; loop nodes &gt;&gt;
  
&lt;/div&gt;
&lt;/xsl:template&gt;

</t>
<t tx="ZoomQuiet.20051225171032.45">&lt;xsl:if test="node"&gt;
&lt;div class="content"&gt;
&lt;xsl:attribute name="id"&gt;
  &lt;xsl:value-of select="$contentID" /&gt;
&lt;/xsl:attribute&gt;

&lt;xsl:choose&gt;
    &lt;xsl:when test="@TEXT[.='DeptOrgVersion']"&gt; 
        &lt;&lt; loop DeptOrgVersion &gt;&gt;
    &lt;/xsl:when&gt;

    &lt;xsl:otherwise&gt;    

&lt;!-- 针对部门组织进行专门解析 --&gt;
&lt;xsl:choose&gt;
    &lt;xsl:when test="node/@TEXT[.='dept'] or node/@TEXT[.='staff']"&gt; 
        &lt;&lt; loop organise &gt;&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;    
        &lt;xsl:apply-templates/&gt;    
    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;

    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/div&gt;       

&lt;/xsl:if&gt;</t>
<t tx="ZoomQuiet.20051225171032.46">&lt;table border="0" id="dept"&gt;

&lt;xsl:for-each select="node"&gt;
&lt;xsl:choose&gt;
    &lt;xsl:when test="@TEXT[.='dept']"&gt; 
    &lt;tr&gt;
    &lt;th&gt;CVS&lt;/th&gt;
    &lt;td&gt;
        &lt;&lt; loop dept &gt;&gt;
    &lt;/td&gt;
    &lt;/tr&gt;    
    &lt;/xsl:when&gt;
    &lt;xsl:when test="@TEXT[.='staff']"&gt; 
    &lt;tr&gt;
    &lt;th&gt;staffs&lt;/th&gt;
    &lt;td&gt;
        &lt;&lt; loop staff &gt;&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:when test="@TEXT[.='total']"&gt; 
&lt;!--成员人数--&gt;
    &lt;/xsl:when&gt;

    &lt;xsl:otherwise&gt;    
        &lt;xsl:value-of select="@TEXT" /&gt;
    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/xsl:for-each&gt;

&lt;/table&gt;</t>
<t tx="ZoomQuiet.20051225171032.47">
&lt;xsl:for-each select="node"&gt;
    &lt;xsl:if test="@TEXT[.='name']"&gt;
        &lt;&lt; item cnt &gt;&gt;
    &lt;/xsl:if&gt;
    &lt;xsl:if test="@TEXT[.='cvs']"&gt;
        &lt;&lt; item cnt &gt;&gt;
    &lt;/xsl:if&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171032.48">&lt;xsl:for-each select="node"&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
&lt;/xsl:for-each&gt;</t>
<t tx="ZoomQuiet.20051225171032.49">&lt;table border="0" id="staff"&gt;
&lt;xsl:for-each select="node"&gt;
&lt;tr&gt;&lt;td&gt;    
&lt;!-- 顺序 --&gt;
&lt;xsl:value-of select="position()"/&gt;
        &lt;img&gt;
        &lt;xsl:attribute name="src"&gt;
        id/&lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;.gif&lt;/xsl:attribute&gt;
    &lt;/img&gt;


    
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='level']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;a&gt;&lt;xsl:attribute name="href"&gt;
        mailto:&lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;@staff.sina.com.cn
        &lt;/xsl:attribute&gt;
    &lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;@staff.sina.com.cn
    &lt;/a&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='tel']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='mobile']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='bd']/node/@TEXT" /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/xsl:for-each&gt;
&lt;/table&gt;

</t>
<t tx="ZoomQuiet.20051225171032.50">&lt;b&gt;部门组织结构信息图谱 维护记录:&lt;/b&gt;
&lt;UL&gt;

&lt;xsl:for-each select="node"&gt;
&lt;li&gt;&lt;xsl:value-of select="@TEXT" /&gt;&lt;/li&gt;
&lt;/xsl:for-each&gt;

&lt;/UL&gt;</t>
<t tx="ZoomQuiet.20051225171032.51">&lt;xsl:choose&gt;
&lt;xsl:when test="cloud"&gt;
  &lt;!-- ...if yes, check whether it has a special color... --&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="cloud/@COLOR"&gt;
      &lt;xsl:attribute name="class"&gt;cloud&lt;/xsl:attribute&gt;
      &lt;xsl:attribute name="style"&gt;background-color: &lt;xsl:value-of select="cloud/@COLOR" /&gt;&lt;/xsl:attribute&gt;
    &lt;/xsl:when&gt;
    &lt;!-- no? Then choose some default color --&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:attribute name="class"&gt;cloud&lt;/xsl:attribute&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
  &lt;xsl:attribute name="class"&gt;node&lt;/xsl:attribute&gt;
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
</t>
<t tx="ZoomQuiet.20051225171032.52">&lt;xsl:choose&gt;
&lt;xsl:when test="node"&gt;
  &lt;!-- ...yes? Then put the "hide" button in front of the text... --&gt;
  &lt;img src="hide.png" class="hideshow" alt="hide"&gt;
    &lt;xsl:attribute name="onClick"&gt;&lt;![CDATA[toggle("]]&gt;&lt;xsl:value-of select="$contentID" /&gt;&lt;![CDATA[")]]&gt;&lt;/xsl:attribute&gt;
    &lt;xsl:attribute name="id"&gt;img&lt;xsl:value-of select="$contentID" /&gt;&lt;/xsl:attribute&gt;
  &lt;/img&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
  &lt;!-- ...no? Then output the empty leaf icon --&gt;
  &lt;img src="leaf.png" class="hideshow" alt="leaf" /&gt;
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
</t>
<t tx="ZoomQuiet.20051225171032.53">
&lt;xsl:for-each select="icon"&gt;
&lt;img&gt;
  &lt;xsl:attribute name="src"&gt;icons/&lt;xsl:value-of select="@BUILTIN" /&gt;.png&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="alt"&gt;&lt;xsl:value-of select="@BUILTIN" /&gt;&lt;/xsl:attribute&gt;
&lt;/img&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171032.54">&lt;xsl:choose&gt;
&lt;xsl:when test="@LINK"&gt;
  &lt;a&gt;
    &lt;xsl:attribute name="href"&gt;
      &lt;xsl:value-of select="@LINK" /&gt;
    &lt;/xsl:attribute&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
  &lt;/a&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
&lt;!--Zoomq::050830 add 总人数 --&gt;
    &lt;xsl:for-each select="node"&gt;
    &lt;xsl:choose&gt;
        &lt;xsl:when test="@TEXT[.='total']"&gt; 
            (members: &lt;xsl:value-of select="node/@TEXT" /&gt; )
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;    
        &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
    &lt;/xsl:for-each&gt;
    
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;</t>
<t tx="ZoomQuiet.20051225171032.55">
&lt;xsl:if test="@ID"&gt;
&lt;!-- note: as FreeMind sometimes prepends the IDs with an underscore which is not valid
           as the first character in an HTML id, we surround the ID with FM&lt;ID&gt;FM --&gt;
&lt;a&gt;
  &lt;xsl:attribute name="id"&gt;FM&lt;xsl:value-of select="@ID"/&gt;FM&lt;/xsl:attribute&gt;
&lt;/a&gt;
&lt;/xsl:if&gt;
</t>
<t tx="ZoomQuiet.20051225171032.56">
&lt;xsl:for-each select="arrowlink"&gt;
&lt;a&gt;
  &lt;xsl:attribute name="href"&gt;#FM&lt;xsl:value-of select="@DESTINATION" /&gt;FM&lt;/xsl:attribute&gt;
  &lt;img src="ilink.png" alt="Internal Link" class="ilink" /&gt;
&lt;/a&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171511">BODY{
    font-size: 92%; color: #333333; 
    text-indent: 1em;  
    margin: 0px;  padding: 0px;
    font-family: Tahoma,SimSun;
    background-color: whitesmoke;
}
/*
    border-collapse: collapse ;*/
H1{ margin: 0px;  padding: 0px;
}
TABLE { 
    width: 100%;
    font-size: 96%; 
    color: #444444;}
    
TH { 
    background-color: #777777;
    color: #efefef;}

TABLE#dept{
    background-color: #efefef;
    }
TABLE#staff TD{
    font-size: 94%;
    background-color: #ffffff;
    }

div.node { 
  padding-bottom:     1ex;
  padding-left:       2em;
}

div.cloud { 
  padding-bottom:     1ex;
  padding-left:       2em;
  background-color:   #C0C0FF;
  border-width:       2px;
  border-style:       solid;
  border-color:       #A0A0FF;
}

div.content { 
  border-width:       1px;
  border-style:   dashed;
  border-color:       #C0C0C0;
}

img.hideshow { 
  padding-right: 1ex;
}

img.ilink { 
  border-width: 0px;
  padding-left: 1ex;
}</t>
<t tx="ZoomQuiet.20051225173430">@ $Id: obpKwds.leo 325 2005-12-30 04:23:49Z  $
deptorg.py 快捷mm XML 理解处理
@c

&lt;&lt; page declarations &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others

&lt;&lt; try &gt;&gt;

</t>
<t tx="ZoomQuiet.20051225173430.1">#!/usr/bin/env python
# coding:utf-8

import sys,os,string,re
#import time,datetime
#from elementtree.ElementTree import *
from elementtree import ElementTree
from HTMLTags import *
from dict4ini import DictIni

</t>
<t tx="ZoomQuiet.20051225173430.2">orgxml		= "deptorg.xml"


</t>
<t tx="ZoomQuiet.20051225173430.3">def listDeptStaff(elem):
    """列选分部成员节点
    """
    staffdict = {}
    for e in elem:
        if "staff" == e.attrib["TEXT"].encode("utf8"):
            #print e.attrib["TEXT"].encode("utf8")
            &lt;&lt;AllStaff&gt;&gt;            
        else:
            pass
    #print staffdict
    return staffdict

</t>
<t tx="ZoomQuiet.20051225173430.4">staff = e.findall("./node")
for s in staff:
    name = s.attrib["TEXT"].encode("utf8")     
    #print name
    mem = getStaffUser(s)
    #print "".join([mem[i] for i in mem.keys()])
    for k in mem.keys():
        if "mail" == k:
            #print mem[k]
            staffdict[mem[k]] = name
        else:
            pass
    
    
</t>
<t tx="ZoomQuiet.20051225173430.5">def getStaffUser(elem):
    """列选成员所有信息
    """
    user = {}
    usr = elem.findall("./node")
    for u in usr:
        key =u.attrib["TEXT"]
        user[key]=u.find('./node').attrib["TEXT"].encode("utf8")       
    #print user[user.keys()[1]]
    
    return user

</t>
<t tx="ZoomQuiet.20051225173430.6">#通告包含成功
#print open(orgxml,"r").read()
print HR()
tree = ElementTree.parse(orgxml)
elem = tree.getroot()
#print elem
dept = elem.findall("node/node")

deptall = {}
deptree = []
for d in dept:
    if "DeptOrgVersion" == d.attrib["TEXT"]:
        pass
    else:
        #print LI(d.attrib["TEXT"].encode("utf8"))
        staff = d.findall("./node")
        staffdict=listDeptStaff(staff)
        deptall.update(staffdict)
        deptree.append({d.attrib["TEXT"]:staffdict})

"""将XML 处理结果通过 sessoin 对象传递回引用页面！
"""
sess.usr["dept"]=deptall
sess.usr["deptree"]=deptree

#print dir()
</t>
<t tx="ZoomQuiet.20051225180959">
def stat(**args):
    """平均成绩快速统计
    """
    &lt;&lt; pagehead &gt;&gt;  
    print SPAN(A('退 出', href="logout")
               ,id="mana")
    print SPAN(A('首 页', href="index")
               ,id="mana")

    print "&lt;DIV id='cntarea'&gt;"
    @others
    print "&lt;/DIV&gt;"
    &lt;&lt; pagefoot &gt;&gt;

    </t>
<t tx="ZoomQuiet.20051225180959.2">#print sess.usr
crtqp = ""
qpname = ""
#print QUERY
if "qp" in QUERY.keys():
    #print "无登录？"
    crtqp = conf.qpage.qpath+QUERY["qp"]
    qpname = QUERY["qp"].split(".")[0]
else:
    crtqp = conf.qpage.qpath+sess.usr["qp"]+".cfg"
    qpname = sess.usr["qp"]

# 准备好正确答案
crtqp = DictIni(crtqp)
# 发现问题..字典的无序和回答的有序!
#print crtqp.ask.keys()
# 字典排序技巧
ak = crtqp.ask.keys()
ak.sort()
#print ak
crtright = [crtqp.ask[i]["key"] for i in ak]
#print crtright

# 包含mm 处理脚本,以引入组织成员信息
Include("../xslmm/deptorg.py")    

</t>
<t tx="ZoomQuiet.20051225180959.3">ali = fnmatch.filter(os.listdir(conf.qpage.apath)
                       , '%s.*.aq'%qpname)
aed = []
for f in ali:
    a = open(conf.qpage.apath+f
               ,"r").read()
    aed.append(f.split(".")[-2])

done = []       # 有效回答容器
unknow = []     # 未知成员容器
stat = []       # 总均成绩容器
for a in aed:
    if a in sess.usr["dept"].keys():
        done.append(a)
    else:
        unknow.append(a)
print H4("部门成员问答统计:&lt;sup&gt;以帐号字母顺序排列&lt;/sup&gt;")
print "&lt;ul id='stat'&gt;"

&lt;&lt;成员回答&gt;&gt;

print "&lt;/ul&gt;"

&lt;&lt;总计&gt;&gt;

&lt;&lt;未知成员&gt;&gt;

</t>
<t tx="ZoomQuiet.20051225180959.4">mem = sess.usr["dept"].keys()
mem.sort()
#print mem
for a in mem:
    if a in done:
        fn = conf.qpage.apath+'%s.%s.aq'%(qpname,a)
        print LI(B(sess.usr["dept"][a])+
                 I(" %s 已答！ 分数::%s"%(
                            time.strftime("%y/%m/%d %H:%M:%S"
                                ,time.localtime(os.path.getmtime(fn))
                                )
                            ,"%.2f"%(_grade(crtright
                                    ,open(fn,"r").read().split())
                                    )
                            )
                    )
                )
        stat.append(_grade(crtright
                           ,open(fn,"r").read().split())
                           ) 
    else:
        print LI(I(sess.usr["dept"][a])+
                   B("  未答")
                   )
</t>
<t tx="ZoomQuiet.20051225180959.5">
if len(stat)==0:
    pass
else:
    print H4(" %d名成员完成问卷， 总均分值:: %.2f"%(len(stat)
                                       ,sum(stat)/len(stat)))
#reduce(lambda a,b:a+b, s)
#print H5("%.2f%%"%(reduce(lambda a,b:a+b, stat)/len(stat)))

</t>
<t tx="ZoomQuiet.20051225180959.6">if len(unknow)==0:
    pass
else:
    print BR()+B("未知成员回答情况:")
    print UL(Sum([LI(i+"") for i in unknow])
             ,id='stat')
</t>
<t tx="ZoomQuiet.20051225181414">def _grade(right,answer):
    """根据问卷答案自动计算分数
    """
    grade = 0
    for i in range(0,len(right)):
        try:
            if right[i]==answer[i]:
                grade +=1
            else:
                pass
        except:
            # 默许没有回答的部分都是错的
            pass
            #grade +=1
    
    return 100*(float(grade)/len(right))

    
    
    
    


    
    </t>
<t tx="ZoomQuiet.20051225185854">## 整理，叙述开发过程中的体验，成为可分享的故事书</t>
<t tx="ZoomQuiet.20051225185912">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:52:04Z)]]]
[[TableOfContents]]

= K日继续:跟自个儿较劲 =
'''提出自个儿的建议，为社区贡献'''
 * 应该说，到这会儿，你就要考虑将体验中爽的整理为文章分享，不爽的汇报社区以支持改进……
 
== 优化 ==
 1. 减少硬盘的读取次数
 1. 减少内存占用空间
 1. 加速响应处理
 1. 增加并发响应能力
 * 等等，是任何功能站点毕定要面对的优化难关…………
 
== 经验总结 ==
'''在KarriGell 中摸爬滚打几日，也算体会到一些所谓经验'''
 * '''教程要多看！'''
  * 开始在 pure pih 中纠缠，想来真的累哪！要是早点对 KS 的方便有所体验，就可以节省不少时间
  * Cheetah 模板系统，已经在 KarriGell 2.2 系统中内含了，没有注意才使用了原始的方式来使用
  * 不过，后来充分信任 '''HTMLTags''' 函式化的NHML 生成，感受就非常好也……！
 * 勇于尝试,接受不同的思路
 * 同时也要勇于抛弃不好的代码
 * '''只有更好,没有最好!!'''
  * 但是,保证当前够用最重要`^__^`
 
=== 有关KarriGell 调试 ===
 1. 页面空白，源代码都为空时，一定是Python 崩溃，或是不吻合语法规则，根本没有运行起来！
  * 不过，KarriGell 足够皮实，不会崩溃的，马上`Ctrl+z` 几次，就可以知道哪少括号什么的了
 1. 有时候 `print object` 页面没有任何变化，不要担心
  * 看一下子HTML 的源代码吧！
  * 类似`&lt;mod_ks.Script instance at 0x00E56DF0&gt;` 这样的Python 对象属性输出，在页面中会被浏览器处理为非法HTML节点而不显示的！
 1.  作为一个快捷开发为豪的人，一定要不求甚解……
  * 好使就成，至于到底为什么，先别想，将来自然会明白的，
  * 要知道人脑有下意识的，你的所有疑问会在后台进程中一直运算到解答为止，即所谓`灵感是也乎`
  * 有时候，明明白白是个字典，但是就不让你使用看到的键值来调用内容，那未就使用`.keys()[]`的方便来调用，反正，你只是要内容，不管键名的小脾气的
  
=== 有关站点组织 ===
 * 重构是自然的
 * 设计不如实现
  * 开始一定是模糊的遐想，只有快速变为可接触的功能，才可以进行改善
  * 这样的开发才是最自然的  {{{
冲动-&gt;弱功能-&gt;利用已有的模块-&gt;可用-&gt;优化-&gt;如果牵连出多于三个大问题的修改,立即换个方法
 ^                                  |
 |                                  |
 +----------------------------------+
  }}}
 * 面向数据是核心……在理性用户面前
 * 要连续作业！！不然的话的随意定的变量是干什么的，你明天一定想不起来
  * 所以，也只有 Python 才有可能在少量的变量和代码中，实现你的想象

=== 有关CSS设计 ===
'''CSS提供了标准快捷的外观控制的同时也是有问题的...'''
 * 在敏捷开发中,你可以利用 CSS 快速改变外观,
 * 但是与语言不同的在于,CSS 不能进行编辑判别,你只能 为不同的情况设立专用的ID或是类来协助命中
  * 导致,CSS的设定增长的速度可以比你使用的函式还要快
  * 可惜,现在没有什么好的想法来进行有效,聪明的控制
 
== TODO ==
 * 利用几天空闲时间，快速将原来的 数据库为 基础，PHP版本的简单问卷系统重构为纯Python的
 * 大多数功能都是随想随实现的，没有进行规划，要进一步开发的话:
     1. 增加，删除问卷
     1. 丰富问卷形式，可以多选，填写信息
     1. 问卷的 slide 方式，一页接一页的回答
     1. 丰富[http://www.amowa.net/jsvalidation/ JVF] 的规则集合
     1. 优化[http://www.amowa.net/jsvalidation/ JVF] 的配置文件处理,嵌入到HTML的 `&lt;XML&gt;` 数据岛中
     1. 优化[http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html KQF] 与 [http://www.amowa.net/jsvalidation/ JVF] 配合起来,更加方便好用
      * 经沟通，获准开辟 JsValidationFramework -- 表单验证框架 [http://www.amowa.net/jsvalidation/ JVF] 的啄木鸟再次开发项目
      * 非常诡异,Mozilla 的 xml dom 处理非常的有问题哪!
      * 没有找到很好的兼容性DOM处理机,计划还是使用字串来进行约定
      
     1. 问卷风格的快速切换,实现皮肤功能
     1. ………… 需求是变化莫测的，人的欲望也是无常的…………
   
== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDays/ KwDays实例]


== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发


</t>
<t tx="ZoomQuiet.20051225190011">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:50:15Z)]]]
[[TableOfContents]]

= K3日:发现！ =
'''Cheetah 只能组织有模板的页面输出，但是……'''
 * 对于动态变化的表单，有什么更好的方式来组织？
== Karrigell_QuickForm  ==
'''[http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html Karrigell_QuickForm]''' 真的是想要什么就来什么！
 * 刚刚从订阅的[http://sourceforge.net/mailarchive/forum.php?forum=karrigell-main karrigell-main 列表]中看到有人完成了一个 Pear 中 quickform的Karrigell 实现
 * 即有之，则用之！
 * 示例：{{{#!python
from Karrigell_QuickForm import Karrigell_QuickForm

p = Karrigell_QuickForm('teste','POST','foo.py','Authentication')
p.addElement('text','login')
p.addElement('text','password')
p.addRule('login','required',"Login is required!")
p.addGroup(["submit","botao_enviar","submit","Send"]
           ,["reset","botao_limpar","reset","Clear"])
"""根据习惯hack! 原先的自动生成 value 的为指定按钮文字。
p.addGroup(["submit","botao_enviar","Send"]
           ,["reset","botao_limpar","Clear"])
"""
p.display()
}}} 6行完成一个标准的登录表单！！！哈哈哈！赞！
attachment:snap-KwDay30.png

=== 改造 ===
'''毕竟是 alpha 版本，居然还是全面的table 结构！'''
 * 代码也很ugly 哪！使用["Leo"]整理后
 attachment:snap-KwDay3Leo.png
 
 * 立即改造！{{{#!python
def addRadioGroup(self,name,value):
	"""add a radio element - addRadioGroup('genre',{'male':'Male','female':'Female'})"""
        self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
        t = value.items()
	for a,b in t:
	    radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
        self.form_list.append(radio+"&lt;/td&gt;")
	self.form_list.append("&lt;/tr&gt;")
}}} 増补为:{{{#!python
def addRadioList(self,name,desc,value,id=""):
    	"""add a radio element export as UL LI group
    """
    htm = """
        &lt;li id='%s'&gt;&lt;b&gt;%s:&lt;/b&gt;
            &lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
    radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
}}}

=== 利用 ===
'''直接将昨天的展示函式修改一下子就应该好用的！'''
 * `def expage(dict):` 对应的修改为:
{{{#!python
def qpubish(dict):
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST','#',dict.desc.desc)
    
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据 基本和昨天的一样，仅仅是输出时使用 Karrigell_QuickForm 对象而已
    qli = {}
    k = [int(i) for i in dict.ask.keys()]
    k.sort()
    for i in k:
        ask = dict.ask[str(i)]
        qk = [j for j in ask.keys()]
        qk.sort()
        for q in qk:
            if 1==len(q):
                qli[q] = ask[q]
            else:
                pass        
        p.addRadioList("cr_ask%s"%i
                   ,ask["question"]
                   ,qli)
    p.addElement('node','&lt;/ul&gt;','')
    p.addGroup(["submit","btn_submit","提交"]
               ,["reset","btn_reset","重写"])
}}}
 * 注意到原先的 Karrigell_QuickForm 只有display()，要求直接输出，但是你需要进一步的HTML 处理
 * 所以有了{{{#!python
def export(self):
    """ export the html form code so people can do something for them self
    """
    exp = ""
    ...
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp
    }}} 基本上就是将原先的 `print` 替换为 `exp+=` 记录为字串对象然后返回
 * 还有`def addElement(self,element,name,options=None):` 中追加更自由的任何HTML 节点输出:{{{        
        elif element == 'node':
            self.form_list.append(name)
}}}

== JS 问题 ==
'''一切顺心，表单正确生成了，但是，Karrigell_QuickForm 提供的JS检验不支持Radio列表的！'''
 * 呜乎哀哉！！这是个问题哪！如果不是所有问题回答完就提交的话
  * 交给服务端检验，浪费带宽！你还要记录上次的问题情况，返回/提示/重答
  * 不检验，则没有办法进行统计
=== 继续发现！ ===
'''现在的问题是有什么现成的可以模式化的定义表单测验的JS组件？'''
 *  TiosnG ![ti'aosn'gu]
  * There is one site named Google! -- 哈哈哈！！
  * '''[http://www.amowa.net/jsvalidation/ JavaScript Validation Framework]''' 国人作品！

## mechiland@gmail.com jzchen80@hotmail.com
attachment:snap-KwDay30JVF.png

  * 致力于 Python 的Ajax框架开发的 [http://www.amowa.net AMOWA]团队作品，值得期待！使用之！

=== 迁就,先！ ===
 * 与KarriGell 配合[[FootNote(测试JS 成功引用否的小技巧:`alert("Include KO!");` JS 中加入强制提示看刷页面见分晓！)]]，当前需要:
     1. `jvf=%(base)s/karriweb/questionnaire/js` 这样的专门虚拟目录发布，以便，其它各种应用也可以享受
     1. `var ValidationRoot = "/jvf/";` JVF 实际运行的 validation-framework.js 本身也要声明所在目录
     1. {{{
ValidateMethodFactory.validateRequired = function(field, params) {
	...
	window.location.replace("#errorDiv");
}}} 使用replace 来减少不必要的页面刷新
     1. 使用`p.saveJSRule("../js/validation-config.xml")` 时要对应的修正写入的正确目标文件 
 * KQF 对JVF 的迁就:


==== 关键代码 ====
'''JVF的使用很有个性，使用外部的XML 文件进行设置，标准的J2EE行为哪！'''
 * 所以，对应的增补Karrigell_QuickForm
  1. addJSRule() 追加专门的JVF 规则{{{#!python
    def addJSRule(self,name,message):
        """add a xml rule for javascript checking
        """
        exp = self.JSvMXLnode%(name,message)
        self.JSvRules.append(exp)
}}}
  1. addJSValidation() 追加调用JVF的页面行为{{{#!python    
    def addJSValidation(self):
        """add a javascript rule in order to validate a form field  
        - addRule('elem_name','required','Name is required!')
        """
        orig = "enctype='multipart/form-data'"
        repl = """
            onsubmit='return doValidate("%s");'
            """ 
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name) 
        self.form_list[0] = begin_form
}}}
  1. saveJSRule() 记录规则集合为JVF需要的XML{{{#!python
    def saveJSRule(self,xml):
        """exp and save a xml rule for javascript checking
        """
        exp = ""
        for node in self.JSvRules:
            exp+= node
        #exp = self.JSvXMLtmpl%(form,exp)
        open(xml,'w').write(self.JSvXMLtmpl%(self.name
                                             ,exp)
                                             )
}}}
  1. 对应的KQF中有预设对象{{{
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []
}}}

=== 果然不出所料 ===
'''仅仅追加少量代码就完成所想的客户端JS验证功能'''
{{{
def qpubish(dict):
    ...
    ## 具体问题解析
    k.sort()
    for i in k:
        ...
        p.addJSRule("cr_ask%s"%i,"问题%s "%i)
    ## 整体行为处理
    p.addJSValidation()
    p.saveJSRule("js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;','')
}}}
 * 果然不出所料 没有任何悬念的完成任务！

##attachment:snap-KwDay31.png 

== 滥用Leo ==
'''到现在页面都是白丁！不能忍了！加载CSS！'''
 * 不清楚KarriGell 的页面引用效率，直接将CSS，写入页面好了，反正有["Leo"]来维护

=== CSS设计技巧 ===
'''复用以前自个儿的积累是非常好的事儿！'''
 * 颜色的设计是个问题，不过有好工具来偷！
 '''[http://www.redalt.com/Tools/ilyc.php Red Alt - I Like Your Colors]'''
attachment:snap-KwDay3color.png

=== CSS ===
  * 每一需要CSS美化的页面都加`&lt;&lt;k_base&gt;&gt;` 引用，
  * 引用都是从`复用代码` 中clone 过来的同一节点
  * 包含的就是`k_base.css` 你以往积累的一个通用的CSS整体设计,少量修改后，套用中意的颜色系统
attachment:snap-KwDay3css.png
 
== 小节 ==
'''今天发现并引入了 [http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html KQF]和 [http://www.amowa.net/jsvalidation/ JVF]好象有点复杂的样子……'''
attachment:snap-KwDay3done.png
 * 当然在故事中,这不是最终接受的方案，精彩还要继续……
 * 现在所有的基本功能都有了，接下来的就是要实用化:
     1. 有用户验证，要登录
     1. 多问卷选择/回答/编辑
     

== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
  1. [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay3/ KwDay3实例]
  1. 注意有在外部安置的 [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/js/ JS-JVF 目录]
== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发


</t>
<t tx="ZoomQuiet.20051225190011.1">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:45:50Z)]]]
[[TableOfContents]]

= K4日:KS =
||attachment:snap-KwDay40-3Leo.png ||'''不爽直！使用新的KS 页面组织'''[[BR]]现在想来，你实现了三个小功能就用了7，8个文件……有些想念 CherryPy 的对象式网站发布了！||

== lovely session ==
'''学习一下子文档吧！'''
 * http://localhost/demo/ksTest.ks/index
 * {{{#!python
so = Session()
if not hasattr(so, 'x'):
    so.x = 0
def index():
    print "x = %s" %so.x
    print '&lt;br&gt;&lt;a href="increment"&gt;Increment&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="decrement"&gt;Decrement&lt;/a&gt;'
    print '&lt;br&gt;&lt;a href="reset"&gt;Reset&lt;/a&gt;'
    
def increment():
    so.x = _private(so.x)
    raise HTTP_REDIRECTION,"index"
def decrement():
    so.x -= 1
    raise HTTP_REDIRECTION,"index"
def reset():
    so.x = 0
    raise HTTP_REDIRECTION,"index"
def _private(x):
    """The function name begins with _ : internal function, 
    can't be call by a url"""
    return x+1
    }}} 不是吧！！ 一个页面就作完了四种动作！完全是CherryPy 味的！！
  * Session 完全是对象了，标准的KarriGell 内置对象!
  * 又不是CherryPy 那样严格的对象属性，是文件级别的全局性变量，容易引用！
    * 但是，还是要在优雅的Python 脚本中掺杂HTML 代码，不爽直！

== HTMLTags ==
'''函式化的HTML生成'''
 * http://localhost/doc/en/htmltags.htm
 * 唉呀呀！！还真的是心想事儿成！2.2 增加的新功能哪！
 {{{#!python
stylesheet = LINK(rel="Stylesheet",href="doc.css")
header = TITLE('Record collection')+stylesheet
title = H1('My record collection')
rows = Sum ([TR(TD(rec.title,Class="title")
                +TD(rec.artist,Class="Artist")) 
    for rec in records])
table = TABLE(TR(TH('Title')+TH('Artist')) + rows)
print HTML(HEAD(header) + BODY(title + table))
}}} 可以将一个标准的HTML页面由几行 Py脚本自然生成！
 * 那未，只要结合 KS 和 HTMLTags 功能就可以快速实现想要的复杂展示功能了！还可以方便的复用！
 * 当然的使用["Leo"] 八股化你所有的.KS
 
attachment:snap-KwDay40.png

  1. `&lt;&lt; page declarations &gt;&gt;` 同样是引用声明什么的
  1. `&lt;&lt; htmlcode &gt;&gt;` 就是利用["Leo"]来快速复用的各种 HTML 代码
  1. `&lt;&lt;ini&gt;&gt;` 初始化部分，就是各响应页面都要使用的变量准备
  1. `@others` 包含以下各种 `def action():` 样定义的实际响应页面和`def _function():` 可以反复调用的不作为页面响应的普通函式声明
  
== 登录 ==
'''从默许的index 自动导向 login 那'''
 * 在{{{#!python
def index():
    &lt;&lt; pagehead &gt;&gt;
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        pass
}}} 照猫画虎, 使用`raise HTTP_REDIRECTION,"login"` 来根据是否有登录过来导向登响应
 * 当然的，要在 .KS 的 ini 初始化部分先声明会话容器:
     {{{#!python
# 使用 Session来记忆成员信息
sess = Session()
if not hasattr(sess, 'usr'):
    sess.usr = {"name":"NULL"}
    }}}在没有进行登录前，准备一个值为`NULL` 的`usr` 用户会话对象
 * 好了，实际的登录表单还是 [http://www.orionlab.net/karrigell_quickform/Karrigell_QuickForm.html KQF]来干:
{{{#!python
p = Karrigell_QuickForm('fm_login'
                        ,'POST'
                        ,'chkusr'
                        ,"登录自学问卷")
p.addHtmNode('text','uname'
             ,"staff帐号"
             ,{'size':40,'maxlength':8})
p.addGroup(["submit","btn_submit","提交","btn"]
           ,["reset","btn_reset","重写","btn"])
p.addRule('uname','required'
          ,"成员名是必须的!Login name is required!")
p.display()
}}} 非常简洁，标准
 * 进行有效性判别的处理也是个标准的KS 函式{{{#!python
def chkusr(**args):
    """检查用户登录情况
    """    
    print QUERY
    sess.usr["name"] = QUERY["uname"]
    if sess.usr["name"] in pmguys:
        # pmguys 是个元组，预定义的有管理整理的成员帐号
        sess.usr["pm"] = 1
    print sess.usr
    #raise HTTP_REDIRECTION,"index"
}}}先别让页面自动跳走，看一看，是否随愿的将登录信息记录了？！

attachment:snap-KwDay4sess.png 

 * 问卷的使用原则是，任何人都可以登录，问答,但是:
  1. 只有有效的成员问答才会统计
  1. 只有个别的成员才有管理/编辑问卷的权限
  
 
== 多问卷选择 ==
''' 有了登录后的用户信息,就可以根据不同的角色进行处理了'''
=== fnmatch ===
 * 指定目录中某模式的所有文件的尋找…………
 * 有内置的处理模块哪！'''fnmatch'''
 * 配合统一设置进行搜索{{{#!python
qcfglist = []
for f in os.listdir(conf.qpage.qpath):
    if fnmatch.fnmatch(f, '*.cfg'):
        if ("__init__" in f):
            pass
        else:
            qcfglist.append(f)
print qcfglist
}}} 就可以找出目录中所有以`.cfg`结尾的文件！
  * conf 对象是新发布模式下的统一设置信息对象
   * 因为，担心可能需要多个.KS 文件来组织网站，不想象原先那样滥用["Leo"]来复用信息了
   * 所以，建立`@nosent questionnaire.cfg` 统一配置文件
   * 这样，`conf = DictIni("questionnaire.cfg")` 一下子，就可以在所有.KS 页面中获取统一的站点设置了
   
=== 列表所有问卷 ===
'''根据问卷的状态进行归类列表'''
{{{#!python
# 识别问卷发布情况::
qdone = {}
qdoing = {}
qdesign = {}
for p in qcfglist:
    cfgp = DictIni(conf.qpage.qpath+p)
    if 0==cfgp.desc.done:
       qdesign[p]=cfgp
    elif 1==cfgp.desc.done:
       qdoing[p]=cfgp
    elif 2==cfgp.desc.done:
       qdone[p]=cfgp
    else:
        qdesign[p]=cfgp
}}} 使用不同的字典容器先过滤一下子搜索出来的文件；
 * 然后使用类似的输出就好:
{{{#!python
print H4("问卷进行中::")
print UL("".join([str(LI(
             B(A(qdoing[i].desc.pname
                 ,href="page?qpname=%s&amp;do=doing"%i.split(".")[-2])
                 )+
                 SUP(qdoing[i].desc.learn)+
                 SUB(A("问答统计",href="stat?qp=%s"%i))
                         )
                        ) for i in qdoing.keys()
                    ])
                    )
}}}     

attachment:snap-KwDay4list.png

== 小节 ==
 * 实际上，本日，你使用 .ks 体验了一把函式化的页面发布，成果就一个脚本'''index.ks'''
  * 但是以前完成的`.pih` 依然好用，而你将趁兴将它们都重构为更加爽快的'''函式化页面发布'''
 * 而且，你忍不住对CSS进行了深入的定制，在输出代码的最简和页面表现丰富之间进行了有效的探索
 
 
 
 
=== 明日任务 ===
'''心情舒畅！快速的完成了更加简练的功能页面！'''
 * 但是，如何将编辑，回答，统计融合起来？
  1. 点击进入不同问卷，可以回答/或是编辑
  1. 点击编辑就直接编辑
  1. 提交就成为新版本问卷
  1. 问卷要有版本管理
  1. 提交后,可以立即回到问答或是问卷集首页
  1. 任何页面都有安全退出的链接
  1. .... 呜乎哀哉,好象越作越多了,任务…………
 
== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay4/ KwDay4实例]

== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发
</t>
<t tx="ZoomQuiet.20051225190011.2">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:51:21Z)]]]
[[TableOfContents]]
= K5日:随时重构 =
'''快速利用已有的所有技巧，重构功能实现'''
 * 让原先分散的.pih 们也整合到一个 '''mana.ks''' 事务页面中吧！
 
== 悠然 Leo ==
{{{
   Ctrl+`
}}}从来没有如此让你放心过……

"attachment:snap-KwDay50.png

 * 只要保证，所有.ks 中有 clone 的`&lt;&lt; htmlcode &gt;&gt;`
  * 所有.ks 中的响应函式中有 clone 的`&lt;&lt; pagehead &gt;&gt;`及`&lt;&lt; pagefoot &gt;&gt;`
  * 就等于随时控制了所有页面的外观！

== 调整事务响应 ==
'''将问卷的使用和管理拆分为专门的两个事务页面'''
 * `index.ks` 作为默许访问的页面是问卷回答/统计的使用事务页面
 * `mana.ks` 作为权限用户的问卷设计事务页面
 * 那未，首先，用户从`/index.ks/login` 登录后记录的信息，怎么样传递到 `mana.ks`
 
=== 页面间传递对象 ===
'''当然的，你期望是完整的对象传递，而不用又要判别，记载……'''
 * 不是有 `pickle` 序列化模块嘛！
 * 尝试将对象序列化为字串作为页面间的参数捅过去就好哪！
  * 打印当前的会话容器序列化字串看一看:{{{
print pickle.dumps(sess.usr)
}}}

"attachment:snap-KwDay51.png

  * 唉呀呀……有空格，以及其它符号的！一定会被误解为不同参数的……
  * 找呀找呀，找朋友，找到一个`urlsafe_b64encode(s) ` 是 '''base64''' 模块中的
  * OK 组织测试一下子:{{{#!python    
v = base64.urlsafe_b64encode(pickle.dumps(sess.usr))
print v
print "&lt;br/&gt;"
print pickle.loads(base64.urlsafe_b64decode(v))
}}}

"attachment:snap-KwDay52.png  

  * 非常理想！就用之了！
{{{#!python   
print SPAN(A('&gt; 编辑管理问卷'
        ,href="../mana.ks/edit?qp=%s&amp;obj=%s"%(
            qpname
            ,base64.urlsafe_b64encode(
                pickle.dumps(sess.usr))
                )
            )
        ,id="mana")
}}} 在 问卷回答界面中追加一个编辑的链接就好
 * 注意:
  1. 使用 `../mana.ks`  是因为 .ks 事务页面实际都是进一层的`*.ks/action`访问，所以要链接到另外的事务页面，要使用相对路径修正的
  1. 对`&lt;A&gt;` 追加了一个 `id="mana"` 的属性是为了让CSS 击中，进行显示的处理,对应的CSS定义是:{{{
SPAN#mana{border-bottom: 2px solid #778;
    border-left: 2px solid #778;
    float:right;color: #930; 
    background-color: whitesmoke; padding: 2px;}
}}}效果如下:

"attachment:snap-KwDay5css.png  
  
 * 当然的，应该只有权限用户才会看到此链接
 * 不过，开发阶段完全开放——反正要实现版本管理不用怕的说;-)
 
 
== 重构编辑流程 ==
'''当然的所谓 mana.ks 事务页面就是要代替以前使用7个文件完成的问卷编辑流程'''
 * 二话不说先将成功运行的 `index.ks` 节点 clone 成 `mana.ks` 然后快速的修剪
 * 将原先`qpage.py` 的 '''expage(dict)''' 重构为  `index.ks` 的 '''_qshow(dict,aim)'''
  * 99% 的代码都不变，仅仅是传入的参数重新命名而已{{{#!python
def _qshow(dict,aim):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST',aim,dict.desc.desc)
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    qli = {}
    k = [int(i) for i in dict.ask.keys()]
    k.sort()
    for i in k:
        ask = dict.ask[str(i)]
        qk = [j for j in ask.keys()]
        qk.sort()
        for q in qk:
            if 1==len(q):
                qli[q] = ask[q]
            else:
                pass
        question = ask["question"]+"&lt;sup&gt;答案::%s&lt;/sup&gt;"%ask["key"]
        ## 这里美化一下子，奇偶行使用不同的CSS来控制
        if i%2 == 0:
            p.addRadioList("cr_ask%s"%i
                   ,question
                   ,qli
                   ,"even")
        else:
            p.addRadioList("cr_ask%s"%i
                   ,question
                   ,qli)
        p.addJSRule("cr_ask%s"%i,"问题%s "%i)

    p.addJSValidation()
    p.saveJSRule("js/validation-config.xml")
    p.addElement('node','&lt;/ul&gt;','')
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])
    exp += p.export()   
    return exp
}}}

 * 同理，使用原先十分之一的时间，快速将一连串的 .pih 动态页面，改写为 .ks 事务页面
 * 只是为了增加版本管理的功能，追加了一个操作{{{
# 先复制一下子
shutil.copy2(qpage,qpage+".%s"%time.strftime("%y%m%d%H%M%S"
                                             , time.localtime())
             )
}}}
  * 使用 '''shutil'''高级文件处理模块，在问卷提交后，先复制一份历史版本
  

== 历史版本 ==
'''习惯的Wiki的反悔模式，当然的也想自个儿弄一个'''

"attachment:snap-KwDay53.png  

 * 几次小的尝试性修改，在 `/q` 中聚集了一批命名有模式可寻的问卷设计稿
 * 直接利用问卷列表的处理代码，小修改一下子，就成为历史版本列表的实现，归到{{{#!python
def historic(**var):
    &lt;&lt; pagehead &gt;&gt;
    @others   
    &lt;&lt; pagefoot &gt;&gt;
}}}
 * 可以看到现在连事务页面中的具体请求也可以八股化了
  1. `&lt;&lt; pagehead &gt;&gt;` 标准的页头 信息
   * 不过是一个`print _htmhead("标题文字")` 将预定HTML 代码少量处理后输出的小函式
  1. `@others`  包含所有具体行为的章节脚本
  1. `&lt;&lt; pagefoot &gt;&gt;` 标准的页底 信息
   * 更加简单的 `print htmfoot` 打印行为，将 `Powered by:...`什么的广告全都统一而已
=== 关键代码 ===
{{{#!python
qnow = fnmatch.filter(os.listdir(conf.qpage.qpath)
                       , '%s.cfg.*'%sess.usr["qp"])
print "&lt;UL&gt;"
qnow.reverse()
for l in qnow:
    s = l.split(".")
    print LI(A("""%s 
             &lt;sup&gt;%s/%s/%s %s:%s:%s 版本&lt;/sup&gt;"""%(s[0]
             ,s[-1][:2]
             ,s[-1][2:4]
             ,s[-1][4:6]
             ,s[-1][6:8]
             ,s[-1][8:10]
             ,s[-1][10:]
             ),href="edit?his=%s"%s[-1]
                )
             )
print "&lt;/UL&gt;"
}}} 老技巧，使用 `fnmatch` 模块将吻合模式的文件搜索为一个列表对象
 * 现在的 模式:`'%s.cfg.*'%sess.usr["qp"]`
  * 即，当然要看的问卷名+".cfg"+".其它什么的" 
  * ".其它什么的"就是之前你随手复制了一下子先时定的{{{
time.strftime("%y%m%d%H%M%S", time.localtime())
}}} 时间字串
  * 那未知道是 `年月日时分秒`  的组合，使用字串的切片操作，一下子就重新组织输出好了

attachment:snap-KwDay54.png

 * 再随手加个链接，给个`?his=` 的历史版本标识

 * 回头修改一下子 {{{#!python
def edit(**var):
    #...
    if "his" in QUERY.keys():
        #进入历史版本编辑
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"."+QUERY["his"])
    else:        
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"")
    #...
}}}  
  * 作个小判定，令编辑处理，知道什么时候读要求的历史版本
==== 进一步的 ====
'''突然你想列出各版本的内容多少差异……'''
 * 搜索一下子手册，发现了 `os.stat()`{{{
&lt;sub&gt;大小:%sb&lt;/sub&gt;
...
,os.stat(conf.qpage.qpath+l)
}}}
attachment:snap-KwDay5ST.png

  * 返回元组有文件对象的: 
   1. st_mode (protection bits), 
   1. st_ino (inode number), 
   1. st_dev (device), 
   1. st_nlink (number of hard links), 
   1. st_uid (user ID of owner), 
   1. st_gid (group ID of owner), 
   1. '''st_size''' (size of file, in bytes), 
   1. st_atime (time of most recent access), 
   1. st_mtime (time of most recent content modification), 
   1. st_ctime (platform dependent; time of most recent metadata change on Unix, or the time of creation on Windows). 
  * `ST_SIZE` 是我要的

  * 但是具体是哪个？咳咳咳，看标识，只有两个是`L`长整,有变化的就倒数第四个,所以:{{{

&lt;sub&gt;大小:%sb&lt;/sub&gt;
...
,os.stat(conf.qpage.qpath+l)[-4]
}}}
attachment:snap-KwDay5his.png


=== 可变参数的意义 ===
 * 现在你可是对Python 函式的可变参数深以为然了
 * 本来按照PHP 的习惯，传递的页面参数自然会变成内存对象，
 * 但是在KarriGell 中如果不严格匹配
"attachment:snap-KwDay5errorVar.png 这总是会出参数不匹配的错误
 * 有了万能的'''(**var)''' 声明，一切都总能兼容！

== 明日任务 ==
'''哇呀呀！没有想到再古怪的想象，KarriGell 都支持！接下来……'''
 * 就是要根据有效的成员信息来进行成绩的统计汇报了

== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay5/ KwDay5实例]

== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发</t>
<t tx="ZoomQuiet.20051225190043">= K1日:品尝KarriGell =
'''快速根据PHP 的经验尝试Karrigell 的开发'''
 * 原先的问卷生成系统，其实就是利用从别处扒来的一组手工写的PHP 的问卷页面，利用Python 组织了一个从 ini 设置文本到PHP 页面的流程
 * 其实从txt -&gt; Python -&gt; PHP -&gt; DB -&gt; Python -&gt; 回答统计，这样的数据流程够傻的
 * 总算有了点儿时间，你又听说Python 有N多好的Web 开发平台就要来使用纯Python 的环境重构出一个可以快捷修改，统计简单问卷的小系统。
 
== 准备环境 ==
'''为什么选择KarriGell? 缘分吧…………哈哈哈！'''
 * 看了KarriGell 的介绍，感觉可以快捷开始，就它了
 * 下载KarriGell[[FootNote(现在是[http://karrigell.sourceforge.net/ Karrigell-2.2] )]]
 * 解开，然后：`python Karrigell.py`
 * bing! 你有了一个展示了各种应用的 KarriGell 站点了！就在 http://localhost/
 attachment:snap-KwDay00.png
  * 尝试了一下子在 M$ 和 FreeBSD 平台中，是完全一样的反应！
  * 意味着，只要有Python环境，你随时可以获得一个全功能的Web 应用环境！
 
== 动手动脚 ==
'''跟着教程走，随便动一动'''
 * http://localhost/demo/frame_tour_en.htm 是基础入门的教程，展示了KarriGell 进行 web 开发中最经常要面对的应用实现
 * 你看的懂Python， 当然的，对于 hello 这样的示例已经没有兴趣了，
 * 看过一些前人的体验文章，知道有种 `pih` 的页面交互方式，最象原先的 PHP 开发
 * 跟着教程，http://localhost/demo/test.pih 你直接修改了两下:{{{
&lt;h2&gt;HTTP headers&lt;/h2&gt;
&lt;%
a="Karrigell"
print dir(a)
%&gt;
}}}
  * 嗬嗬！！果然和命令行中的反应一样，看来就将KarriGell 想象为面向 Web 的Python 解释器好了！

== 组织开发环境 ==
'''OK！要可以随时看到教程，同时又有独立的站点空间……'''
 * 你好容易学习，掌握了 Leo ，而且感觉一切都应该由 Leo 组织才自然
 * 那未就按照直觉来定制KarriGell 一下子:
     * 看了其它人的体验……
     * 其实 KarriGell 的设置非常的简单的，由统一的 ini 文件来设定整体行为
     * 你想要的非常简单，就是将KarriGell 的默许教程站点和你的开发隔离开..{{{
[Alias]
# associates an alias to a path on the file system
# always use / as path separator, even on Windows
# if you create this alias : doc=c:/Program Files/Karrigell/doc 
# then the url htpp://host/doc/index.htm will match the file 
# c:\Program Files\Karrigell\doc\index.htm
# demo=%(base)s/demo
doc=%(base)s/doc
debugger=%(base)s/debugger
}}}
  * Yeah! 就是这里，非常直观，那未定义一个你自个儿开发的站点目录在 KarriGell 系统目录中就好
   * 嗯嗯……想念Unix 系统中的 link 了！M$ 中你只能真的在其中建立目录
  * Leo 中快速设立好自个儿的工程，组织一个最简单的 index.pih:{{{
&lt;html&gt;&lt;body&gt;
&lt;%
a="Kariigell"
print dir(a)
%&gt;
&lt;/body&gt;&lt;/html&gt;
}}}
  * 嗯嗯……为了方便使用 `@nosent` 操作符 `Ctrl+S` 就在计划中的目录里生成了文件
  attachment:snap-KwDay01.png
  
  * 对应的，Karrigell.ini 中设定一下{{{
[Alias]
...
k=%(base)s/karriweb
q=%(base)s/karriweb/questionnaire
...
}}}
  * OK! 重启一下子KarriGell : `Ctrl+C` 通用操作，让KarriGell 的Python 进程停止
  * 然后一样的 `python Karrigell.py`
  * 那未 http://localhost/k
   * 嗬嗬，一切如愿！ KarriGell 正如你想象的有了实时的反应，不象CherryPy 你的每次修改，都要重启服务
   * 在KarriGell 中，就象PHP开发那样，每次修改好后，刷一下子页面，立即你的修改就能显示出来

attachment:snap-KwDay02.png

== 规划目标 ==
 * 好了今天的任务，完成！'''评估KarriGell的可用性'''
  * 嗬嗬，其实就是简单的确定 KarriGell 的开发方式
  * 对于简单问卷？ 明天，先要完成的是怎么在KarriGell 中读人外部文件，并可以在页面中修改，然后提交保存...
  * 最终目标是利用 limodou 的 DictIni 类来理解问卷的设计，并将问答收集为一系列文件，最终仍由Python 进行统计成绩……

== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay1/ KwDay1实例]

== 讨论 ==
[[Include(/Discuss)]]

----
返回 KarrigellWebDev -- 快速体验K开发</t>
<t tx="ZoomQuiet.20051225190043.1">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on

::-- ZoomQuiet [[[DateTime(2005-12-11T04:45:50Z)]]]
[[TableOfContents]]
= K2日:直接完成功能！ =
'''不管37 21 直接完成心目中的功能先！'''
 * 计划是这样的，要可以直接读取原先的问卷设计 ini 文本，到页面的 TEXTAREA 中，然后可以提交并保存到指定目录中！

== 规划 ==
 * [wiki:self/RocketyKarrigell Rockety 对KarriGell 的设置有很好的介绍]
  * 为了统一组织好你功能站点的开发{{{
[Alias]
..
obp=%(base)s/karriweb/obp
}}} 在`Karrigell.ini` 有进行如此设置，这样一来，就可以通过
 http://localhost/obp/ 来访问了[[FootNote("当然没有在 obp 目录中安置index.htm/index.pih 之类的脚本是不会让你看的说……")]]
 
 * 简单点儿吧！{{{# 约定以下全局性变量
qpath = "q/"
pubq = qpath+"easy051201.cfg"
}}}
  * 使用这样的全局变量定义下来，使用 Leo 快速的将所有的文件控制起来

 * 计划就是这样的:
     http://localhost/obp/KwDay2/mana.pih 看到并可以编辑 ini 问卷设计文稿
     点击提交后 到
     http://localhost/obp/KwDay2/qpage.pih
     可以看到真正保存下来的问卷设计内容
== Cheetah ==
''' 道听途说 各种模板系统中 Cheetah 非常的好和稳定，就用它了！'''
 * 小小看一下子示例，知道 [wiki:self/CheetahTemplateOrg Cheetah] 的基本使用是这样的:
     1. 引入模板`from Cheetah.Template import Template`
     1. 加载模板`page = open("你的模板文件.tmpl","r").read()`
     1. 加载数据`vPool = {'cfgtxt':随便什么字串的值就成}`
     1. 渲染输出`print Template(page, searchList=[vPool])`
     * 则模板中有`$cfgtxt` 的地方就会替换为实际数据
== Leo 组织实现 ==
'''可以在一个统一界面中把握全部章节/元素哪！'''
 * 可以使用中文作章节名目:
     * `问卷`来组织设计文案
     * 就是`@nosent easy051201.cfg`
     * 当然要使用`@path q` 来配合，这样你对 easy051201.cfg 的修改可以立即输出为具体的文件
 * `Ctrl+Alt+c`和`Ctrl+Alt+v` 是 ["Leo"] 中的复制和粘贴操作:
     * 快速从原先的 `@nosent index.pih` 复制整个节点为
     * `@nosent  mana.pih` 管理页面入口
     * `@nosent  questionnaire.tmpl` 修改问卷模板，["Cheetah"]的
=== 干净的处理脚本 ===
'''MVC?尝试一下子'''
 * `@nosent  mana.pih` 是纯HTML页面了！ 算表现？
 * `&lt;%Include("qdesign.py")%&gt;` 来包含一个纯操作脚本，算模式了
 * `@nosent  questionnaire.tmpl` 模板，算数据控制？

=== 八股文样 ===
'''模式化的处理脚本'''
 * 从文学化编程角度看，web 应用的脚本，应该说都一个样儿！
 attachment:snap-KwDay10.png
 
 * 即:
     1. 脚本说明 `@...@c` 部分
     1. 脚本声明 `&lt;&lt; page declarations &gt;&gt;`  引用部分
     1. 行为定义 `@others` 包含的所有下级节点
     1. 实际尝试 `&lt;&lt;try&gt;&gt;` 引用的部分

== 编辑实现 ==
'''其实就是将指定的文件内容读出来发布到页面的TEXTARE 中'''
 * 模板中先准备{{{&lt;textarea NAME="cfgfile" rows="27" &gt;
$cfgtxt
&lt;/textarea&gt;}}}
 * 处理脚本中{{{#!python
#简化引用对象名
from Cheetah.Template import Template as ctTpl
vPool = {}
vPool['cfgtxt'] = open(pubq,"r").read()
page = open("questionnaire.tmpl","r").read()
txp = ctTpl(page, searchList=[vPool])
print txp
}}}
 * bingo! 完成！
 attachment:snap-KwDay21.png
 
== 实现展现 ==
'''就是将ini 的内容整理为HTML的页面展示'''
 * 同样的快速组织一下子:
     1. `@nosent  qpage.pih` 访问的页面
     http://localhost/obp/KwDay2/qpage.pih
     
     1. `@nosent  qpage.py` 实际的数据重组
=== 关键代码 ===
 * `from dict4ini import DictIni` 当然的要从 NewEdit 中扒出 dict4ini.py 安装到当前目录中
 * 创建`def expage(dict):` 问卷输出函式，来将ini 内容整理为相应的页面
 {{{#!python
exp +="&lt;ul&gt;"
# 将字串的字典键值依照数字方式排序
k = [int(i) for i in dict.ask.keys()]
k.sort() # 没有回传的数组重整处理
for i in k:
    ask = dict.ask[str(i)]
    exp +="&lt;li&gt;%s"%ask["question"]
    exp +="&lt;ul&gt;"
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            exp +="&lt;li&gt;%s"%ask[q]
        else:
            pass    
    exp +="&lt;p&gt;正确答案::%s&lt;/p&gt;"%ask["key"]
    exp +="&lt;/ul&gt;"
    exp +="&lt;/li&gt;"
exp +="&lt;/ul&gt;"
return exp
    }}} 双重循环就可以对应的将类似`[ask/1]` 一节中的所有
    类似`a = 赞！` 的选择项按照列表的形式输出了！
attachment:snap-KwDay22.png

== 串联页面 ==
'''将编辑页面和展现页面串联起来'''
 * 当然的要使用 FORM:
{{{&lt;FORM ENCTYPE="multipart/form-data" 
    ACTION="qpage.pih" 
    METHOD=POST&gt;
    }}} 在模板中声明一下子
 * 测试为先！！！在 qpage.py 中加入`print QUERY` 确认倒底传送了什么
 * OK！ 一切吻合想象`open(qpath+pubq,"w").write(QUERY["cfgfile"])`
  * 将传送来的编辑成果先写回文件，再整理展现！

== 明日目标 ==
'''实现了最基本的编辑到保守，还有问卷展示的脚本那未自然的：'''
 * 实现可以真实使用的问卷表单哪！


== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay2/ KwDay2实例]

今日成果：
attachment:snap-KwDay2Leo.png


== 讨论 ==
[[Include(/Discuss)]]

----
返回 KarrigellWebDev -- 快速体验K开发








</t>
<t tx="ZoomQuiet.20051225192243">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on
::-- ZoomQuiet [[[DateTime(2005-12-11T04:51:41Z)]]]
[[TableOfContents]]

= K6日:统计！mm的 =
'''快速扩展一个页面适应所有情况！'''
 * 此mm 非彼 mm 哪! 乃FreeMind 思维图谱文件 `.mm`
== FreeMind的另类使用 ==
'''要想进行问卷回答的统计,首先要有手段知道现在组织内成员信息,以便对应统计'''
 * 为什么想到了 FreeMind? 
  * 以往使用DB,怎么样都要立成员表和组织表然后还有这那儿的对应选择关系什么的
  * 还是 FreeMind 直观,操作也非常快捷,复制,移动太爽直了!
  * 而且是XML的数据文件!
 * 曾经依照提供的`freemind.xsl`+`freemind.mm` 输出了加个xml头说明的自定 mm 文件
 
"attachment:snap-KwDay60.png

 * 哈哈哈!大致知道 FreeMind 的数据格式:
     1. 所有节点是统一的 `&lt;node&gt;` 
     1. 属性和值,全部是UTF8编码的字串
 * 所以,只要有简单的约定,就可以作为 Xpath 的过滤参数来理解真正的数据意义了
 * 以上的组织成员信息就是有个小小的约定:
     1. 一级节点都是部门描述,中文
     1. 二级节点是属性描述:
         1. dept 说明部门的整体信息
         1. staff 汇集成员信息,类似部门的节点组织
         1. total 成员总数
"attachment:snap-KwDay6mm.png
 * 这样就令 XSLT 有基础原则可以进行数据组织了
 * 同理,也可以让Python 快速理解了...
 

== ElementTree,当然的！ ==
'''处理XML Python 有丰富的模块,你知道其中 ElementTree 最方便支持部分Xpath 的搜索'''
 * 其实从使用方面也是 ElementTree 最PythyonIc 了
 * `deptorg.py` mm专用理解脚本中:{{{#!python
from elementtree import ElementTree
print open(xmlFileName,"r").read()
tree = ElementTree.parse(xmlFileName)
elem = tree.getroot()
dept = elem.findall("node/node")
for d in dept:
    print d
    print LI(d.attrib["TEXT"].encode("utf8"))

}}}


  1. 引入 ElementTree
  1. 处理XML为 ElementTree 对象
  1. 找到根
  1. 从根找到所有第二级的`&lt;node&gt;`节点对象列表
  1. 已经可以通过 `.attrib["TEXT"]` 来获得内容了!

"attachment:snap-KwDay61.png
 * 就使用 `findall()` 和 `attrib["TEXT"]` 便可以判定/获取足够的信息,输出成以上的页面从 mm 中!!!
 * 哈哈哈!具体的就看代码吧……
 
== Karrigell 的对象混合 ==
'''但是！怎么样可以使用这种mm 的理解成果？'''
 * 麻烦在于 `ElementTree.parse(xml文件)` 要可以直接访问的文件名
 * 你不想在程序中包含太多系统的路径信息
  1. 反复尝试，发现从相对路径偏移还是从URL 来访问都不稳定，也麻烦
  1. 最简单的就是理解脚本和mm 文件在一起
 * 问题就来了，各种事务页面如何快捷直观的使用理解成果？
  * 自然的，就想到了 `Include()` KarriGell 中到处都可以进行的基础操作 -- '''包含'''
{{{Include("../xslmm/deptorg.py") 
            ^
            |
            +- 因为是从index.ks/login 之类下级行动函式页面访问}}}
            
  * 有MoinMoin 的经验，你就想这样一来应该能将字典对象混人当前名称空间??
   * 在专门mm 理解脚本-- '''deptorg.py''' 中 `print dir()`

"attachment:snap-KwDay62.png

   * 不会这么简单吧！你发现了 `index.ks` 事务页面中才有的对象 '''sess''' —— 对话容器
   * 尝试的赋值一下子？{{{
#deptorg.py 中最后..
sess.usr["dept"]=deptall
sess.usr["deptree"]=deptree
}}}
   * KAO！ 真的好用！ 在`index.ks/stat` 统计页面，包含 `deptorg.py` mm专用理解脚本 再打印 '''sess.usr''' 看一下子，唉呀呀！真的有了！

"attachment:snap-KwDay63.png
== 回答验证 ==
'''进行回答统计前，有一个先决重构'''
 * 有效的答案是全部问题都回答了，不然的话统计很麻烦的说……
 * 但是曾经令你激动的 '''[http://www.amowa.net/jsvalidation/ JavaScript Validation Framework]''' 国人作品…… 忽然间再也不好用了？！
  * 不得以，仔细看了一下子代码，才发现，有好几点是不能忍的:
      1. 所有表单都要读取同一配置XML，不论访问者想回答哪个问卷，导致动态生成配置文件时有争用问题
      1. 同样的原因，导致每次读取配置文件，可能要读入相对无用的几倍信息(别的表单的检验策略也被迫读取了)
      1. {{{		...
            try {
			var prefix = ["MSXML2", "MSXML", "Microsoft", "MSXML3"];
			for (var i = 0; i &lt; prefix.length; i++) {
				//return new ActiveXObject(prefix[i] + ".DomDocument"); 
				var obj = new ActiveXObject(prefix[i] + ".DomDocument"); 
				if (obj == null || typeof(obj) == 'undefined') {
					continue;
				} else {
					return obj;
				}
			}
		} catch (e) {
			//^_^
			throw new Error("My God, What version of IE are you using? IE5&amp;+ is requiered.");
		}
}}}咔...'''BS'''!居然不能支持 FireFox 的,怎么以前成功的是灵异现象?!

 * 怕了!直接使用服务端的判定吧!
 * 创立 `bye()` 判别处理页面 并在失败时输出{{{
&lt;input type="button"
    value="点击返回重新回答"
    class="btn"
    onClick="history.back();"/&gt;
    }}} 这样的JS 行动按钮, 快捷完成想要的完全问答检验处理
    
"attachment:snap-KwDay6bye.png
 * 好了基本可用了,只是这样一来,加重了服务端的压力,也难以进行页面的友好提醒...
  * 嗯嗯,自古忠孝难全,先这么着,以后再想了....
 
== 统计汇报 ==
 * 接下来就简单了:
     1. 所有人的回答输出为简单的文件，比如说： 每个题目的回答为一行
     1. 套用问卷列表的技巧，可以搜索出对应问卷的所有回答文件
     1. 批量读到列表中，和成员信息字典匹配一下子，就可以人性化的输出了
{{{#!python
ali = fnmatch.filter(os.listdir(conf.qpage.apath), '%s.*.aq'%qpname)
aed = []
for f in ali:
    a = open(conf.qpage.apath+f,"r").read()
    aed.append(f.split(".")[-2])
done = []
unknow = []
for a in aed:
    if a in sess.usr["dept"].keys():
        done.append(a)
    else:
        unknow.append(a)
}}}
 * 先要预备处理一下子，过滤出不知道的人
  1. 明显的你约定回答文件的命名格式是 `问卷名.成员帐号名.aq`
  1. 所以可以根据文件名快速整理出名单列表 `aed`
  1. 然后，就有了已知合理成员回答列表 `done` 和 `unknow` 未知成员列表

attachment:snap-KwDay6stat.png 

 * 最后就是个显示问题了:
     1. 要有回答时间的信息?{{{
fn = conf.qpage.apath+'%s.%s.aq'%(qpname,a)
...
time.strftime("%y/%m/%d %H:%M:%S",time.localtime(os.path.getmtime(fn)
}}}
     1. 要有 百分制 的成绩?{{{#!python
def _grade(right,answer):
    """根据问卷答案自动计算分数
    """
    grade = 0
    for i in range(0,len(right)):
        if right[i]==answer[i]:
            grade +=1
        else:
            pass
    return 100*(float(grade)/len(right))
}}}
     1. 唉呀呀??为什么不许怎么回答都是0分?
      * 发现问题..字典的无序和回答的有序!间的矛盾
     {{{
print crtqp.ask.keys()
crtright = [crtqp.ask[i]["key"] for i in crtqp.ask.keys()]
print crtright
}}}
"attachment:snap-KwDay6dict.png 

      * 知道症结就好修改了{{{#!python
#字典排序技巧
ak = crtqp.ask.keys()
ak.sort()
print ak
crtright = [crtqp.ask[i]["key"] for i in ak]
print crtright
}}}

"attachment:snap-KwDay6sort.png 

     1. 要有总平均成绩?{{{
#使用stat 列表收集所有有效成绩
stat = []
...
stat.append(_grade(crtright,open(fn,"r").read().split()))
...
sum(stat)/len(stat)) 就出来了
reduce(lambda a,b:a+b, stat)/len(stat) 更加cool
}}}
 * 哈哈哈！！什么也难不住你！
"attachment:snap-KwDay6done.png 


== 事务测试 ==
'''不用想什么黑/白盒；边界，点击就成！'''
 * 好了！所有功能都实现了，你现在非常成就感的一路点击一下子
 * 感觉哪里不好，随手就修正它！
 * 溜个几回，功能测试基本也就了了…………
     
== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay6/ KwDay6实例]


== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发
</t>
<t tx="ZoomQuiet.20051225192243.1">
def bye(**args):
    """不使用客户端验证后替代的服务端检验页面
    """
    &lt;&lt; pagehead &gt;&gt;
    print H1("%s"%(qcfg.desc.pname))
    
    qk = QUERY.keys()
    
    if "btn_submit" in qk:
        @others
        
    else:
        raise HTTP_REDIRECTION,"index"
        
    &lt;&lt; pagefoot &gt;&gt;

    #raise HTTP_REDIRECTION,"stat"
    #raise HTTP_REDIRECTION,"logout"
    


</t>
<t tx="ZoomQuiet.20051225192243.2">#print QUERY
qp = DictIni(conf.qpage.qpath+sess.usr["qp"]+".cfg")
qli = [i for i in qp.ask.keys()]
a = []
as = ""
# 扫描并记录设计问卷的所有题目
for k in qk:
    if "btn_submit"==k:
        pass
    else:
        as+=QUERY[k]+"\n"
        a.append(k[6:])
lost=[]
qli.sort()
# 对比,计数 已经回答的
for q in qli:
    if q not in a:
        lost.append(q)

if 0==len(lost):
    answer = "%s%s.%s.aq"%(conf.qpage.apath
                          ,sess.usr["qp"]#pubq.split(".")[-2]
                          ,sess.usr["name"])
    open(answer,'w').write(as)
    ## 正常跳转到统计页面
    
    raise HTTP_REDIRECTION,"stat"

print BR()*2
print H4("没有回答完全！")
for l in lost:
    print LI("问题%s 没有回答!"%l)
print """&lt;h4&gt;&lt;input type="button"
    value="点击返回重新回答"
    class="btn"
    onClick="history.back();"/&gt;
&lt;/h4&gt;
"""


  </t>
<t tx="Zoomq.20050615144554"># 快速利用Karrigell 开发功能站点
# Karrigell.ini 中有如下约定:
# 如果Kariigell 运行在 D:\Karrigell\Karrigell-2.2\ 
# 则其下应该有 karriweb\obp\KwDay1\ 这样的目录，以便安置实例  
[Alias]
..
obp=%(base)s/karriweb/obp
# 为统一的JVF页面输入检验建立访问别名
jvf=%(base)s/karriweb/obp/js
...


</t>
</tnodes>
</leo_file>
