<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet ekr_stylesheet?>
<leo_file>
<leo_header file_format="2" tnodes="0" max_tnode_index="1045" clone_windows="0"/>
<globals body_outline_ratio="0.3056640625">
	<global_window_position top="40" left="10" height="698" width="1024"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="Zoomq.20050615144554" a="E"><vh>KarrigellWebDev</vh>
<v t="ZoomQuiet.20051225170002" a="TV"><vh>Kday6:统计</vh></v>
<v t="ZoomQuiet.20051201224226"><vh>问卷设计</vh>
<v t="ZoomQuiet.20051204223324" tnodeList="ZoomQuiet.20051204223324"><vh>@nosent easy051201.cfg</vh></v>
<v t="ZoomQuiet.20051224182004" tnodeList="ZoomQuiet.20051224182004"><vh>@nosent CPUG051211.cfg</vh></v>
<v t="ZoomQuiet.20051224182004.1" tnodeList="ZoomQuiet.20051224182004.1"><vh>@nosent Python051221.cfg</vh></v>
</v>
<v t="ZoomQuiet.20051222120608"><vh>复用代码</vh>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224170150" tnodeList="ZoomQuiet.20051224170150"><vh>@nosent questionnaire.cfg</vh></v>
<v t="ZoomQuiet.20051224165357"><vh>KS</vh>
<v t="ZoomQuiet.20051224165419" a="E" tnodeList="ZoomQuiet.20051224165419,ZoomQuiet.20051224165419.1,ZoomQuiet.20051224165419.2,ZoomQuiet.20051224171010,ZoomQuiet.20051224171010.1,ZoomQuiet.20051224171010.2,ZoomQuiet.20051224171010.3,ZoomQuiet.20051224171010.4,ZoomQuiet.20051224171010.5,ZoomQuiet.20051224165419.9,ZoomQuiet.20051224165419.10,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.11,ZoomQuiet.20051224165419.12,ZoomQuiet.20051224181034,ZoomQuiet.20051224181034.1,ZoomQuiet.20051224165419.13,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.25,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.26,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.27,ZoomQuiet.20051224165419.28,ZoomQuiet.20051224165419.16,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.17,ZoomQuiet.20051224165419.15,ZoomQuiet.20051225180959,ZoomQuiet.20051224165419.14,ZoomQuiet.20051225180959.2,ZoomQuiet.20051225180959.3,ZoomQuiet.20051225180959.4,ZoomQuiet.20051225180959.5,ZoomQuiet.20051225180959.6,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.30,ZoomQuiet.20051224165419.14,ZoomQuiet.20051224165419.31,ZoomQuiet.20051224165419.15,ZoomQuiet.20051224165419.61,ZoomQuiet.20051224165419.62,ZoomQuiet.20051224165419.64,ZoomQuiet.20051224165419.63,ZoomQuiet.20051225181414"><vh>@nosent index.ks</vh>
<v t="ZoomQuiet.20051224165419.1" a="E"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224165419.9"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.10"><vh>index</vh>
<v t="ZoomQuiet.20051224165419.11"><vh>&lt;&lt;页面事务&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.12" a="E"><vh>列显问卷</vh>
<v t="ZoomQuiet.20051224181034"><vh>&lt;&lt;发表的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224181034.1"><vh>&lt;&lt;回收的&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.13"><vh>&lt;&lt;准备的&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.25"><vh>login</vh>
<v t="ZoomQuiet.20051224165419.26"><vh>表单</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.27"><vh>logout</vh></v>
<v t="ZoomQuiet.20051224165419.28"><vh>chkusr</vh></v>
<v t="ZoomQuiet.20051224165419.16"><vh>page</vh>
<v t="ZoomQuiet.20051224165419.17" a="E"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225180959" a="E"><vh>stat</vh>
<v t="ZoomQuiet.20051225180959.2"><vh>初始化</vh></v>
<v t="ZoomQuiet.20051225180959.3" a="E"><vh>统计回答</vh>
<v t="ZoomQuiet.20051225180959.4"><vh>&lt;&lt;成员回答&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225180959.5" a="E"><vh>&lt;&lt;总计&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225180959.6"><vh>&lt;&lt;未知成员&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.30" a="E"><vh>bye</vh>
<v t="ZoomQuiet.20051224165419.31"><vh>记录在案</vh></v>
<v t="ZoomQuiet.20051224165419.15"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.14"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224165419.61"><vh>_qpubish()</vh>
<v t="ZoomQuiet.20051224165419.62"><vh>&lt;&lt;表单类型&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.63"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.64" a="E"><vh>&lt;&lt;loopask&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225181414" a="E"><vh>_grade()</vh></v>
</v>
<v t="ZoomQuiet.20051224185506" tnodeList="ZoomQuiet.20051224185506,ZoomQuiet.20051224185506.1,ZoomQuiet.20051224165419.2,ZoomQuiet.20051224171010,ZoomQuiet.20051224171010.1,ZoomQuiet.20051224171010.2,ZoomQuiet.20051224171010.3,ZoomQuiet.20051224171010.4,ZoomQuiet.20051224171010.5,ZoomQuiet.20051224185506.9,ZoomQuiet.20051224185506.10,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.11,ZoomQuiet.20051224185506.12,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.20,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.23,ZoomQuiet.20051224185506.22,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.18,ZoomQuiet.20051224185506.13,ZoomQuiet.20051224185506.19,ZoomQuiet.20051224185506.14,ZoomQuiet.20051224185506.24,ZoomQuiet.20051224185506.25,ZoomQuiet.20051224185506.26,ZoomQuiet.20051224185506.27"><vh>@nosent mana.ks</vh>
<v t="ZoomQuiet.20051224185506.1"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224165419.2"><vh>&lt;&lt; htmlcode &gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010" a="E"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051224171010.1"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051224171010.2" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051224171010.3"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.4"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224171010.5" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051224185506.9"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.10" a="E"><vh>edit</vh>
<v t="ZoomQuiet.20051224185506.11"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.12"><vh>&lt;&lt;设计表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.20" a="E"><vh>page</vh>
<v t="ZoomQuiet.20051224185506.22" a="E"><vh>&lt;&lt;问卷展示&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.23"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.18"><vh>historic</vh>
<v t="ZoomQuiet.20051224185506.19"><vh>列表</vh></v>
<v t="ZoomQuiet.20051224185506.13"><vh>&lt;&lt; pagehead &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051224185506.14"><vh>&lt;&lt; pagefoot &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051224185506.24"><vh>_qshow()</vh>
<v t="ZoomQuiet.20051224185506.25" a="E"><vh>askloop</vh>
<v t="ZoomQuiet.20051224185506.26"><vh>&lt;&lt;单选列表&gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051224185506.27" a="E"><vh>_ctrl()</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051225171032"><vh>组织成员</vh>
<v t="ZoomQuiet.20051225173430" tnodeList="ZoomQuiet.20051225173430,ZoomQuiet.20051225173430.1,ZoomQuiet.20051225173430.2,ZoomQuiet.20051225173430.3,ZoomQuiet.20051225173430.4,ZoomQuiet.20051225173430.5,ZoomQuiet.20051225173430.6"><vh>@nosent  deptorg.py</vh>
<v t="ZoomQuiet.20051225173430.1"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225173430.2" a="E"><vh>&lt;&lt;ini&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225173430.3"><vh>listDeptStaff</vh>
<v t="ZoomQuiet.20051225173430.4"><vh>&lt;&lt;AllStaff&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225173430.5" a="E"><vh>getStaffUser</vh></v>
<v t="ZoomQuiet.20051225173430.6"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.37"><vh>XSL</vh>
<v t="ZoomQuiet.20051225171032.38" a="E" tnodeList="ZoomQuiet.20051225171032.38,ZoomQuiet.20051225171032.39,ZoomQuiet.20051225171032.40,ZoomQuiet.20051225171032.41,ZoomQuiet.20051225171032.42,ZoomQuiet.20051225171032.43,ZoomQuiet.20051225171032.44,ZoomQuiet.20051225171032.51,ZoomQuiet.20051225171032.52,ZoomQuiet.20051225171032.53,ZoomQuiet.20051225171032.54,ZoomQuiet.20051225171032.55,ZoomQuiet.20051225171032.56,ZoomQuiet.20051225171032.45,ZoomQuiet.20051225171032.50,ZoomQuiet.20051225171032.46,ZoomQuiet.20051225171032.47,ZoomQuiet.20051225171032.48,ZoomQuiet.20051225171032.48,ZoomQuiet.20051225171032.49"><vh>@nosent deptorganise.xsl</vh>
<v t="ZoomQuiet.20051225171032.39"><vh>&lt;&lt;xsl head&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.40"><vh>&lt;&lt;xslmm desc&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.41"><vh>&lt;&lt;xslmm head&gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.42"><vh>&lt;&lt;freemind&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.43"><vh>&lt;&lt;xslmm H1&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.44" a="E"><vh>&lt;&lt;xslmm template&gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.45" a="E"><vh>&lt;&lt; loop nodes &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.46"><vh>&lt;&lt; loop organise &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.47" a="E"><vh>&lt;&lt; loop dept &gt;&gt;</vh>
<v t="ZoomQuiet.20051225171032.48"><vh>&lt;&lt; item cnt &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.49"><vh>&lt;&lt; loop staff &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.50" a="E"><vh>&lt;&lt; loop DeptOrgVersion &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051225171032.51"><vh>&lt;&lt; node cloud &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.52"><vh>&lt;&lt; node child &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.53" a="E"><vh>&lt;&lt; node icon &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.54"><vh>&lt;&lt; node url &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.55"><vh>&lt;&lt; node doclink &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051225171032.56"><vh>&lt;&lt; node arrowlink &gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051225171511" a="E" tnodeList="ZoomQuiet.20051225171511"><vh>@nosent freemind.css</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051222105247"><vh>管理</vh>
<v t="ZoomQuiet.20051222105247.1" a="E"><vh>@thin __init__.py</vh></v>
<v t="ZoomQuiet.20051222115430" tnodeList="ZoomQuiet.20051222115430"><vh>@nosent tryKQF.py</vh></v>
<v t="ZoomQuiet.20051222105247.2" tnodeList="ZoomQuiet.20051222105247.2,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7"><vh>@nosent  mana.pih</vh>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.3" a="E" tnodeList="ZoomQuiet.20051222105247.3"><vh>@nosent questionnaire.tmpl</vh></v>
<v t="ZoomQuiet.20051222105247.4" tnodeList="ZoomQuiet.20051222105247.4,ZoomQuiet.20051222105247.5,ZoomQuiet.20051222105247.6,ZoomQuiet.20051222105247.7"><vh>@nosent  qdesign.py</vh>
<v t="ZoomQuiet.20051222105247.5"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.6"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.7"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.8" tnodeList="ZoomQuiet.20051222105247.8,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.15,ZoomQuiet.20051222105247.15"><vh>@nosent  qpage.pih</vh>
<v t="ZoomQuiet.20051222105247.15"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.16" tnodeList="ZoomQuiet.20051222105247.16,ZoomQuiet.20051222105247.17,ZoomQuiet.20051222105247.18,ZoomQuiet.20051222105247.19,ZoomQuiet.20051222105247.20,ZoomQuiet.20051222105247.21,ZoomQuiet.20051222105247.22"><vh>@nosent  qpage.py</vh>
<v t="ZoomQuiet.20051222105247.17"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.18"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.19"><vh>expage</vh>
<v t="ZoomQuiet.20051222105247.20"><vh>desc</vh></v>
<v t="ZoomQuiet.20051222105247.21"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.22" a="E"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.23" a="E" tnodeList="ZoomQuiet.20051222105247.23,ZoomQuiet.20051222120608.2,ZoomQuiet.20051222120608.3,ZoomQuiet.20051222120608.4,ZoomQuiet.20051222120608.5,ZoomQuiet.20051222120608.6,ZoomQuiet.20051222120608.7,ZoomQuiet.20051222105247.24,ZoomQuiet.20051222105247.24"><vh>@nosent  qprint.pih</vh>
<v t="ZoomQuiet.20051222105247.24"><vh>&lt;&lt;导航&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.2"><vh>&lt;&lt;k_base&gt;&gt;</vh>
<v t="ZoomQuiet.20051222120608.3"><vh>k_base.css</vh></v>
<v t="ZoomQuiet.20051222120608.4" a="E"><vh>EPserver.css</vh>
<v t="ZoomQuiet.20051222120608.5"><vh>&lt;&lt;表单&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.6"><vh>&lt;&lt;色系&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222120608.7" a="E"><vh>&lt;&lt;效果&gt;&gt;</vh></v>
</v>
</v>
</v>
<v t="ZoomQuiet.20051222105247.25" tnodeList="ZoomQuiet.20051222105247.25,ZoomQuiet.20051222105247.26,ZoomQuiet.20051222105247.27,ZoomQuiet.20051222105247.28,ZoomQuiet.20051222105247.29,ZoomQuiet.20051222105247.30"><vh>@nosent  qprint.py</vh>
<v t="ZoomQuiet.20051222105247.26"><vh>&lt;&lt; page declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222105247.27"><vh>init</vh></v>
<v t="ZoomQuiet.20051222105247.28" a="E"><vh>qpubish()</vh>
<v t="ZoomQuiet.20051222105247.29"><vh>askloop</vh></v>
</v>
<v t="ZoomQuiet.20051222105247.30"><vh>&lt;&lt; try &gt;&gt;</vh></v>
</v>
</v>
<v t="ZoomQuiet.20051222115335"><vh>KQf</vh>
<v t="ZoomQuiet.20051222115335.1" a="E" tnodeList="ZoomQuiet.20051222115335.1,ZoomQuiet.20051222115335.2,ZoomQuiet.20051222115335.3,ZoomQuiet.20051222115335.4,ZoomQuiet.20051222115335.5,ZoomQuiet.20051222115335.6,ZoomQuiet.20051222115335.7,ZoomQuiet.20051222115335.8,ZoomQuiet.20051222115335.9,ZoomQuiet.20051222115335.10,ZoomQuiet.20051222115335.11,ZoomQuiet.20051222115335.12,ZoomQuiet.20051222115335.13,ZoomQuiet.20051222115335.14,ZoomQuiet.20051222115335.15,ZoomQuiet.20051222115335.16,ZoomQuiet.20051222115335.17,ZoomQuiet.20051222115335.18,ZoomQuiet.20051222115335.19,ZoomQuiet.20051222115335.20,ZoomQuiet.20051222115335.21,ZoomQuiet.20051222115335.22,ZoomQuiet.20051222115335.23,ZoomQuiet.20051222115335.24,ZoomQuiet.20051222115335.25,ZoomQuiet.20051222115335.26,ZoomQuiet.20051222115335.27,ZoomQuiet.20051222115335.28,ZoomQuiet.20051222115335.29,ZoomQuiet.20051222115335.30,ZoomQuiet.20051222115335.31,ZoomQuiet.20051222115335.32,ZoomQuiet.20051222115335.33,ZoomQuiet.20051222115335.34,ZoomQuiet.20051222115335.35,ZoomQuiet.20051222115335.36,ZoomQuiet.20051222115335.37,ZoomQuiet.20051222115335.38,ZoomQuiet.20051222115335.40,ZoomQuiet.20051222115335.41,ZoomQuiet.20051222115335.42,ZoomQuiet.20051222115335.43"><vh>@nosent Karrigell_QuickForm.py</vh>
<v t="ZoomQuiet.20051222115335.2" a="E"><vh>&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.3" a="E"><vh>class Karrigell_QuickForm</vh>
<v t="ZoomQuiet.20051222115335.4" a="E"><vh>__init__</vh>
<v t="ZoomQuiet.20051222115335.5"><vh>&lt;&lt;JVF&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.6"><vh>addElement</vh>
<v t="ZoomQuiet.20051222115335.7"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.8"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.9"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.10"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.11"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.12"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.13"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.14"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.15"><vh>addHtmNode</vh>
<v t="ZoomQuiet.20051222115335.16"><vh>&lt;&lt;text&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.17"><vh>&lt;&lt;node&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.18"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.19"><vh>&lt;&lt;submit&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.20"><vh>&lt;&lt;reset&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.21"><vh>&lt;&lt;file&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.22"><vh>&lt;&lt;image&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.23"><vh>&lt;&lt;header&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.24"><vh>addTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.25"><vh>addCntTextArea</vh></v>
<v t="ZoomQuiet.20051222115335.26"><vh>addGroup</vh></v>
<v t="ZoomQuiet.20051222115335.27" a="E"><vh>addComboBox</vh></v>
<v t="ZoomQuiet.20051222115335.28"><vh>addRadioGroup</vh></v>
<v t="ZoomQuiet.20051222115335.29" a="E"><vh>addRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.30" a="E"><vh>addRadioLi</vh></v>
<v t="ZoomQuiet.20051222115335.31" a="E"><vh>addVarRadioList</vh></v>
<v t="ZoomQuiet.20051222115335.32" a="E"><vh>addRadioGrp</vh></v>
<v t="ZoomQuiet.20051222115335.33"><vh>addCheckboxGrp</vh></v>
<v t="ZoomQuiet.20051222115335.34"><vh>showFormList</vh></v>
<v t="ZoomQuiet.20051222115335.35"><vh>display</vh></v>
<v t="ZoomQuiet.20051222115335.36"><vh>export</vh></v>
<v t="ZoomQuiet.20051222115335.37"><vh>addStyleSheets</vh></v>
<v t="ZoomQuiet.20051222115335.38"><vh>addRule</vh>
<v t="ZoomQuiet.20051222115335.39"><vh>&lt;&lt;checkbox&gt;&gt;</vh></v>
<v t="ZoomQuiet.20051222115335.40"><vh>&lt;&lt;input&gt;&gt;</vh></v>
</v>
<v t="ZoomQuiet.20051222115335.41"><vh>addJSValidation</vh></v>
<v t="ZoomQuiet.20051222115335.42"><vh>addJSRule</vh></v>
<v t="ZoomQuiet.20051222115335.43"><vh>saveJSRule</vh></v>
</v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="ZoomQuiet.20051201224226"># 使用标准
# 这个是Leo 的宏约定，让Leo 将以下的节点及时的保存到指定目录中
@path q

</t>
<t tx="ZoomQuiet.20051204223324">[desc]
pname		= 啄木鸟问卷 之 “基本知晓”
desc		= 自学问卷v0.7
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 1

[ask/1]
question= 啄木鸟社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= a # 正确答案

[ask/2]
question= 啄木鸟社区关注的是什么语言的开发推广？
a		= PHP
b		= Perl
c       = Python
d       = ASP
e       = Zope
f		= 不知道……
key		= c # 正确答案

[ask/3]
question= 啄木鸟和CPyUG的关系是？
a		= 联盟
b		= 下属
c		= 所有者
d		= 不知道……
key		= a # 正确答案

[ask/4]
question= 啄木鸟社区的项目组织原则是什么？
a		= 路见不平一声吼！
b		= 听从组织安排
c		= 不知道……
key		= a # 正确答案

[ask/5]
question= 啄木鸟社区提供了什么资源供大家使用？
a		= Wiki
b		= SVN
c       = 邮件列表
d       = 以上全有
key		= d # 正确答案</t>
<t tx="ZoomQuiet.20051222105247">#一步接一步自然的来
"""
1. 组织首页 mana.pih
2. 嵌入表单 使用模板 questionnaire.tmpl
3. 创建处理脚本 qdesign.py
... 然后就瀑布样的该作什么就作什么了(^_^)
"""
@path ./</t>
<t tx="ZoomQuiet.20051222105247.2">&lt;html&gt;
&lt;head&gt;
&lt;&lt;k_base&gt;&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;
&lt;h1&gt;在线编辑问卷设计文案，自动解析为模拟问卷&lt;/h1&gt;

&lt;%# 最简单的方式将实际处理脚本包含到页面中适当的位置
Include("qdesign.py")
%&gt;

&lt;%"""
#可以随意包含测试输出哪！
# 嗬嗬也可以随时进行方便的多行注释
print dir()
"""
%&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;



</t>
<t tx="ZoomQuiet.20051222105247.3">&lt;FORM ENCTYPE="multipart/form-data" 
    ACTION="qpage.pih" 
    METHOD=POST&gt;

编辑问卷设计文本: &lt;br&gt;
&lt;textarea NAME="cfgfile" rows="27" COLS="80"&gt;
$cfgtxt
&lt;/textarea&gt;
&lt;br/&gt;

&lt;INPUT TYPE="submit" VALUE=" &gt;提交设计查看问卷效果&lt; " class="btn"&gt; 

&lt;/form&gt;
</t>
<t tx="ZoomQuiet.20051222105247.4">@ $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
qdesign.py 快捷问卷设计
@c

&lt;&lt; page declarations &gt;&gt;

@others


&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.5">#!/usr/bin/env python
# coding:utf-8

import time,datetime
import sys,os,string,re
from Cheetah.Template import Template as ctTpl


#sys.path.append("/usr/local/www/data/karriweb/src/plugin")
# /usr/local/www/data/warder/questionnaire
#from karriweb import *

#from agentweb import *
#from agentsys import *
from dict4ini import DictIni

</t>
<t tx="ZoomQuiet.20051222105247.6">#初始化参数集中维护！
qpath = "q/"
pubq = qpath+"easy051201.cfg"
</t>
<t tx="ZoomQuiet.20051222105247.7">page = open("questionnaire.tmpl","r").read()
vPool = {}
vPool['cfgtxt'] = open(pubq,"r").read()
txp = ctTpl(page, searchList=[vPool])
print txp

#print dir()
qcfg = DictIni(pubq)
#print len(qcfg)
#print qcfg.desc.learn</t>
<t tx="ZoomQuiet.20051222105247.8">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;
&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;&lt;k_base&gt;&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;h1&gt;自动解析成的模拟问卷&lt;/h1&gt;

&lt;!--
# 咔咔咔！！Leo 支持中文节点定义的哪！
--&gt;
&lt;&lt;导航&gt;&gt;

&lt;%
Include("qpage.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;

</t>
<t tx="ZoomQuiet.20051222105247.15">
&lt;h5&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面]修改试题&lt;/a&gt; 
 |&gt; 
&lt;a href="qprint.pih"&gt;
 查看最终效果&lt;/a&gt;
 |&gt; 
&lt;/h5&gt;</t>
<t tx="ZoomQuiet.20051222105247.16">@ $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c

&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.17">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

from dict4ini import DictIni</t>
<t tx="ZoomQuiet.20051222105247.18">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.19">def expage(dict):
    """将dict 内容输出为问卷
    """
    exp = ""
    exp += "&lt;div id='qpage'&gt;"
    @others
    exp += "&lt;/div&gt;" # id=qpage
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.20">exp += """&lt;h3&gt;%s —— 
    &lt;sup&gt;%s&lt;/sup&gt;
    &lt;sub&gt;%s&lt;/sub&gt;&lt;/h3&gt;"""%(dict.desc.pname
                            ,dict.desc.desc
                            ,dict.desc.learn)


</t>
<t tx="ZoomQuiet.20051222105247.21">#print dict.ask["1"]
exp +="&lt;ul&gt;"
# 将字串的字典键值依照数字方式排序
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    exp +="&lt;li&gt;%s"%ask["question"]
    exp +="&lt;SUP&gt;正确答案::%s&lt;/SUP&gt;"%ask["key"]
    #unicode(str(dict.ask[i]["question"]), "utf8").encode("utf8")
    exp +="&lt;ul&gt;"
    qk = [j for j in ask.keys()]
    qk.sort()
    #name="animal[]"
    for q in qk:
        if 1==len(q):
            exp +="&lt;li&gt;%s"%ask[q]
        else:
            pass
    exp +="&lt;/ul&gt;"
    exp +="&lt;/li&gt;"
exp +="&lt;/ul&gt;"

</t>
<t tx="ZoomQuiet.20051222105247.22">open(pubq,"w").write(QUERY["cfgfile"])
qcfg = DictIni(cfgf)
print expage(qcfg)
print "&lt;hr/&gt;"

# 测试...
#print dir()
#print QUERY["cfgfile"]
#print qcfg.desc
</t>
<t tx="ZoomQuiet.20051222105247.23">&lt;html&gt;
&lt;head&gt;
&lt;meta content="text/html; charset=utf-8" http-equiv=content-type&gt;
&lt;!--发现在IE中如果在中文出现后再声明就会有问题，BS哪！--&gt;
&lt;title&gt;

&lt;%
print "自由问卷 之 啄木鸟基本知晓 - Powered by Karrigell"
%&gt;
&lt;/title&gt;

&lt;&lt;k_base&gt;&gt;
&lt;script language="javascript" src="/jvf/validation-framework.js"&gt;
&lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;div id='qpage'&gt;

&lt;&lt;导航&gt;&gt;

&lt;%
Include("qprint.py")
%&gt;

&lt;&lt;导航&gt;&gt;
&lt;div&gt;
&lt;/body&gt;

&lt;/html&gt;
</t>
<t tx="ZoomQuiet.20051222105247.24">
&lt;h4&gt;
 |&gt; 
&lt;a href="mana.pih"&gt;
返回
[问卷设计页面] 修改试题
&lt;/a&gt;
 |&gt; 
&lt;a href="index.ks/logout"&gt;
退出&lt;/a&gt;
&lt;/h4&gt;</t>
<t tx="ZoomQuiet.20051222105247.25">@ $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
qpage.py 快捷问卷模拟展示
@c
&lt;&lt; page declarations &gt;&gt;

@others

&lt;&lt; try &gt;&gt;
</t>
<t tx="ZoomQuiet.20051222105247.26">#!/usr/bin/env python
# coding:utf-8

import time,shutil
import sys,os,string,re

#sys.path.append("../../karriweb/src/core")
#from agentweb import *
#from agentsys import *

from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm</t>
<t tx="ZoomQuiet.20051222105247.27">#初始化参数集中维护！
## 又一个，看来要重构！
qpath = "q/"
pubq = qpath+"easy051201.cfg"

cfgf = pubq

tcode = time.strftime("%y%m%d%H%M%S", time.localtime())
tcode = time.strftime("%y%m%d%H%M%S", time.localtime())

# 先复制一下子
#shutil.copy2(cfgf,cfgf+".%s"%tcode)
</t>
<t tx="ZoomQuiet.20051222105247.28">def qpubish(dict):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST','#',dict.desc.desc)
    exp += "&lt;h1&gt;%s&lt;sup&gt;学习资料::%s&lt;/sup&gt;&lt;/h1&gt;"%(dict.desc.pname
                                       ,dict.desc.learn)    
    
    #exp += "&lt;H6&gt;返回%s&lt;/H6&gt;"%dict.desc.learn
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    @others    
    p.addElement('node','&lt;/ul&gt;','')
    
    # 无良的迁就……
    p.addJSValidation()
    p.saveJSRule("../js/validation-config.xml")
    
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])
    exp += p.export()
    
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051222105247.29">"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass
    
    p.addRadioList("cr_ask%s"%i
               ,ask["question"]
               ,qli)
    p.addJSRule("cr_ask%s"%i,"问题%s "%i)

</t>
<t tx="ZoomQuiet.20051222105247.30">#open(qpath+pubq,"w").write(QUERY["cfgfile"])
#print dir()
#print QUERY
qcfg = DictIni(cfgf)
print "&lt;div id='qpage'&gt;"
#print p.export()
print "&lt;div id='errorDiv'&gt;&lt;/div&gt;"

print qpubish(qcfg)
print "&lt;/div&gt;"

"""
p = Karrigell_QuickForm('fm_kq','POST','#',qcfg.desc.pname)
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})

p.addGroup(["submit","btn_submit","提交"]
           ,["reset","btn_reset","重写"])
#p.display()
"""
</t>
<t tx="ZoomQuiet.20051222115335"># 按照约定，这样的扩展要部属到Karrigell 的根目录，所以使用相对路径回溯指向！
@path ../../../</t>
<t tx="ZoomQuiet.20051222115335.1">
&lt;&lt; Karrigell_QuickForm declarations &gt;&gt;

@others

"""
   Overview - Karrigell_QuickForm
   
  p = Karrigell_QuickForm('teste','POST','teste.py')
  p.addElement('text','nome',{'size':80,'maxlength':20})
  p.addElement('text','email',{'size':80,'maxlength':20})
  p.addRule('nome','required','campo nome obrigario!')
  p.addComboBox('combo',{'a':'A','b':'B'})
  p.addCheckBox('fuda',{'a':'Letra A','b':'Letra B'})
  p.addElement('image','python.gif')
  p.addElement('file','foto')
  p.addElement('submit','botao_enviar',{'value':'Enviar A'})
  p.addComboBox('sexo',['Masculino','Masculino'],['Feminino','Feminino'])
  p.addTextArea('mensagem','20','80')
  p.addGroup(["submit","botao_enviar","Enviar"],["reset","botao_limpar","Limpar"])
  p.addStyleSheets({'bgcolor':'lightblue','font':'verdana','border-color':'black'})
  p.display()
 
"""
</t>
<t tx="ZoomQuiet.20051222115335.2">#@ignore
#@language python
"""
     Package: Karrigell_QuickForm-1.0.1-alpha
Requirements: Karrigell HTTP Server - http://karrigell.sourceforge.net
 Description: - A simple class that generates html forms with some basic javascript validations. 
              - It is similar to HTML_QuickForm from PEAR (http://pear.php.net).   
      Author: Marcelo Santos Araujo &lt;marcelo@orionlab.net&gt; 
        Date: 23 November 2005
     Version: $Revision Karrigell_QuickForm-1.0.1-alfa
     Credits: Special thanks to Pierre Quentel and Karrigell's developers.
 Contributor: Zoom.Quiet &lt;Zoom.Quiet@gmail.com&gt;
                - Chinese handbook
                - addCheckboxGrp()
                - addRadioList()
                - addCntTextArea()
                - add JSValidation support:
                    addJSValidation()
                    addJSRule()
                    saveJSRule()
"""





</t>
<t tx="ZoomQuiet.20051222115335.3">class Karrigell_QuickForm:    
    """Simple HTML Forms Generation  - Karrigell_QuickForm"""
	@others</t>
<t tx="ZoomQuiet.20051222115335.4">def __init__(self,name,method,action,legend):    	
    """Form name, request method, file target,legend - Karrigell_QuickForm('contact_form','POST','contact.py','form legend')"""
    @others
    
    self.form_list = []
    self.css_list = []
    self.js_list =[]
    self.name = name
    self.legend_name = legend
    self.method = method
    self.action = action
    &lt;&lt;JVF&gt;&gt;
    self.form_list.append("""&lt;div&gt;
&lt;form method='%s' 

action='%s' 
id='%s' enctype='multipart/form-data'&gt;
&lt;fieldset&gt;&lt;legend&gt;
&lt;b&gt;%s&lt;/b&gt;
&lt;/legend&gt;&lt;table&gt;"""%(self.method
                     ,self.action
                     ,self.name
                     ,self.legend_name)
                     )</t>
<t tx="ZoomQuiet.20051222115335.5">self.jvfxml = ""

self.jvfxmltmpl="""
&lt;validation-config lang="auto"&gt;
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;	
&lt;/validation-config&gt;
"""
self.jvformtmpl="""
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
"""
self.JSvXMLtmpl="""&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;!DOCTYPE validation-config SYSTEM "validation-config.dtd"&gt;
&lt;validation-config lang="auto"&gt;	
	&lt;form id="%s" show-error="errorMessage" onfail="" 
	show-type="first"&gt;
    %s
	&lt;/form&gt;
&lt;/validation-config&gt;
"""
self.JSvMXLnode = """
		&lt;field name="%s" 
		display-name="%s" onfail=""&gt;
			&lt;depend name="required" /&gt;
		&lt;/field&gt;
"""
self.JSvRules = []

</t>
<t tx="ZoomQuiet.20051222115335.6">
def addElement(self,element,name,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'full_name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.7">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' size='"+size+"' maxlength='"+maxlength+"'&gt;&lt;td&gt;&lt;/tr&gt;") 

   

</t>
<t tx="ZoomQuiet.20051222115335.8">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.9">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.10">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.11">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.12">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.13">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.14">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.15">
def addHtmNode(self,element,name,desc,options=None):
    """add a form element: text,file,image,submit,reset,header 
        - addElement('text'
                     ,'object name'
                     ,'print name'
                     ,{'size':20
                       ,'maxlength':'40'})
    available elements: 
    text, checkbox, submit, reset, file,image,header 
    """
    &lt;&lt;text&gt;&gt;
    &lt;&lt;node&gt;&gt;
    &lt;&lt;checkbox&gt;&gt;    
    &lt;&lt;submit&gt;&gt;
    &lt;&lt;reset&gt;&gt;
    &lt;&lt;file&gt;&gt;
    &lt;&lt;image&gt;&gt;
    &lt;&lt;header&gt;&gt;</t>
<t tx="ZoomQuiet.20051222115335.16">
if element == 'text':
    size = options['size']
    size = str(size)
    maxlength = options['maxlength']
    maxlength = str(maxlength)
    htm = """&lt;tr&gt;
    &lt;td align='right' valign='top'&gt;
    &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
    &lt;td valign='top' align='left'&gt;
    &lt;input type='%s' 
        name='%s' 
        size='%s' 
        maxlength='%s'&gt;&lt;td&gt;
        &lt;/tr&gt;
        """
    self.form_list.append(htm%(desc
                               ,element
                               ,name
                               ,size
                               ,maxlength)
                            )
    #name.title().replace('_',' ')


</t>
<t tx="ZoomQuiet.20051222115335.17">
elif element == 'node':
    self.form_list.append(name)


</t>
<t tx="ZoomQuiet.20051222115335.18">
elif element == 'checkbox':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
    checkbox = ""
    dic_check = options.items()
    for a,b in dic_check:
        checkbox = checkbox + "&lt;input type='checkbox' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt; "+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(checkbox+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")
</t>
<t tx="ZoomQuiet.20051222115335.19">
elif element == 'submit':
    value = options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;td&gt;&lt;/tr&gt;")	

</t>
<t tx="ZoomQuiet.20051222115335.20">
elif element == 'reset':
    value= options['value']
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"' value='"+value+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.21">
elif element == 'file':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title()+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;input type='"+element+"' name='"+name+"'&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.22">elif element == 'image':
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;img src='"+name+"'&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.23">elif element == 'header':
    self.form_list.append("&lt;tr&gt;&lt;td align='left' valign='top' colspan='2'&gt;&lt;b&gt;&lt;center&gt;"+name.title()+"&lt;/center&gt;&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;")
    
</t>
<t tx="ZoomQuiet.20051222115335.24">
def addTextArea(self,name,rows,cols):
    """ add a textarea element - addTextArea('message','10','90')""" 
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;&lt;textarea name='"+name+"' cols='"+cols+"' rows='"+rows+"'&gt;&lt;/textarea&gt;&lt;td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.25">
def addCntTextArea(self,name,desc,content,rows,cols):
    """ add a textarea element with content
        - addTextArea('message','desc',"contents...",'10','90')
    """ 
    self.form_list.append("""&lt;tr&gt;
            &lt;td align='right' valign='top'&gt;
            &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt;
            &lt;td valign='top' align='left'&gt;
            &lt;textarea name='%s' 
            cols='%s'
            rows='%s'&gt;%s&lt;/textarea&gt;
            &lt;td&gt;&lt;/tr&gt;"""%(desc
                          ,name
                          ,cols
                          ,rows
                          ,content)
                        )


</t>
<t tx="ZoomQuiet.20051222115335.26">def addGroup(self,*t):
    """ add a button group 
    """
    htm = """&lt;input 
        type='%s' 
        name='%s' 
        value='%s'
        class='%s'&gt;
    """
    group = ""
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;&lt;/b&gt;&lt;/td&gt;&lt;td valign='top' align='left'&gt;")
    for a,b,c,d in t:
        group += htm%(a,b,c,d)
    self.form_list.append(group+"&lt;/td&gt;&lt;/tr&gt;")	
</t>
<t tx="ZoomQuiet.20051222115335.27">def addComboBox(self,name,t):
    """ add a combobox element 
    - addComboBox('fruits'
                    ,{'apple':'Apple'
                    ,'pear':'Pear'
                    ,'orange':'Orange'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td align='left' valign='top'&gt;&lt;select name='"+name+"[]'&gt;")
    combo = ""
    t= t.items()
    for a,b in t:
        combo = combo + "&lt;option value='"+a+"'&gt;"+b+"&lt;/option&gt;"
    self.form_list.append(combo)
    self.form_list.append("&lt;/select&gt;&lt;/td&gt;&lt;/tr&gt;")

</t>
<t tx="ZoomQuiet.20051222115335.28">def addRadioGroup(self,name,value):
	"""add a radio element export in TABLE
    - addRadioGroup('genre'
                    ,{'male':'Male'
                      ,'female':'Female'})
    """
    self.form_list.append("&lt;tr&gt;&lt;td align='right' valign='top'&gt;&lt;b&gt;"+name.title().replace('_',' ')+":&lt;/b&gt;&lt;/td&gt; &lt;td valign='top' align='left'&gt;")
	radio = ""
    t = value.items()
    for a,b in t:
        radio = radio + "&lt;input type='radio' name='"+name+"' value='"+a+"'&gt;"+"&lt;label&gt;&lt;font face=verdana size=2&gt;"+b+"&lt;/font&gt;&lt;/label&gt;&lt;br&gt;"
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")



    </t>
<t tx="ZoomQuiet.20051222115335.29">
def addRadioList(self,name,desc,value,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.30">
def addRadioLi(self,name,desc,vdict,klist,id=""):
	"""add a radio element export as UL LI group
        - name 列表名
        - desc 项描述
        - vdict 值字典
        - klist 键列表
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;DIV id='qlist'&gt;&lt;ul&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    #t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for k in klist:
        radio = radio + tmpl%(name,k,vdict[k])
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/DIV&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.31">
def addVarRadioList(self,name,desc,value,convert,id=""):
	"""add a radio element export as UL LI group
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;li id='%s'&gt;%s:&lt;b&gt;&lt;/b&gt;
            &lt;ul id='qlist'&gt;"""
    self.form_list.append(htm%(id,desc))
	radio = ""
    t = value.items()
    tmpl = """&lt;li&gt;
        &lt;input type='radio' 
        name='%s' 
        value='%s'&gt;  
        &lt;label&gt;%s&lt;/label&gt;      
        """        
    for a,b in t:
        radio = radio + tmpl%(name,convert[a],b)
    self.form_list.append(radio+"&lt;/ul&gt;&lt;/li&gt;")
    #self.form_list.append("&lt;/tr&gt;")

    </t>
<t tx="ZoomQuiet.20051222115335.32">
def addRadioGrp(self,name,desc,value):
	"""add a radio element in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='radio' 
        name='%s' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.33">
def addChkboxGrp(self,name,desc,value):
	"""add a radio element Export in TABLE
    - addRadioGroup('name','desc'
                    ,{'male':'Male'
                    ,'female':'Female'})
    """
    htm = """
        &lt;tr&gt;&lt;td align='right' valign='top'&gt;
        &lt;b&gt;%s:&lt;/b&gt;&lt;/td&gt; 
        &lt;td valign='top' align='left'&gt;"""
    self.form_list.append(htm%desc)
	radio = ""
    t = value.items()
    tmpl = """&lt;input type='checkbox' 
        name='%s[]' 
        value='%s'&gt;
        &lt;label&gt;%s&lt;/label&gt;
        &lt;br&gt;
        """
    for a,b in t:
        radio = radio + tmpl%(name,a,b)
    self.form_list.append(radio+"&lt;/td&gt;")
    self.form_list.append("&lt;/tr&gt;")

    
</t>
<t tx="ZoomQuiet.20051222115335.34">
def showFormList(self):
    """ returns the whole form list """
    return self.form_list

</t>
<t tx="ZoomQuiet.20051222115335.35">def display(self):
    """ displays the html form"""
    self.form_list.append("&lt;/table&gt;&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;")
    self.js_list.append("&lt;script type='text/javascript'&gt;")
    print self.js_list.pop()
    print "function validate_%s(frm){"% self.name
    print """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        print k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    print final_js_function.replace("&lt;break&gt;","\\n")
    print self.js_list.pop()
    for c in self.css_list:
        print c+"\n"
    for i in self.form_list:
        print i+"\n"

</t>
<t tx="ZoomQuiet.20051222115335.36">def export(self):
    """ export the html form code
        so people can do something for them self
        &lt;textarea 
id="jsvalidation-framework" rows="27" &gt;%s
&lt;/textarea&gt;%self.jvfxml
    """
    
    exp = ""
    self.form_list.append("""&lt;/table&gt;
&lt;/fieldset&gt;&lt;/form&gt;&lt;/div&gt;""")

    self.js_list.append("&lt;script type='text/javascript'&gt;")
    exp += self.js_list.pop()
    exp += "function validate_%s(frm){"% self.name
    exp += """var value='';
             var errFlag=new Array();
             var _qfGroups={};
             _qfMsg='';"""
    for k in self.js_list:
        exp += k+"\n"
    self.js_list.append("&lt;/script&gt;")
    final_js_function = """
        if (_qfMsg != ''){
         _qfMsg = 'Form is not correct!' + _qfMsg;
         _qfMsg = _qfMsg+'&lt;break&gt;Please, checkout instructions above';
         alert(_qfMsg);
         return false;
        }
        return true; }
        """
    exp += final_js_function.replace("&lt;break&gt;","\\n")
    exp += self.js_list.pop()
    for c in self.css_list:
        exp += c+"\n"
    for i in self.form_list:
        exp += i+"\n"
    return exp


</t>
<t tx="ZoomQuiet.20051222115335.37">def addStyleSheets(self,t):
    """add a basic stylesheet - simple CSS parameters"""
    css = "&lt;style type='text/css'&gt;textarea { background-color:"+t['bgcolor']+";font-family:"+t['font']+"; font-size:"+t['size']+"px; border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} input { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} option { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} select { background-color:"+t['bgcolor']+";font-family:"+t['font']+";border-style:solid;border-color:"+t['border-color']+";border-width:1px;} td { font-size:"+t['size']+"px; font-family:"+t['font']+"}&lt;/style&gt;"
    self.css_list.append(css)

</t>
<t tx="ZoomQuiet.20051222115335.38">def addRule(self,elem_name,rule_type,message):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data"
    repl = """enctype='multipart/form-data' 
        onsubmit='try { 
            var myValidator = validate_%s; 
            } 
        catch(e) { return true; } 
        return myValidator(this);"""    
    if rule_type == "required":
        begin_form=self.form_list[0].replace(orig
                                     ,repl%self.name)
        self.form_list[0] = begin_form
        &lt;&lt;input&gt;&gt;
    else:
        pass
    

</t>
<t tx="ZoomQuiet.20051222115335.39">js_string = """
value=getObjectByID('%s').value;

if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name,elem_name,elem_name,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.40">js_string = """
obj = frm.elements['%s'];
//alert(obj.type);
value=frm.elements['%s'].value;
if(value==''&amp;&amp;!errFlag['%s']){
    errFlag['%s']=true;
    _qfMsg=_qfMsg + '&lt;break&gt;- %s';
}
""" % (elem_name
       ,elem_name
       ,elem_name
       ,elem_name
       ,message)    
js_string = js_string.replace("&lt;break&gt;","\\n")
self.js_list.append(js_string)

</t>
<t tx="ZoomQuiet.20051222115335.41">def addJSValidation(self):
    """add a javascript rule in order to validate a form field  
    - addRule('elem_name','required','Name is required!')
    """
    orig = "enctype='multipart/form-data'"
    repl = """
        onsubmit='return doValidate("%s");'
        """ 
    begin_form=self.form_list[0].replace(orig
                                 ,repl%self.name) 
    self.form_list[0] = begin_form
     
    


</t>
<t tx="ZoomQuiet.20051222115335.42">def addJSRule(self,name,message):
    """add a xml rule for javascript checking
    """
    exp = self.JSvMXLnode%(name,message)
    self.JSvRules.append(exp)
    
     
    


</t>
<t tx="ZoomQuiet.20051222115335.43">def saveJSRule(self,xml):
    """exp and save a xml rule for javascript checking
    """
    exp = ""
    for node in self.JSvRules:
        exp+= node
    #exp = self.JSvXMLtmpl%(form,exp)
    #self.jvfxml = self.jvfxmltmpl%(self.name,exp)
    #exp = self.jvfxmltmpl%(self.name,exp)
    #print self.jvfxml
    open(xml,'w').write(self.JSvXMLtmpl%(self.name,exp))



    
     
    




</t>
<t tx="ZoomQuiet.20051222115430">from Karrigell_QuickForm import Karrigell_QuickForm

p = Karrigell_QuickForm('teste','POST','foo.py','Authentication')
p.addElement('text','login',{'size':20
                       ,'maxlength':40})
p.addElement('text','password',{'size':20
                       ,'maxlength':40})
p.addRule('login','required',"Login is required!")
p.addGroup(["submit","botao_enviar","submit","Send"]
           ,["reset","botao_limpar","reset","Clear"])
p.display()</t>
<t tx="ZoomQuiet.20051222120608"># Leo 的节点操作非常的Easay! 滥用之！
## 将常常要修改的，其它页面都要使用的都收集起来！</t>
<t tx="ZoomQuiet.20051222120608.2">&lt;style&gt;
@others
&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051222120608.3">/* $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/
DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
/*decimal; lower-alpha*/
#qpage ul li{list-style-type :decimal;}
#slide ul li{list-style-type :square;}
DIV#qlist{}

#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}
DIV#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
DIV#mana A{
    padding: 2px 5px 0px 2px;}
DIV#mana A:hover{background-color: #E0FFB8;}
SPAN#title{font-size: 15px;}
SPAN#sequence{font-size: 12px;
    color: #930;
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    float:right;  
    padding: 2px;}
TEXTAREA#jsvalidation-framework{display:none;}

DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051222120608.4">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051222120608.5">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051222120608.6">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051222120608.7">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="ZoomQuiet.20051224165357">发现 Karrigell Server 方式的页面组织非常的简洁，运用之！</t>
<t tx="ZoomQuiet.20051224165419">##基础宣言
&lt;&lt; page declarations &gt;&gt;
## HTML 代码准备
&lt;&lt; htmlcode &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others


</t>
<t tx="ZoomQuiet.20051224165419.1">## questionnaire.ks
# 文件名匹配模块
import os,fnmatch
#页面间传递对象
import time,base64,pickle
# XML 处理模块
from elementtree import ElementTree
# Karrigell 提供支持模块
from HTMLTags import *
from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm

</t>
<t tx="ZoomQuiet.20051224165419.2">def _htmhead(title):
    """基础复用页面元素控制
    """
    htm = """&lt;html&gt;&lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8"&gt;
        &lt;title&gt;"""
    htm += title
    htm += """&lt;/title&gt;
    &lt;&lt;k_base&gt;&gt;
    &lt;!--
    &lt;script language="javascript" src="/k/js/validation-framework.js"&gt;&lt;/script&gt;
    --&gt;
    
    &lt;/head&gt;
    &lt;body&gt;    
    &lt;div id='qpage'&gt;
    """
    return htm

htmfoot="""
&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
&lt;h5&gt;design by:
    &lt;a href="http://wiki.woodpecker.org.cn/moin/ZoomQuiet"&gt;
    Zoom.Quiet&lt;/a&gt;
 powered by :
     
 &lt;a href="http://python.org"&gt;
 Python&lt;/a&gt;
 ::
 &lt;a href="http://karrigell.sourceforge.net"&gt;
 KARRIGELL 2.2&lt;/a&gt;
 +
 &lt;a href="http://effbot.org/zone/element.htm"&gt;
 ElementTree&lt;/a&gt;
&lt;/h5&gt;

&lt;/div&gt;&lt;!--id='qpage'--&gt;

&lt;/body&gt;
&lt;/html&gt;
"""


</t>
<t tx="ZoomQuiet.20051224165419.9"># 使用 Session来记忆成员信息
sess = Session()

if not hasattr(sess, 'usr'):
    sess.usr = {"name":"NULL"}

conf = DictIni("questionnaire.cfg")
qpath = conf.qpage.qpath    #"q/"
pubq = conf.qpage.pubq
cfgf = qpath+pubq

## 问卷信息的字典化信息对象
qcfg = DictIni(cfgf)

</t>
<t tx="ZoomQuiet.20051224165419.10">def index():
    """首先实现的页面
    """
    # 八股化的页面函式组织... clone 统一的页头输出章节！
    &lt;&lt; pagehead &gt;&gt;
    
    # 测试/印证外部专用处理页面对象的引入
    #
    #print sess.usr
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        &lt;&lt;页面事务&gt;&gt;
        print SPAN(A('退出', href="logout"),id="mana")
        print SPAN(A('首页', href="index"),id="mana")
        print H1("啄木鸟问卷 之 自学问卷集")
        print "&lt;DIV id='cntarea'&gt;"
        @others
        print "&lt;/DIV&gt;"
    
    """快速设计CSS时可以方便的列印出主要页面元素来看效果
    print H1("H1")
    print H2("H2")
    print H3("H3")
    print H4("H4")
    print H5("H5")
    print H6("H6")
    """
    
    # 八股化的页面函式组织... clone 统一的页脚输出章节！
    &lt;&lt; pagefoot &gt;&gt;











</t>
<t tx="ZoomQuiet.20051224165419.11"># 清理问卷指定
try:
    if ""!=sess.usr["qp"]:
        sess.usr["qp"] = ""
    else:
        pass
except:
    pass
## 可以随时打印当前 session 值来印证自个儿的想法
#print sess.usr
</t>
<t tx="ZoomQuiet.20051224165419.12">qcfglist = []
#print conf.qpage.qpath
for f in os.listdir(conf.qpage.qpath):
    if fnmatch.fnmatch(f, '*.cfg'):
        if ("__init__" in f):
            pass
        else:
            qcfglist.append(f)
#print qcfglist
# 识别问卷发布情况::
qdone = {}
qdoing = {}
qdesign = {}
for p in qcfglist:
    cfgp = DictIni(conf.qpage.qpath+p)
    if 0==cfgp.desc.done:
       qdesign[p]=cfgp
    elif 1==cfgp.desc.done:
       qdoing[p]=cfgp
    elif 2==cfgp.desc.done:
       qdone[p]=cfgp
    else:
        qdesign[p]=cfgp

#分别列表显示问卷

&lt;&lt;发表的&gt;&gt;
&lt;&lt;回收的&gt;&gt;
&lt;&lt;准备的&gt;&gt;
</t>
<t tx="ZoomQuiet.20051224165419.13">
print H5("准备中的的问卷::")
print UL("".join([str(LI(
            B(A(qdesign[i].desc.pname
                ,href="page?qpname=%s&amp;do=design"%i.split(".")[-2])
                )+
                SUP("自学资料::"+qdesign[i].desc.learn)
                         )
                        ) for i in qdesign
                    ])
                    )
</t>
<t tx="ZoomQuiet.20051224165419.14">
print _htmhead("CPyUG·啄木鸟社区·自学问卷管理 obpKwDay6- Powered by Karrigell")





</t>
<t tx="ZoomQuiet.20051224165419.15">
print htmfoot



</t>
<t tx="ZoomQuiet.20051224165419.16">def page(qpname,do):
    """从原 mana.pih 重构过来 统一的问卷管理 .ks
    """
    &lt;&lt; pagehead &gt;&gt;
    # 序列化对象以便页面间传递
    pisess = pickle.dumps(sess.usr)
    #print pisess
    #print "&lt;br/&gt;尝试URL 安全序列化--&gt;  "
    sessurl = base64.urlsafe_b64encode(pisess)
    #print sessurl
    #print "尝试load 回来--&gt; &lt;br/&gt; "
    #print pickle.loads(base64.urlsafe_b64decode(sessurl))
    #print QUERY
    #base64.urlsafe_b64encode(pickle.dumps(obj))
    #pickle.loads(base64.urlsafe_b64decode(obj))
    
    qcfg = DictIni(conf.qpage.qpath+qpname+".cfg")
    
    if sess.usr["name"]=="NULL":
        raise HTTP_REDIRECTION,"login"
    else:
        sess.usr["qp"] = qpname
        # 051224 加入问卷状态
        sess.usr["do"] = do
        
        &lt;&lt;导航&gt;&gt;
        
        # 整理原问卷解析为标准函式
        print _qpubish(qcfg,"bye",do,qpname)        
        """将dict 内容输出为回答问卷
            - dict 问卷设计字典
            - aim 提交目标
            - type 统计模式
            - qpname 问卷名
        """
    
    &lt;&lt; pagefoot &gt;&gt;</t>
<t tx="ZoomQuiet.20051224165419.17">print SPAN(A('退出', href="logout"),id="mana")
print SPAN(A('首页', href="index"),id="mana")
print SPAN(A("编辑管理问卷"
             ,href="../mana.ks/edit?qp=%s&amp;obj=%s"%(sess.usr["qp"]
                ,base64.urlsafe_b64encode(pickle.dumps(sess.usr))
                        )
                )
            ,id="mana")
            
</t>
<t tx="ZoomQuiet.20051224165419.25">
def login():
    """实际最先完成的页面
    """
    print sess.usr
    &lt;&lt; pagehead &gt;&gt;    
    # 实际活动
    print H1("啄木鸟问卷 之 自学问卷集")
    
    @others 

    &lt;&lt; pagefoot &gt;&gt;
    #print QUERY
    #raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.26">p = Karrigell_QuickForm('fm_login'
                        ,'POST'
                        ,'chkusr'
                        ,"登录自学问卷")
p.addHtmNode('text','uname'
             ,"CPyUG名号"
             ,{'size':40,'maxlength':37})
p.addGroup(["submit","btn_submit","提交","btn"]
           ,["reset","btn_reset","重写","btn"])

p.addRule('uname','required'
          ,"成员名是必须的!Login name is required!")
#p.addRule('password','required',"Password is required!")
p.display()
</t>
<t tx="ZoomQuiet.20051224165419.27">def logout():
    """完成 login 时顺手就创立的页面
    """
    sess.close()
    
    #sess.usr = {}
    #sess.usr["name"] ="NULL"
    #print QUERY
    raise HTTP_REDIRECTION,"index"




</t>
<t tx="ZoomQuiet.20051224165419.28">def chkusr(**args):
    """从login 自然引发的页面
        检查用户登录情况
    """    
    print QUERY
    print "&lt;hr/&gt;"
    print sess.usr
    sess.usr["name"] = QUERY["uname"]
    print sess.usr
    # 不自动跳转页面，打印session 观察……
    raise HTTP_REDIRECTION,"index"
</t>
<t tx="ZoomQuiet.20051224165419.30">
def bye(**args):
    """不使用客户端验证后替代的服务端检验页面
    """
    &lt;&lt; pagehead &gt;&gt;
    print H1("%s"%(qcfg.desc.pname))
    
    qk = QUERY.keys()
    
    if "btn_submit" in qk:
        @others
        
    else:
        raise HTTP_REDIRECTION,"index"
        
    &lt;&lt; pagefoot &gt;&gt;

    #raise HTTP_REDIRECTION,"stat"
    #raise HTTP_REDIRECTION,"logout"
    


</t>
<t tx="ZoomQuiet.20051224165419.31">#print QUERY
qp = DictIni(conf.qpage.qpath+sess.usr["qp"]+".cfg")
qli = [i for i in qp.ask.keys()]
a = []
as = ""
# 扫描并记录设计问卷的所有题目
for k in qk:
    if "btn_submit"==k:
        pass
    else:
        as+=QUERY[k]+"\n"
        a.append(k[6:])
lost=[]
qli.sort()
# 对比,计数 已经回答的
for q in qli:
    if q not in a:
        lost.append(q)

if 0==len(lost):
    answer = "%s%s.%s.aq"%(conf.qpage.apath
                          ,sess.usr["qp"]#pubq.split(".")[-2]
                          ,sess.usr["name"])
    open(answer,'w').write(as)
    ## 正常跳转到统计页面
    
    raise HTTP_REDIRECTION,"stat"

print BR()*2
print H4("没有回答完全！")
for l in lost:
    print LI("问题%s 没有回答!"%l)
print """&lt;h4&gt;&lt;input type="button"
    value="点击返回重新回答"
    class="btn"
    onClick="history.back();"/&gt;
&lt;/h4&gt;
"""


  </t>
<t tx="ZoomQuiet.20051224165419.61">def _qpubish(dict,aim,type,qpname):
    """将dict 内容输出为回答问卷
        - dict 问卷设计字典
        - aim 提交目标
        - type 统计模式
        - qpname 问卷名
    """
    exp = ""
    qptitle = """&lt;h6&gt;
        &lt;SPAN&gt;&lt;B&gt;%s&lt;/B&gt;&lt;/SPAN&gt;
        (自学资料::%s)&lt;/h6&gt;        
        """%(dict.desc.pname
             ,dict.desc.learn)
    &lt;&lt;表单类型&gt;&gt;
    p = Karrigell_QuickForm(qpname,'POST',aim,dict.desc.desc)
    exp += "&lt;h1&gt;%s&lt;/h1&gt;"%(dict.desc.pname)
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    #SPAN(B("问卷进行中::"),id="title")
    p.addElement('node',"&lt;DIV id='qlist'&gt;&lt;ul&gt;","")
    # 深入数据
    # 题目循环输出
    &lt;&lt;loopask&gt;&gt;
    
    # 由于JVF 的浏览器兼容问题，先放弃！
    #p.addJSValidation()
    #p.saveJSRule("../js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;&lt;/DIV&gt;','')
    
    &lt;&lt;submit&gt;&gt;
    
    exp += p.export()
    #exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    exp += qptitle
    #exp += "&lt;p&gt;返回%s&lt;/p&gt;"%dict.desc.learn
    return exp



</t>
<t tx="ZoomQuiet.20051224165419.62">if "doing" == type:
    pass
elif "done" == type:
    aim="#"
elif "design" == type:
    pass

</t>
<t tx="ZoomQuiet.20051224165419.63">if "doing" == type:
    p.addGroup(["submit","btn_submit","提交","btn"]
               ,["reset","btn_reset","重写","btn"])    
elif "done" == type:
    pass
elif "design" == type:
    pass

</t>
<t tx="ZoomQuiet.20051224165419.64">"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}
k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass    
    #051219 fixed rurn of dict
    liq = [q for q in qli.keys()]
    liq.sort()    
    if i%2 == 0:
        p.addRadioLi("cr_ask%s"%i
               ,ask["question"]
               ,qli
               ,liq
               ,"even")
    else:
        p.addRadioLi("cr_ask%s"%i
               ,ask["question"]
               ,qli
               ,liq)
            
    ## JVF 调试太复杂不用之！
    #p.addJSRule("cr_ask%s"%i,"问题%s "%i)


</t>
<t tx="ZoomQuiet.20051224170150"># 将全局性约定，组织为外部配置文件
[qpage]
qpath		= q/
apath		= a/
pubq    = "easy051201.cfg"

##pyorg		= /d/deptorg.py

</t>
<t tx="ZoomQuiet.20051224171010">&lt;style&gt;
@others

&lt;/style&gt;</t>
<t tx="ZoomQuiet.20051224171010.1">/* $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
Karrigell 使用的CSS
Django 颜色！*/
/*esp for 问卷::自动居中！margin: 0 auto;*/

DIV#qpage{width: 700px;
    font-size: 12px;
    margin: 0 auto;}
fieldset{background-color: #ffffff;
    margin:.5em auto;}
legend{font-size: 12px;}
#qpage ul{width: 650px;}
#qpage ul li{list-style-type :decimal;}
DIV#qlist{}
#qpage ul ul li{list-style-type :none;
    display :inline ;
    }
LI UL#staff li{list-style-type :circle;}
LI#even{BACKGROUND-COLOR: #EEF3F5;}

SPAN#mana {font-size: 12px;
    float:right;text-align : center; 
    BACKGROUND-COLOR: #930;
    background-color: whitesmoke; 
    border-bottom: 2px solid #234F32;
    border-left: 2px solid #487858;
    margin:0px;padding: 0px;}
SPAN#mana A{
    padding: 2px 5px 0px 2px;}
SPAN#mana A:hover{BACKGROUND-COLOR: #E0FFB8;}
DIV#errorMessage{font-size: 14px;color: #333;
    font-weight: bold;border: 0px solid #930;
    BACKGROUND-COLOR: #94DA3A}</t>
<t tx="ZoomQuiet.20051224171010.2">BODY{font-size: 10px; color: #333333; 
    text-indent: 1em; 
    background-color: whitesmoke; 
    margin: .5em;    
    font-family: Tahoma;
    scrollbar-face-color:#99CC99;
    scrollbar-shadow-color: #ffffff;
    scrollbar-highlight-color: #99CC99;
    scrollbar-3dlight-color: #ffffff; 
    scrollbar-darkshadow-color:#99CC99; 
    scrollbar-track-color: #E6E6E6;
    scrollbar-arrow-color: #ffffff;
}
P,UL,OL,DL,TABLE,TR,TH,TD,A,FONT {font-family: Tahoma,Arial,Helvetica}
HR {font-size: 1px; color: #99CC99}

BODY A{color: #002000; text-decoration: none}
A{font-size: 1em; }
A:hover{color:#993300; text-decoration: underline;}

HR{
    margin: 0px;
	padding: 0px;
    }
/*Dganjo green theater
#092E20 #234F32 #99CC99 #487858  #E0FFB8
亮边 #94DA3A*/
H1{	font-size: 16px;font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;letter-spacing:4px;
	color: #FFFFFF;
	text-align: left;
	background-color: #092E20;	
	border: 2px solid #234F32;
	margin: 0px;
	padding: 6px;
    }
H1 A{color:#94DA3A;}
H2{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color: whitesmoke;     
    text-align: left;
    background-color: #234F32;
	border: 2px solid #487858;
    margin: 0px;
	padding: 5px;
    }
H2 A{ font-size: 14px;font-family: SimHei,Arial,Helvetica; 
    font-weight: lighter; color: #FFCC80;
    }
H2 A:hover{ }	
H3{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; letter-spacing:4px;
    color:whitesmoke;    
    text-align: left;
    background-color: #326342;
	border: 2px solid #234F32;    
    margin: 0px;	
	padding: 5px;
    }
    /*亮底#FDEACC 警边#FFCC80*/
H4{ font-size: 14px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter;letter-spacing:4px;
    color: #406040;
    text-align: left; 
    background-color: #FFFFE1;
    border: 2px solid #94DA3A;
    margin: 0px;
	padding: 5px;
    }
H5{ font-size: 12px; font-family: SimHei,Arial,Helvetica;
    font-weight: lighter; 
    color: whitesmoke; 
    background-color: #487858;
    border: 2px solid #234F32; 
    margin: 0px;
	padding: 4px;
    }
H5 A{color: #FFE761; }	
H5 A:hover{color: #FFE761; }	

H6{	font-size: 12px;	font-family: SimHei,Arial,Helvetica;
	font-weight: lighter;
	color: #FF6633;
	background-color: #E0FFB8;
	border: 2px solid #234F32;
    margin: 0px;
	padding: 2px;
    }


UL{ font-size: 13px;
	color:#283E28;
	list-style-position;
	margin: 0px 0px 0px 25px;
	padding: 0px 0px 10px 0px;
	list-style-type: square;
	line-height: 130%;		
}
LI A{font-weight: lighter;
    color:#283E28;
    }
LI A:hover{}
P{  font-size: 12px;  text-indent: 15px; 
    word-wrap: break-word;
    line-height: 120%;
    margin: 5px 5px 5px 15px;
	padding: 2px ;
    }
P A{}
P A:hover{}

/*表单设计*/
&lt;&lt;表单&gt;&gt;
/*颜色准备*/
&lt;&lt;色系&gt;&gt;
/*特殊效果*/
&lt;&lt;效果&gt;&gt;</t>
<t tx="ZoomQuiet.20051224171010.3">
TABLE { border-collapse: collapse ; font-size: 12px; color: #333333;}

FORM{
    margin: 0px;
	padding: 0px;
    }

TEXTAREA { font-family: "Arial", "Helvetica";
    font-size: 14px; font-weight: light; color: #993300; 
	background-color: transparent; 
	border-width: 1px;border-style: solid; border-color: #CCCCCC ;
	width: 100%}
SELECT{WIDTH: 100%;
	font-size: 12px; font-weight: bold;color: #E0F3E0;
	font-family: "Arial", "Helvetica", "sans-serif"; 
	background-color: #8DB48D; 
	border-width: 1px ;border-color: #CCCCCC;}
	
INPUT{ font-family: "Arial", "Helvetica";
    font-size: 14px;font-weight: light; color: #993300; 
	background-color: transparent; 
	border: 1px solid #838A9E;}
	
INPUT.btn { font-size: 13px; 
    font-weight: light; color: whitesmoke; 
	background-color: #487858; 
	border-width: 2px; 
    border-color: #E0F3E0 #679265 #333333 #CCCCCC;
	height: 20px;	
	padding:0px 1em 2px 1em;}
	
INPUT.chkrd { background-color: transparent; border: 0px}
</t>
<t tx="ZoomQuiet.20051224171010.4">
.deep0{
    color: #E0F3E0;
	background-color: #002000;
	border: 1px solid #74BADC;
}
.deep1{
    color: #E0F3E0;
    background-color: #003300;
    margin:0px 1px 1px 1px;
    }
.deep2{
    color: #E0F3E0;
    background-color: #283E28;
    }
.deep3{
    color: #E0F3E0;
    background-color: #314A31;
    }

.light0{
    color: #406040;
	background-color: #FFFFFF;
	margin:0px 1px 1px 1px;
}

.light1{
    color: #406040;
    background-color: #E0F3E0;
    }

.light2{
    color: #002000;
    background-color: #FDEACC;
    }
.light2 A
    { color: #679265;   }
.light2 A:hover
    {color: #FF6633;    }
</t>
<t tx="ZoomQuiet.20051224171010.5">
.odd  {
	font-size: 13px;
	text-align: center;
	color:#333333;
	background-color: #FDEACC;

    }
.odd A{
    font-size: 13px; text-align: center;
    color:#333333;
    background-color: #FDEACC;        
    }
.odd A:hover{color:#333333;}   

.action {
	font-size: 12px;
	color:#E6E6E6;	
}
.action A{
	font-size: 12px;
	color: #406040;
	
}
.action A:hover{
	font-size: 12px;
	color: #ffffff;
	background-color: #CC0000;
}


.icon {
	font-family: "Webdings";
	font-size: 16px;
	color:#C9E9C9;
	background-color: #99CC99;
	filter: glow(color=red,strength=5);
	margin: 0px;
	padding: 0px;
	vertical-align: baseline;
	cursor: hand;
}


.Webdings{
	font-family: "Webdings";
	
}
</t>
<t tx="ZoomQuiet.20051224181034">print H4("发表中的问卷::")

print UL("".join([str(LI(
 B(A(qdoing[i].desc.pname
     ,href="page?qpname=%s&amp;do=doing"%i.split(".")[-2])
     ## Zoomq::051220 slide show
     #,href="issue?qpname=%s&amp;do=doing"%i.split(".")[-2])
     )+             
     SUB(A("回答统计",href="stat?qp=%s"%i))
             )
            ) for i in qdoing.keys()
        ])
        ,id="qplist")
</t>
<t tx="ZoomQuiet.20051224181034.1">
print H3("已发布的问卷::")
print UL("".join([str(LI(
            B(A(qdone[i].desc.pname
                ,href="page?qpname=%s&amp;do=done"%i.split(".")[-2])
                )+
                 SUB(A("回答统计",href="stat?qp=%s"%i))
                         )
                        ) for i in qdone
                    ])
                    )</t>
<t tx="ZoomQuiet.20051224182004">[desc]
pname		= 啄木鸟问卷 之 “CPyUG常识”
desc		= 自学问卷v0.6
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 2

[ask/1]
question= CPyUG是什么意思？
a		= 中国Perl用户组
b		= 中国PHP用户组
c		= 中国Python用户组
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= CPyUG社区首页在哪里？
a		= woodpecker.org.cn
b		= python.cn
c		= 不知道……
key		= b # 正确答案

[ask/3]
question= CPyUG 的核心宗旨是什么？
a		= 组织Python项目
b		= 推广Python 语言应用
c       = 发展成员进行收费创利
f		= 不知道……
key		= b # 正确答案
</t>
<t tx="ZoomQuiet.20051224182004.1">[desc]
pname		= 啄木鸟问卷 之 “Python FAQ”
desc		= 自学问卷v0.7.3
learn   = &lt;a href='http://wiki.woodpecker.org.cn/moin/CPUG'&gt;CPyUG首页&lt;/a&gt;
# 问卷状态: 0 设计中|1 发布中|2 发布过
done		= 0

[ask/1]
question= Python 是什么东西？
a		= 是蟒蛇
b		= 是种动态脚本语言
c       = 以上都对
d		= 不知道……
key		= c # 正确答案

[ask/2]
question= Python 是面向什么的？
a		= 本质上是面向对象的
b		= 也可以面向函式的
c       = 爱面向什么都可以
d       = 以上都对
f		= 不知道……
key		= d # 正确答案

[ask/3]
question= Python最独特的语法个性是什么？
a		= 使用缩进来限定逻辑结构
b		= 创造了丰富的内置数据类型
c		= 不使用指针
d		= 不知道……
key		= a # 正确答案
</t>
<t tx="ZoomQuiet.20051224185506">##基础宣言
&lt;&lt; page declarations &gt;&gt;
## HTML 代码准备
&lt;&lt; htmlcode &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others


</t>
<t tx="ZoomQuiet.20051224185506.1">## mana.ks
# 文件名匹配模块
import os,fnmatch,glob
#页面间传递对象
import time,base64,pickle
# 文件高级对象，进行复制
import shutil
# Karrigell 提供支持模块
from HTMLTags import *
from dict4ini import DictIni
from Karrigell_QuickForm import Karrigell_QuickForm

</t>
<t tx="ZoomQuiet.20051224185506.9">conf = DictIni("questionnaire.cfg")
qpagetpl = "qpagetpl.cfg"
# 使用 Session来记忆成员信息
sess = Session()

</t>
<t tx="ZoomQuiet.20051224185506.10">def edit(**var):
    """mana.pih 重构而来
    """
    #print var
    if not hasattr(sess, 'usr'):
        sess.usr = pickle.loads(
                    base64.urlsafe_b64decode(var["obj"]))
        sess.usr["qp"] = var["qp"] 
    if "qp" in QUERY.keys():
        if QUERY["qp"]==sess.usr["qp"]:
            pass
        else:
            #说明是新问卷的编辑
            sess.usr["qp"] = QUERY["qp"]
    
    &lt;&lt; pagehead &gt;&gt;
    &lt;&lt;导航&gt;&gt;
    #print sess.usr
    #处理设计表单
    if "his" in QUERY.keys():
        #进入历史版本编辑
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"."+QUERY["his"])
    else:        
        qpage = "%s%s.cfg%s"%(conf.qpage.qpath
                    ,sess.usr["qp"]
                    ,"")
        #qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
        
    &lt;&lt;设计表单&gt;&gt;   
    
    &lt;&lt; pagefoot &gt;&gt;</t>
<t tx="ZoomQuiet.20051224185506.11">
print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('历史', href="historic")
           ,id="mana")
           
print H1("在线编辑问卷设计文案，自动解析为模拟问卷")
</t>
<t tx="ZoomQuiet.20051224185506.12">#print open(qpage,"r").read()

dict = DictIni(qpage)
p = Karrigell_QuickForm('fm_qdesign'
                        ,'POST'
                        ,"page"
                        ,"问卷设计")
p.addCntTextArea('qpage'
              ,''
              ,"%s"%open(qpage,"r").read()
              ,'30','100')
p.addGroup(["submit","btn_submit","提交","btn"])
p.display()</t>
<t tx="ZoomQuiet.20051224185506.13">
print _htmhead("邮件技术部·项目管理·自学问卷管理 - Powered by Karrigell")





</t>
<t tx="ZoomQuiet.20051224185506.14">
print htmfoot



</t>
<t tx="ZoomQuiet.20051224185506.18">def historic(**var):
    #print var
    
    &lt;&lt; pagehead &gt;&gt;
    
    #print sess.usr
    #处理设计表单
    #qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
    @others   
    
    &lt;&lt; pagefoot &gt;&gt;

</t>
<t tx="ZoomQuiet.20051224185506.19">#allq = os.listdir(conf.qpage.qpath)
#qnow = fnmatch.fnmatch(allq, '*.cfg')

#qnow = [fnmatch.filter(f, '*.cfg') for f in os.listdir(conf.qpage.qpath)]
qnow = fnmatch.filter(os.listdir(conf.qpage.qpath)
                       , '%s.cfg.*'%sess.usr["qp"])

print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('返回编辑', href="edit")
           ,id="mana")
print H3("问卷过往版本:")
print "&lt;UL&gt;"
qnow.reverse()
for l in qnow:
    s = l.split(".")
    print LI(A("""%s 
             &lt;sup&gt;%s/%s/%s %s:%s:%s 版本&lt;/sup&gt;
             &lt;sub&gt;大小:%sb&lt;/sub&gt;"""%(s[0]
             ,s[-1][:2]
             ,s[-1][2:4]
             ,s[-1][4:6]
             ,s[-1][6:8]
             ,s[-1][8:10]
             ,s[-1][10:]
             ,os.stat(conf.qpage.qpath+l)[-4]
             ),href="edit?his=%s"%s[-1]
                )
             )
    #print dir()
print "&lt;/UL&gt;"
    </t>
<t tx="ZoomQuiet.20051224185506.20">def page(**args):
    """qpage.pih 重构而来
    """
    &lt;&lt; pagehead &gt;&gt;
    #print QUERY["qpage"]
    #qcfg = DictIni(conf.qpage.qpath+QUERY["qp"]+".cfg")
    &lt;&lt;导航&gt;&gt;
    
    &lt;&lt;问卷展示&gt;&gt;
    
    
    &lt;&lt; pagefoot &gt;&gt;


</t>
<t tx="ZoomQuiet.20051224185506.22">qpage = conf.qpage.qpath+sess.usr["qp"]+".cfg"
# 先复制一下子
shutil.copy2(qpage,qpage+".%s"%time.strftime("%y%m%d%H%M%S"
                                             , time.localtime())
             )
# 再写入文件
open(qpage,"w").write(QUERY["qpage"])    
#qcfg = DictIni(QUERY["qpage"])
# 只能从文件对象理解！！bug!!!
qcfg = DictIni(qpage)
## 好象有(value=str对象)的使用方式…………

print _qshow(qcfg,"#")
</t>
<t tx="ZoomQuiet.20051224185506.23">#print sess.usr
# validation-framework 的对应支持
#print A("",id="errorDiv")
#print DIV("",id="errorMessage")

print SPAN(A('退出', href="../index.ks/logout")
           ,id="mana")
print SPAN(A('首页', href="../index.ks/index")
           ,id="mana")
print SPAN(A('历史', href="historic")
           ,id="mana")
print SPAN(A('返回设计', href="edit")
           ,id="mana")
              

</t>
<t tx="ZoomQuiet.20051224185506.24">def _qshow(dict,aim):
    """将dict 内容输出为回答问卷
    """
    exp = ""
    p = Karrigell_QuickForm('fm_kq','POST',aim,dict.desc.desc)
    #p.addElement('submit','btn_submit',{'value':'退出'})   
    
    exp += "&lt;h1&gt;%s&lt;/h1&gt;"%(dict.desc.pname)
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    p.addElement('node','&lt;ul&gt;','')
    # 深入数据
    
    @others
    
    #p.addJSValidation()
    #p.saveJSRule("../js/validation-config.xml")
    
    p.addElement('node','&lt;/ul&gt;','')
    
    #p.addGroup(["submit","btn_submit","提交","btn"]
    #           ,["reset","btn_reset","重写","btn"])
    exp += p.export()
    exp += "&lt;h6&gt;自学资料: %s&lt;/h6&gt;"%(dict.desc.learn)
    #exp += "&lt;p&gt;返回%s&lt;/p&gt;"%dict.desc.learn
    return exp
    
    
    
    
    
    
    
</t>
<t tx="ZoomQuiet.20051224185506.25"># 要根据平均值原则,生成不同的radio列表
"""
p.addRadioList('cr_ask1'
               ,"问题之一"
               ,{'a':'Letter A'
                 ,'b':'Letter B'
                 ,'c':'Letter C'})
"""
qli = {}

k = [int(i) for i in dict.ask.keys()]
k.sort()
for i in k:
    ask = dict.ask[str(i)]
    qk = [j for j in ask.keys()]
    qk.sort()
    #print qk
    for q in qk:
        if 1==len(q):
            #exp +="&lt;li&gt;%s"%ask[q]
            qli[q] = ask[q]
        else:
            pass
    question = ask["question"]+"&lt;sup&gt;答案::%s&lt;/sup&gt;"%ask["key"]
    #print qli.items()
    #051219 fixed rurn of dict
    liq = [q for q in qli.keys()]
    liq.sort()
    #print liq
    
    &lt;&lt;单选列表&gt;&gt;
    
    p.addJSRule("cr_ask%s"%i,"问题%s "%i)




</t>
<t tx="ZoomQuiet.20051224185506.26">      
if i%2 == 0:        
    p.addRadioLi("cr_ask%s"%i
           ,question
           ,qli
           ,liq
           ,"even")
else:        
    p.addRadioLi("cr_ask%s"%i
           ,question
           ,qli
           ,liq)

#print qli.items()
"""
if 0==len(ctrl.keys()):        
    if i%2 == 0:        
        p.addRadioList("cr_ask%s"%i
               ,question
               ,qli
               ,"even")
    else:        
        p.addRadioList("cr_ask%s"%i
               ,question
               ,qli)
else:    
    if i%2 == 0:        
        #p.addRadioList("cr_ask%s"%i
        p.addVarRadioList("cr_ask%s"%i                        
               ,question
               ,qli
               ,ctrl
               ,"even")
    else:        
        #p.addRadioList("cr_ask%s"%i
        p.addVarRadioList("cr_ask%s"%i
               ,question
               ,qli
               ,ctrl)
"""

</t>
<t tx="ZoomQuiet.20051224185506.27">def _ctrl(dict):
    """将平均分计算模式转换为统一控制对象
    [grade]
    # key|point
    ctrl = point
    point=a-&gt;5;b-&gt;4;c-&gt;3;d-&gt;2;e-&gt;1
    """
    ctrl={}
    if "point" == dict.ctrl:
        for k in dict.point.split(";"):
           s=k.split("-&gt;")
           ctrl[s[0]]=s[1]
    else:
        pass
    #print len(ctrl.keys())
    return ctrl







</t>
<t tx="ZoomQuiet.20051225170002">## page was renamed from zhArticleTemplate
##language:zh
#pragma section-numbers on
::-- ZoomQuiet [[[DateTime(2005-12-11T04:51:41Z)]]]
[[TableOfContents]]

= K6日:统计！mm的 =
'''快速扩展一个页面适应所有情况！'''
 * 此mm 非彼 mm 哪! 乃FreeMind 思维图谱文件 `.mm`
== FreeMind的另类使用 ==
'''要想进行问卷回答的统计,首先要有手段知道现在组织内成员信息,以便对应统计'''
 * 为什么想到了 FreeMind? 
  * 以往使用DB,怎么样都要立成员表和组织表然后还有这那儿的对应选择关系什么的
  * 还是 FreeMind 直观,操作也非常快捷,复制,移动太爽直了!
  * 而且是XML的数据文件!
 * 曾经依照提供的`freemind.xsl`+`freemind.mm` 输出了加个xml头说明的自定 mm 文件
 
"attachment:snap-KwDay60.png

 * 哈哈哈!大致知道 FreeMind 的数据格式:
     1. 所有节点是统一的 `&lt;node&gt;` 
     1. 属性和值,全部是UTF8编码的字串
 * 所以,只要有简单的约定,就可以作为 Xpath 的过滤参数来理解真正的数据意义了
 * 以上的组织成员信息就是有个小小的约定:
     1. 一级节点都是部门描述,中文
     1. 二级节点是属性描述:
         1. dept 说明部门的整体信息
         1. staff 汇集成员信息,类似部门的节点组织
         1. total 成员总数
"attachment:snap-KwDay6mm.png
 * 这样就令 XSLT 有基础原则可以进行数据组织了
 * 同理,也可以让Python 快速理解了...
 

== ElementTree,当然的！ ==
'''处理XML Python 有丰富的模块,你知道其中 ElementTree 最方便支持部分Xpath 的搜索'''
 * 其实从使用方面也是 ElementTree 最PythyonIc 了
 * `deptorg.py` mm专用理解脚本中:{{{#!python
from elementtree import ElementTree
print open(xmlFileName,"r").read()
tree = ElementTree.parse(xmlFileName)
elem = tree.getroot()
dept = elem.findall("node/node")
for d in dept:
    print d
    print LI(d.attrib["TEXT"].encode("utf8"))

}}}


  1. 引入 ElementTree
  1. 处理XML为 ElementTree 对象
  1. 找到根
  1. 从根找到所有第二级的`&lt;node&gt;`节点对象列表
  1. 已经可以通过 `.attrib["TEXT"]` 来获得内容了!

"attachment:snap-KwDay61.png
 * 就使用 `findall()` 和 `attrib["TEXT"]` 便可以判定/获取足够的信息,输出成以上的页面从 mm 中!!!
 * 哈哈哈!具体的就看代码吧……
 
== Karrigell 的对象混合 ==
'''但是！怎么样可以使用这种mm 的理解成果？'''
 * 麻烦在于 `ElementTree.parse(xml文件)` 要可以直接访问的文件名
 * 你不想在程序中包含太多系统的路径信息
  1. 反复尝试，发现从相对路径偏移还是从URL 来访问都不稳定，也麻烦
  1. 最简单的就是理解脚本和mm 文件在一起
 * 问题就来了，各种事务页面如何快捷直观的使用理解成果？
  * 自然的，就想到了 `Include()` KarriGell 中到处都可以进行的基础操作 -- '''包含'''
{{{Include("../xslmm/deptorg.py") 
            ^
            |
            +- 因为是从index.ks/login 之类下级行动函式页面访问}}}
            
  * 有MoinMoin 的经验，你就想这样一来应该能将字典对象混人当前名称空间??
   * 在专门mm 理解脚本-- '''deptorg.py''' 中 `print dir()`

"attachment:snap-KwDay62.png

   * 不会这么简单吧！你发现了 `index.ks` 事务页面中才有的对象 '''sess''' —— 对话容器
   * 尝试的赋值一下子？{{{
#deptorg.py 中最后..
sess.usr["dept"]=deptall
sess.usr["deptree"]=deptree
}}}
   * KAO！ 真的好用！ 在`index.ks/stat` 统计页面，包含 `deptorg.py` mm专用理解脚本 再打印 '''sess.usr''' 看一下子，唉呀呀！真的有了！

"attachment:snap-KwDay63.png
== 回答验证 ==
'''进行回答统计前，有一个先决重构'''
 * 有效的答案是全部问题都回答了，不然的话统计很麻烦的说……
 * 但是曾经令你激动的 '''[http://www.amowa.net/jsvalidation/ JavaScript Validation Framework]''' 国人作品…… 忽然间再也不好用了？！
  * 不得以，仔细看了一下子代码，才发现，有好几点是不能忍的:
      1. 所有表单都要读取同一配置XML，不论访问者想回答哪个问卷，导致动态生成配置文件时有争用问题
      1. 同样的原因，导致每次读取配置文件，可能要读入相对无用的几倍信息(别的表单的检验策略也被迫读取了)
      1. {{{		...
            try {
			var prefix = ["MSXML2", "MSXML", "Microsoft", "MSXML3"];
			for (var i = 0; i &lt; prefix.length; i++) {
				//return new ActiveXObject(prefix[i] + ".DomDocument"); 
				var obj = new ActiveXObject(prefix[i] + ".DomDocument"); 
				if (obj == null || typeof(obj) == 'undefined') {
					continue;
				} else {
					return obj;
				}
			}
		} catch (e) {
			//^_^
			throw new Error("My God, What version of IE are you using? IE5&amp;+ is requiered.");
		}
}}}咔...'''BS'''!居然不能支持 FireFox 的,怎么以前成功的是灵异现象?!

 * 怕了!直接使用服务端的判定吧!
 * 创立 `bye()` 判别处理页面 并在失败时输出{{{
&lt;input type="button"
    value="点击返回重新回答"
    class="btn"
    onClick="history.back();"/&gt;
    }}} 这样的JS 行动按钮, 快捷完成想要的完全问答检验处理
    
"attachment:snap-KwDay6bye.png
 * 好了基本可用了,只是这样一来,加重了服务端的压力,也难以进行页面的友好提醒...
  * 嗯嗯,自古忠孝难全,先这么着,以后再想了....
 
== 统计汇报 ==
 * 接下来就简单了:
     1. 所有人的回答输出为简单的文件，比如说： 每个题目的回答为一行
     1. 套用问卷列表的技巧，可以搜索出对应问卷的所有回答文件
     1. 批量读到列表中，和成员信息字典匹配一下子，就可以人性化的输出了
{{{#!python
ali = fnmatch.filter(os.listdir(conf.qpage.apath), '%s.*.aq'%qpname)
aed = []
for f in ali:
    a = open(conf.qpage.apath+f,"r").read()
    aed.append(f.split(".")[-2])
done = []
unknow = []
for a in aed:
    if a in sess.usr["dept"].keys():
        done.append(a)
    else:
        unknow.append(a)
}}}
 * 先要预备处理一下子，过滤出不知道的人
  1. 明显的你约定回答文件的命名格式是 `问卷名.成员帐号名.aq`
  1. 所以可以根据文件名快速整理出名单列表 `aed`
  1. 然后，就有了已知合理成员回答列表 `done` 和 `unknow` 未知成员列表

attachment:snap-KwDay6stat.png 

 * 最后就是个显示问题了:
     1. 要有回答时间的信息?{{{
fn = conf.qpage.apath+'%s.%s.aq'%(qpname,a)
...
time.strftime("%y/%m/%d %H:%M:%S",time.localtime(os.path.getmtime(fn)
}}}
     1. 要有 百分制 的成绩?{{{#!python
def _grade(right,answer):
    """根据问卷答案自动计算分数
    """
    grade = 0
    for i in range(0,len(right)):
        if right[i]==answer[i]:
            grade +=1
        else:
            pass
    return 100*(float(grade)/len(right))
}}}
     1. 唉呀呀??为什么不许怎么回答都是0分?
      * 发现问题..字典的无序和回答的有序!间的矛盾
     {{{
print crtqp.ask.keys()
crtright = [crtqp.ask[i]["key"] for i in crtqp.ask.keys()]
print crtright
}}}
"attachment:snap-KwDay6dict.png 

      * 知道症结就好修改了{{{#!python
#字典排序技巧
ak = crtqp.ask.keys()
ak.sort()
print ak
crtright = [crtqp.ask[i]["key"] for i in ak]
print crtright
}}}

"attachment:snap-KwDay6sort.png 

     1. 要有总平均成绩?{{{
#使用stat 列表收集所有有效成绩
stat = []
...
stat.append(_grade(crtright,open(fn,"r").read().split()))
...
sum(stat)/len(stat)) 就出来了
reduce(lambda a,b:a+b, stat)/len(stat) 更加cool
}}}
 * 哈哈哈！！什么也难不住你！
"attachment:snap-KwDay6done.png 


== 事务测试 ==
'''不用想什么黑/白盒；边界，点击就成！'''
 * 好了！所有功能都实现了，你现在非常成就感的一路点击一下子
 * 感觉哪里不好，随手就修正它！
 * 溜个几回，功能测试基本也就了了…………
     
== 实例下载 ==
使用 [wiki:self/AllAboutSubversion SVN 下载]:
    [wiki:selfsvn/zqlib/trunk/zqlib/tangle/zoomq/Karrigell/obpKWD/KwDay6/ KwDay6实例]


== 讨论 ==
[[Include(/Discuss)]]


----
返回 KarrigellWebDev -- 快速体验K开发
</t>
<t tx="ZoomQuiet.20051225171032"># 尝试使用专门脚本来解析理解mm 文件
@path xslmm

</t>
<t tx="ZoomQuiet.20051225171032.37"></t>
<t tx="ZoomQuiet.20051225171032.38">&lt;&lt;xsl head&gt;&gt;

&lt;&lt;xslmm desc&gt;&gt;
  &lt;xsl:template match="/"&gt;
    &lt;html&gt;
      &lt;&lt;xslmm head&gt;&gt;
      &lt;body&gt;
        &lt;!-- choose the first nodes text again as the headline --&gt;
        &lt;&lt;xslmm H1&gt;&gt;
        &lt;xsl:apply-templates /&gt;
      &lt;/body&gt;
    &lt;/html&gt;
  &lt;/xsl:template&gt;
  &lt;&lt;xslmm template&gt;&gt;
&lt;/xsl:stylesheet&gt;
</t>
<t tx="ZoomQuiet.20051225171032.39">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0"&gt;</t>
<t tx="ZoomQuiet.20051225171032.40">
  &lt;!--
       File:        freemind.xsl
       Version:     0.1
       Description: A XSLT stylesheet to transform mindmap files created with FreeMind (http://freemind.sf.net)
                    into HTML files. The transformation will keep the structure of the files, clouds (with it's colors),
                    icons, internal and external links and the ability to collapse whole subtrees of the document (with
                    JavaScript enabled).
                    The results of the transformation were tested and found to be working in the following browsers:
                    -Internet Explorer 6
                    -Mozilla Firefox 0.9 (should be working with nearly any browser using the Geko engine)
                    -Konqueror
                    -Opera 7
                    Other browsers were not tested, but you should have a good chance of gettting things to work
                    with them.
       Usage:       Use any XSLT-Processor (development was done using xsltproc under Linux) to apply this stylesheet
                    to the FreeMind-file. Copy the result and all the PNG-Files inside the script directory
                    (including the icons-subdir) into a directory of it's own (e.g. on a webserver).
                    Open the HTML-file with a webbrowser.
       Author:      Markus Brueckner &lt;freemind-xsl@slash-me.net&gt;
       License:     BSD license without advertising clause. (see http://www.opensource.org/licenses/bsd-license.php
                     for further details)
  --&gt;

  &lt;xsl:output method="html" doctype-public="-//W3C//DTD HTML 4.01 Strict//EN" 
    doctype-system="http://www.w3.org/TR/html4/strict.dtd"/&gt;
</t>
<t tx="ZoomQuiet.20051225171032.41">&lt;head&gt;
&lt;!-- look if there is any node inside the map (there should never be none, but who knows?) 
     and take its text as the title --&gt;
&lt;xsl:choose&gt;
  &lt;xsl:when test="/map/node"&gt;
    &lt;title&gt;&lt;xsl:value-of select="/map/node/@TEXT" /&gt;&lt;/title&gt;
  &lt;/xsl:when&gt;
  &lt;xsl:otherwise&gt;
    &lt;title&gt;FreeMind2HTML Mindmap&lt;/title&gt;
  &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;

&lt;!-- Stylesheet, generator and some JavaScript for the collapsing of the trees 
&lt;link rel="stylesheet" type="text/css" href="freemind.css" /&gt;
--&gt;
&lt;style&gt;
&lt;&lt;freemind&gt;&gt;
&lt;/style&gt;


&lt;meta name="generator" content="FreeMind-XSL Stylesheet (see: http://freemind-xsl.dev.slash-me.net/ for details)" /&gt;

&lt;script type="text/javascript"&gt;
  &lt;![CDATA[
  &lt;!--
       function toggle(id)
       {
           div_el = document.getElementById(id);
           img_el = document.getElementById('img'+id);
           if (div_el.style.display != 'none')
           {
              div_el.style.display='none';
              img_el.src = 'show.png';
           }
           else
           {
              div_el.style.display='block';
              img_el.src = 'hide.png';
           };
       };
   --&gt;
  ]]&gt;
&lt;/script&gt;
&lt;/head&gt;
</t>
<t tx="ZoomQuiet.20051225171032.42">
BODY{
    font-size: 92%; color: #333333; 
    text-indent: 1em;  
    margin: 0px;  padding: 0px;
    font-family: Tahoma,SimSun;
    background-color: whitesmoke;
}
/*
    border-collapse: collapse ;*/
H1{ margin: 0px;  padding: 0px;
}
TABLE { 
    width: 100%;
    font-size: 96%; 
    color: #444444;}
    
TH { 
    background-color: #777777;
    color: #efefef;}

TABLE#dept{
    background-color: #efefef;
    }
TABLE#staff TD{
    font-size: 94%;
    background-color: #ffffff;
    }

div.node { 
  padding-bottom:     1ex;
  padding-left:       2em;
}

div.cloud { 
  padding-bottom:     1ex;
  padding-left:       2em;
  background-color:   #C0C0FF;
  border-width:       2px;
  border-style:       solid;
  border-color:       #A0A0FF;
}

div.content { 
  border-width:       1px;
  border-style:   dashed;
  border-color:       #C0C0C0;
}

img.hideshow { 
  padding-right: 1ex;
}

img.ilink { 
  border-width: 0px;
  padding-left: 1ex;
}
</t>
<t tx="ZoomQuiet.20051225171032.43">&lt;h1&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="/map/node"&gt;
      &lt;xsl:value-of select="/map/node/@TEXT" /&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      FreeMind2HTML Mindmap
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/h1&gt;
</t>
<t tx="ZoomQuiet.20051225171032.44">&lt;!-- the template to output for each node --&gt;
&lt;xsl:template match="node"&gt;
&lt;div&gt;
  &lt;!-- generate a unique ID that can be used to reference this node e.g. from the JavaScript --&gt;
  &lt;xsl:variable name="contentID"&gt;
      &lt;xsl:value-of select="generate-id()"/&gt;
  &lt;/xsl:variable&gt;

  &lt;!-- check whether this node is a cloud... --&gt;
  &lt;&lt; node cloud &gt;&gt;  
  &lt;!-- check whether this node has any child nodes... --&gt;
  &lt;&lt; node child &gt;&gt;
  &lt;!-- when there are icons for this node then output the according &lt;img&gt;-tags --&gt;
  &lt;&lt; node icon &gt;&gt;
  &lt;!-- check whether this node has a link-ID (for external URLs) --&gt;
  &lt;&lt; node url &gt;&gt;
  &lt;!-- check if this node has an ID (for the document internal links) --&gt;
  &lt;&lt; node doclink &gt;&gt;
  &lt;!-- if there are arrowlinks inside this node (i.e. this node is connected to another node
       in FreeMind using an arrow), then create a document internal link --&gt;
  &lt;&lt; node arrowlink &gt;&gt;
  &lt;!-- the content div. This div contains all subnodes of this node. It carries the unique ID
       created in the beginning (which is used to hide this div when necessary). The content node
       is only created if there are any subnodes --&gt;
  &lt;&lt; loop nodes &gt;&gt;
  
&lt;/div&gt;
&lt;/xsl:template&gt;

</t>
<t tx="ZoomQuiet.20051225171032.45">&lt;xsl:if test="node"&gt;
&lt;div class="content"&gt;
&lt;xsl:attribute name="id"&gt;
  &lt;xsl:value-of select="$contentID" /&gt;
&lt;/xsl:attribute&gt;

&lt;xsl:choose&gt;
    &lt;xsl:when test="@TEXT[.='DeptOrgVersion']"&gt; 
        &lt;&lt; loop DeptOrgVersion &gt;&gt;
    &lt;/xsl:when&gt;

    &lt;xsl:otherwise&gt;    

&lt;!-- 针对部门组织进行专门解析 --&gt;
&lt;xsl:choose&gt;
    &lt;xsl:when test="node/@TEXT[.='dept'] or node/@TEXT[.='staff']"&gt; 
        &lt;&lt; loop organise &gt;&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;    
        &lt;xsl:apply-templates/&gt;    
    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;

    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/div&gt;       

&lt;/xsl:if&gt;</t>
<t tx="ZoomQuiet.20051225171032.46">&lt;table border="0" id="dept"&gt;

&lt;xsl:for-each select="node"&gt;
&lt;xsl:choose&gt;
    &lt;xsl:when test="@TEXT[.='dept']"&gt; 
    &lt;tr&gt;
    &lt;th&gt;CVS&lt;/th&gt;
    &lt;td&gt;
        &lt;&lt; loop dept &gt;&gt;
    &lt;/td&gt;
    &lt;/tr&gt;    
    &lt;/xsl:when&gt;
    &lt;xsl:when test="@TEXT[.='staff']"&gt; 
    &lt;tr&gt;
    &lt;th&gt;staffs&lt;/th&gt;
    &lt;td&gt;
        &lt;&lt; loop staff &gt;&gt;
    &lt;/td&gt;
    &lt;/tr&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:when test="@TEXT[.='total']"&gt; 
&lt;!--成员人数--&gt;
    &lt;/xsl:when&gt;

    &lt;xsl:otherwise&gt;    
        &lt;xsl:value-of select="@TEXT" /&gt;
    &lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
&lt;/xsl:for-each&gt;

&lt;/table&gt;</t>
<t tx="ZoomQuiet.20051225171032.47">
&lt;xsl:for-each select="node"&gt;
    &lt;xsl:if test="@TEXT[.='name']"&gt;
        &lt;&lt; item cnt &gt;&gt;
    &lt;/xsl:if&gt;
    &lt;xsl:if test="@TEXT[.='cvs']"&gt;
        &lt;&lt; item cnt &gt;&gt;
    &lt;/xsl:if&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171032.48">&lt;xsl:for-each select="node"&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
&lt;/xsl:for-each&gt;</t>
<t tx="ZoomQuiet.20051225171032.49">&lt;table border="0" id="staff"&gt;
&lt;xsl:for-each select="node"&gt;
&lt;tr&gt;&lt;td&gt;    
&lt;!-- 顺序 --&gt;
&lt;xsl:value-of select="position()"/&gt;
        &lt;img&gt;
        &lt;xsl:attribute name="src"&gt;
        id/&lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;.gif&lt;/xsl:attribute&gt;
    &lt;/img&gt;


    
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='level']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;a&gt;&lt;xsl:attribute name="href"&gt;
        mailto:&lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;@staff.sina.com.cn
        &lt;/xsl:attribute&gt;
    &lt;xsl:value-of select="node[@TEXT='mail']/node/@TEXT" /&gt;@staff.sina.com.cn
    &lt;/a&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='tel']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='mobile']/node/@TEXT" /&gt;
    &lt;/td&gt;&lt;td&gt;
    &lt;xsl:value-of select="node[@TEXT='bd']/node/@TEXT" /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/xsl:for-each&gt;
&lt;/table&gt;

</t>
<t tx="ZoomQuiet.20051225171032.50">&lt;b&gt;部门组织结构信息图谱 维护记录:&lt;/b&gt;
&lt;UL&gt;

&lt;xsl:for-each select="node"&gt;
&lt;li&gt;&lt;xsl:value-of select="@TEXT" /&gt;&lt;/li&gt;
&lt;/xsl:for-each&gt;

&lt;/UL&gt;</t>
<t tx="ZoomQuiet.20051225171032.51">&lt;xsl:choose&gt;
&lt;xsl:when test="cloud"&gt;
  &lt;!-- ...if yes, check whether it has a special color... --&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="cloud/@COLOR"&gt;
      &lt;xsl:attribute name="class"&gt;cloud&lt;/xsl:attribute&gt;
      &lt;xsl:attribute name="style"&gt;background-color: &lt;xsl:value-of select="cloud/@COLOR" /&gt;&lt;/xsl:attribute&gt;
    &lt;/xsl:when&gt;
    &lt;!-- no? Then choose some default color --&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:attribute name="class"&gt;cloud&lt;/xsl:attribute&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
  &lt;xsl:attribute name="class"&gt;node&lt;/xsl:attribute&gt;
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
</t>
<t tx="ZoomQuiet.20051225171032.52">&lt;xsl:choose&gt;
&lt;xsl:when test="node"&gt;
  &lt;!-- ...yes? Then put the "hide" button in front of the text... --&gt;
  &lt;img src="hide.png" class="hideshow" alt="hide"&gt;
    &lt;xsl:attribute name="onClick"&gt;&lt;![CDATA[toggle("]]&gt;&lt;xsl:value-of select="$contentID" /&gt;&lt;![CDATA[")]]&gt;&lt;/xsl:attribute&gt;
    &lt;xsl:attribute name="id"&gt;img&lt;xsl:value-of select="$contentID" /&gt;&lt;/xsl:attribute&gt;
  &lt;/img&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
  &lt;!-- ...no? Then output the empty leaf icon --&gt;
  &lt;img src="leaf.png" class="hideshow" alt="leaf" /&gt;
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;
</t>
<t tx="ZoomQuiet.20051225171032.53">
&lt;xsl:for-each select="icon"&gt;
&lt;img&gt;
  &lt;xsl:attribute name="src"&gt;icons/&lt;xsl:value-of select="@BUILTIN" /&gt;.png&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="alt"&gt;&lt;xsl:value-of select="@BUILTIN" /&gt;&lt;/xsl:attribute&gt;
&lt;/img&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171032.54">&lt;xsl:choose&gt;
&lt;xsl:when test="@LINK"&gt;
  &lt;a&gt;
    &lt;xsl:attribute name="href"&gt;
      &lt;xsl:value-of select="@LINK" /&gt;
    &lt;/xsl:attribute&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
  &lt;/a&gt;
&lt;/xsl:when&gt;
&lt;xsl:otherwise&gt;
    &lt;xsl:value-of select="@TEXT" /&gt;
&lt;!--Zoomq::050830 add 总人数 --&gt;
    &lt;xsl:for-each select="node"&gt;
    &lt;xsl:choose&gt;
        &lt;xsl:when test="@TEXT[.='total']"&gt; 
            (members: &lt;xsl:value-of select="node/@TEXT" /&gt; )
        &lt;/xsl:when&gt;
        &lt;xsl:otherwise&gt;    
        &lt;/xsl:otherwise&gt;
    &lt;/xsl:choose&gt;
    &lt;/xsl:for-each&gt;
    
&lt;/xsl:otherwise&gt;
&lt;/xsl:choose&gt;</t>
<t tx="ZoomQuiet.20051225171032.55">
&lt;xsl:if test="@ID"&gt;
&lt;!-- note: as FreeMind sometimes prepends the IDs with an underscore which is not valid
           as the first character in an HTML id, we surround the ID with FM&lt;ID&gt;FM --&gt;
&lt;a&gt;
  &lt;xsl:attribute name="id"&gt;FM&lt;xsl:value-of select="@ID"/&gt;FM&lt;/xsl:attribute&gt;
&lt;/a&gt;
&lt;/xsl:if&gt;
</t>
<t tx="ZoomQuiet.20051225171032.56">
&lt;xsl:for-each select="arrowlink"&gt;
&lt;a&gt;
  &lt;xsl:attribute name="href"&gt;#FM&lt;xsl:value-of select="@DESTINATION" /&gt;FM&lt;/xsl:attribute&gt;
  &lt;img src="ilink.png" alt="Internal Link" class="ilink" /&gt;
&lt;/a&gt;
&lt;/xsl:for-each&gt;
</t>
<t tx="ZoomQuiet.20051225171511">BODY{
    font-size: 92%; color: #333333; 
    text-indent: 1em;  
    margin: 0px;  padding: 0px;
    font-family: Tahoma,SimSun;
    background-color: whitesmoke;
}
/*
    border-collapse: collapse ;*/
H1{ margin: 0px;  padding: 0px;
}
TABLE { 
    width: 100%;
    font-size: 96%; 
    color: #444444;}
    
TH { 
    background-color: #777777;
    color: #efefef;}

TABLE#dept{
    background-color: #efefef;
    }
TABLE#staff TD{
    font-size: 94%;
    background-color: #ffffff;
    }

div.node { 
  padding-bottom:     1ex;
  padding-left:       2em;
}

div.cloud { 
  padding-bottom:     1ex;
  padding-left:       2em;
  background-color:   #C0C0FF;
  border-width:       2px;
  border-style:       solid;
  border-color:       #A0A0FF;
}

div.content { 
  border-width:       1px;
  border-style:   dashed;
  border-color:       #C0C0C0;
}

img.hideshow { 
  padding-right: 1ex;
}

img.ilink { 
  border-width: 0px;
  padding-left: 1ex;
}</t>
<t tx="ZoomQuiet.20051225173430">@ $Id: obpKwd6.leo 325 2005-12-30 04:23:49Z  $
deptorg.py 快捷mm XML 理解处理
@c

&lt;&lt; page declarations &gt;&gt;

&lt;&lt;ini&gt;&gt;

@others

&lt;&lt; try &gt;&gt;

</t>
<t tx="ZoomQuiet.20051225173430.1">#!/usr/bin/env python
# coding:utf-8

import sys,os,string,re
#import time,datetime
#from elementtree.ElementTree import *
from elementtree import ElementTree
from HTMLTags import *
from dict4ini import DictIni

</t>
<t tx="ZoomQuiet.20051225173430.2">orgxml		= "deptorg.xml"


</t>
<t tx="ZoomQuiet.20051225173430.3">def listDeptStaff(elem):
    """列选分部成员节点
    """
    staffdict = {}
    for e in elem:
        if "staff" == e.attrib["TEXT"].encode("utf8"):
            #print e.attrib["TEXT"].encode("utf8")
            &lt;&lt;AllStaff&gt;&gt;            
        else:
            pass
    #print staffdict
    return staffdict

</t>
<t tx="ZoomQuiet.20051225173430.4">staff = e.findall("./node")
for s in staff:
    name = s.attrib["TEXT"].encode("utf8")     
    #print name
    mem = getStaffUser(s)
    #print "".join([mem[i] for i in mem.keys()])
    for k in mem.keys():
        if "mail" == k:
            #print mem[k]
            staffdict[mem[k]] = name
        else:
            pass
    
    
</t>
<t tx="ZoomQuiet.20051225173430.5">def getStaffUser(elem):
    """列选成员所有信息
    """
    user = {}
    usr = elem.findall("./node")
    for u in usr:
        key =u.attrib["TEXT"]
        user[key]=u.find('./node').attrib["TEXT"].encode("utf8")       
    #print user[user.keys()[1]]
    
    return user

</t>
<t tx="ZoomQuiet.20051225173430.6">#通告包含成功
#print open(orgxml,"r").read()
print HR()
tree = ElementTree.parse(orgxml)
elem = tree.getroot()
#print elem
dept = elem.findall("node/node")

deptall = {}
deptree = []
for d in dept:
    if "DeptOrgVersion" == d.attrib["TEXT"]:
        pass
    else:
        #print LI(d.attrib["TEXT"].encode("utf8"))
        staff = d.findall("./node")
        staffdict=listDeptStaff(staff)
        deptall.update(staffdict)
        deptree.append({d.attrib["TEXT"]:staffdict})

"""将XML 处理结果通过 sessoin 对象传递回引用页面！
"""
sess.usr["dept"]=deptall
sess.usr["deptree"]=deptree

#print dir()
</t>
<t tx="ZoomQuiet.20051225180959">
def stat(**args):
    """平均成绩快速统计
    """
    &lt;&lt; pagehead &gt;&gt;  
    print SPAN(A('退 出', href="logout")
               ,id="mana")
    print SPAN(A('首 页', href="index")
               ,id="mana")

    print "&lt;DIV id='cntarea'&gt;"
    @others
    print "&lt;/DIV&gt;"
    &lt;&lt; pagefoot &gt;&gt;

    </t>
<t tx="ZoomQuiet.20051225180959.2">#print sess.usr
crtqp = ""
qpname = ""
#print QUERY
if "qp" in QUERY.keys():
    #print "无登录？"
    crtqp = conf.qpage.qpath+QUERY["qp"]
    qpname = QUERY["qp"].split(".")[0]
else:
    crtqp = conf.qpage.qpath+sess.usr["qp"]+".cfg"
    qpname = sess.usr["qp"]

# 准备好正确答案
crtqp = DictIni(crtqp)
# 发现问题..字典的无序和回答的有序!
#print crtqp.ask.keys()
# 字典排序技巧
ak = crtqp.ask.keys()
ak.sort()
#print ak
crtright = [crtqp.ask[i]["key"] for i in ak]
#print crtright

# 包含mm 处理脚本,以引入组织成员信息
Include("../xslmm/deptorg.py")    

</t>
<t tx="ZoomQuiet.20051225180959.3">ali = fnmatch.filter(os.listdir(conf.qpage.apath)
                       , '%s.*.aq'%qpname)
aed = []
for f in ali:
    a = open(conf.qpage.apath+f
               ,"r").read()
    aed.append(f.split(".")[-2])

done = []       # 有效回答容器
unknow = []     # 未知成员容器
stat = []       # 总均成绩容器
for a in aed:
    if a in sess.usr["dept"].keys():
        done.append(a)
    else:
        unknow.append(a)
print H4("部门成员问答统计:&lt;sup&gt;以帐号字母顺序排列&lt;/sup&gt;")
print "&lt;ul id='stat'&gt;"

&lt;&lt;成员回答&gt;&gt;

print "&lt;/ul&gt;"

&lt;&lt;总计&gt;&gt;

&lt;&lt;未知成员&gt;&gt;

</t>
<t tx="ZoomQuiet.20051225180959.4">mem = sess.usr["dept"].keys()
mem.sort()
#print mem
for a in mem:
    if a in done:
        fn = conf.qpage.apath+'%s.%s.aq'%(qpname,a)
        print LI(B(sess.usr["dept"][a])+
                 I(" %s 已答！ 分数::%s"%(
                            time.strftime("%y/%m/%d %H:%M:%S"
                                ,time.localtime(os.path.getmtime(fn))
                                )
                            ,"%.2f"%(_grade(crtright
                                    ,open(fn,"r").read().split())
                                    )
                            )
                    )
                )
        stat.append(_grade(crtright
                           ,open(fn,"r").read().split())
                           ) 
    else:
        print LI(I(sess.usr["dept"][a])+
                   B("  未答")
                   )
</t>
<t tx="ZoomQuiet.20051225180959.5">
if len(stat)==0:
    pass
else:
    print H4(" %d名成员完成问卷， 总均分值:: %.2f"%(len(stat)
                                       ,sum(stat)/len(stat)))
#reduce(lambda a,b:a+b, s)
#print H5("%.2f%%"%(reduce(lambda a,b:a+b, stat)/len(stat)))

</t>
<t tx="ZoomQuiet.20051225180959.6">if len(unknow)==0:
    pass
else:
    print BR()+B("未知成员回答情况:")
    print UL(Sum([LI(i+"") for i in unknow])
             ,id='stat')
</t>
<t tx="ZoomQuiet.20051225181414">def _grade(right,answer):
    """根据问卷答案自动计算分数
    """
    grade = 0
    for i in range(0,len(right)):
        try:
            if right[i]==answer[i]:
                grade +=1
            else:
                pass
        except:
            # 默许没有回答的部分都是错的
            pass
            #grade +=1
    
    return 100*(float(grade)/len(right))

    
    
    
    


    
    </t>
<t tx="Zoomq.20050615144554"># 快速利用Karrigell 开发功能站点
# Karrigell.ini 中有如下约定:
# 如果Kariigell 运行在 D:\Karrigell\Karrigell-2.2\ 
# 则其下应该有 karriweb\obp\KwDay1\ 这样的目录，以便安置实例  
[Alias]
..
obp=%(base)s/karriweb/obp
# 为统一的JVF页面输入检验建立访问别名
jvf=%(base)s/karriweb/obp/js
...


</t>
</tnodes>
</leo_file>
